{"version":3,"file":"static/js/198.cbe3697a.chunk.js","mappings":"yPAMAA,OAAOC,WAAaC,8BAOpB,MAAMC,EAAW,CACfC,IAAK,yBAA0BC,IAAK,iE,+FCThCC,EAAgBC,EAAAA,GAAYD,cAuBlC,EArBYE,IAAiC,IAAhC,aAAEC,GAAwBD,EAAPE,GAAKC,EAAAA,EAAAA,GAAAH,EAAAI,GACnC,OACIC,EAAAA,EAAAA,KAACC,EAAAA,WAAU,CAAAC,UACTF,EAAAA,EAAAA,KAACP,GAAaU,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACNN,GAAK,IACTO,MAAO,CACL,CACEC,IAAK,aACLC,KAAM,IACNC,MAAO,iBAGXC,OAAQZ,EACRa,WAAYb,EAAaa,WACzBC,OAAQA,EAAAA,QACRC,UAAW,CAAEC,KAAM,YCjBzBC,EAAOC,EAAAA,WAAoBC,SAASC,eAAe,SAEtCC,WACjB,MAAMrB,OFSkBqB,WACxB,MAAMC,GAAOC,EAAAA,EAAAA,GAAW,CACtBC,aAAcC,GAASC,EAAAA,QAAQD,MAAMA,KAGjCE,GAAoBpB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACrBb,GAAQ,IAAEkC,OAAQ,kBAAmBC,eAAgB,UAgC1D,OA7BAC,EAAAA,EAAAA,QAAmB,CACjBC,QAAS,CACPC,QAASL,EAAsB,kBAAmBA,EAAsB,uBAAqBpB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACxFb,GAAQ,IAAEkC,OAAQ,sBAAuBC,eAAgB,UAC3D,8BAEFtB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACIb,GAAQ,IAAEkC,OAAQ,6BAA8BC,eAAgBpC,cAMzEwC,EAAAA,EAAAA,QAAY,CACVX,OAAMY,SAAS9B,EAAAA,EAAAA,KAAC+B,EAAAA,KAAI,CAACC,MAAO,IACPC,MAAO,CACLC,SAAU,WACVC,KAAM,MACNC,QAAS,OACTC,UAAW,sBACNhB,MAAO,KAAMiB,OAAOtC,EAAAA,EAAAA,KAACuC,EAAAA,MAAK,IAAKC,kBAAoBC,IAC7E,MAAM,KAAEC,GAASD,EAIjB,OAHAA,EAASC,KAAO,CACdC,KAAoB,IAAdD,EAAKC,KAAa,IAAMD,EAAKC,KAAMC,IAAKF,EAAKE,IAAKC,QAASH,EAAKA,MAEjED,KAIJ,CACLvB,OAAM4B,MAAO,CAAC,EAAGC,KAAM,CAAC,EAAGtC,WAAY,CACrCuC,aAAc,aEjDSC,GACpBpC,EAAKqC,QAAOlD,EAAAA,EAAAA,KAACmD,EAAG,CAAC1C,WAAYb,EAAaa,WAAYb,aAAcA,MAG7EwD,CAAWD,E,yFCRX,MAkKA,EAlKqB,CACjBE,KAAM,6BACNC,QAAS,qwEAsCTC,YAAa,gEACbC,YAAa,kCACbC,IAAK,mgDA4DLC,QAAS,CACLC,QAAQ,EACRC,UAAW,mCACX3B,MAAO,GACP4B,KAAM,CAAC,CACXtD,MAAO,mDACPgD,YAAa,mDACbZ,KAAM,iyBAgCNmB,MAAO,CAAC,CACRT,KAAM,4BACNG,YAAa,8CACbO,gBAAiB,+EACjBC,UAAW,GACb,CACEX,KAAM,OACNG,YAAa,OACbQ,UAAW,GACb,CACEX,KAAM,cACNG,YAAa,mBACbQ,UAAW,GACb,CACEX,KAAM,KACNG,YAAa,mBACbQ,UAAW,mB","sources":["preset.js","App.js","bootstrap.js","../../README.md"],"sourcesContent":["import React from 'react';\nimport { preset as fetchPreset } from '@kne/react-fetch';\nimport { Spin, Empty, message } from 'antd';\nimport createAjax from '@kne/axios-fetch';\nimport { preset as remoteLoaderPreset } from '@kne/remote-loader';\n\nwindow.PUBLIC_URL = process.env.PUBLIC_URL;\n\n// url: 'https://registry.npmmirror.com',\n// tpl: '{{url}}/@kne-components%2f{{remote}}/{{version}}/files/build',\n\n// url: 'https://cdn.jsdelivr.net', tpl: '{{url}}/npm/@kne-components/{{remote}}@{{version}}/build'\n\nconst registry = {\n  url: 'https://uc.fatalent.cn', tpl: '{{url}}/packages/@kne-components/{{remote}}/{{version}}/build'\n};\n\nexport const globalInit = async () => {\n  const ajax = createAjax({\n    errorHandler: error => message.error(error)\n  });\n\n  const componentsCoreRemote = {\n    ...registry, remote: 'components-core', defaultVersion: '0.4.3'\n  };\n\n  remoteLoaderPreset({\n    remotes: {\n      default: componentsCoreRemote, 'components-core': componentsCoreRemote, 'components-iconfont': {\n        ...registry, remote: 'components-iconfont', defaultVersion: '0.2.1'\n      }, 'markdown-components-render': process.env.NODE_ENV === 'development' ? {\n        remote: 'markdown-components-render', url: '/', tpl: '{{url}}'\n      } : {\n        ...registry, remote: 'markdown-components-render', defaultVersion: process.env.DEFAULT_VERSION\n      }\n    }\n  });\n\n\n  fetchPreset({\n    ajax, loading: <Spin delay={500}\n                         style={{\n                           position: 'absolute',\n                           left: '50%',\n                           padding: '10px',\n                           transform: 'translateX(-50%)'\n                         }} />, error: null, empty: <Empty />, transformResponse: (response) => {\n      const { data } = response;\n      response.data = {\n        code: data.code === 0 ? 200 : data.code, msg: data.msg, results: data.data\n      };\n      return response;\n    }\n  });\n\n  return {\n    ajax, enums: {}, apis: {}, themeToken: {\n      colorPrimary: '#4183F0'\n    }\n  };\n};\n","import { HashRouter } from \"react-router-dom\";\nimport createEntry from \"@kne/modules-dev/dist/create-entry.modern\";\nimport \"@kne/modules-dev/dist/create-entry.css\";\nimport readme from \"readme\";\n\nconst ExampleRoutes = createEntry.ExampleRoutes;\n\nconst App = ({ globalPreset, ...props }) => {\n  return (\n      <HashRouter>\n        <ExampleRoutes\n            {...props}\n            paths={[\n              {\n                key: \"components\",\n                path: \"/\",\n                title: \"首页\",\n              },\n            ]}\n            preset={globalPreset}\n            themeToken={globalPreset.themeToken}\n            readme={readme}\n            pageProps={{ menu: null }}\n        />\n      </HashRouter>\n  );\n};\n\nexport default App;\n","import { globalInit } from './preset';\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\n\nconst renderRoot = async (App) => {\n  const globalPreset = await globalInit();\n  return root.render(<App themeToken={globalPreset.themeToken} globalPreset={globalPreset} />);\n};\n\nrenderRoot(App);\n","import * as component_1 from '@kne/current-lib_markdown-components-render';\nimport * as component_2 from 'antd';\nimport * as component_3 from '@kne/react-fetch';\nimport * as component_4 from './doc/example.md';\nconst readmeConfig = {\n    name: `markdown-components-render`,\n    summary: `<p>本项目是一个用于渲染 Markdown 内容的组件库，支持通过自定义组件和变量替换来增强 Markdown 的渲染能力。</p>\n<h4>功能特性</h4>\n<ul>\n<li><strong>Markdown 渲染</strong>：支持标准的 Markdown 语法渲染。</li>\n<li><strong>自定义组件</strong>：允许通过 <code>components</code> 属性定义自定义组件类型。</li>\n<li><strong>变量替换</strong>：支持通过 <code>variables</code> 属性实现动态变量替换。</li>\n<li><strong>HTML 转换</strong>：提供 <code>htmlTransform</code> 函数用于转换渲染后的 HTML 内容。</li>\n<li><strong>自定义渲染逻辑</strong>：支持通过 <code>customRender</code> 函数覆盖默认的渲染逻辑。</li>\n</ul>\n<h4>使用场景</h4>\n<ul>\n<li>动态生成文档内容。</li>\n<li>支持变量替换的动态页面渲染。</li>\n<li>自定义 Markdown 渲染逻辑的场景。</li>\n</ul>\n<p>如下的yml会被渲染为Card组件</p>\n<pre><code class=\"language-jsunicoderegexp\">\\`\\`\\`yml\nmd-components:\n  type: Card\n  props:\n    title: 我是标题\n    size: small\n    children: 我是内容\n\\`\\`\\`\n</code></pre>\n<p>如果需要传入参数，可以$开头</p>\n<pre><code class=\"language-jsunicoderegexp\">\\`\\`\\`yml\nmd-components:\n  type: Button\n  props:\n    type: primary\n    children: 我是一个按钮\n    onClick: $onClick\n\\`\\`\\`\n</code></pre>\n<p>支持行内组件:</p>\n<pre><code class=\"language-md\">我是一个行内组件\\`md-components:Button{\"type\":\"link\",\"onClick\":\"$onClick\",\"children\":\"我是一个行内按钮\"}\\`\n</code></pre>`,\n    description: `渲染markdown文本，支持components.`,\n    packageName: `@kne/markdown-components-render`,\n    api: `<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>children</td>\n<td>markdown内容</td>\n<td>string</td>\n<td>-</td>\n</tr>\n<tr>\n<td>components</td>\n<td>用于渲染的组件类型对象，和yml里面的type对应</td>\n<td>object</td>\n<td>-</td>\n</tr>\n<tr>\n<td>variables</td>\n<td>变量对象，如果被渲染组件属性的值中有$开头的变量，则去该变量中查找，如果可以查找到，引用该值</td>\n<td>object</td>\n<td>-</td>\n</tr>\n<tr>\n<td>options</td>\n<td>markdown-it的配置参数</td>\n<td>object</td>\n<td>-</td>\n</tr>\n<tr>\n<td>options.config</td>\n<td>markdown-it初始化构造函数参数</td>\n<td>object</td>\n<td>-</td>\n</tr>\n<tr>\n<td>options.plugins</td>\n<td>markdown-it对象.use 应用的值</td>\n<td>array</td>\n<td>[]</td>\n</tr>\n<tr>\n<td>htmlTransform</td>\n<td>用于转换渲染后的HTML内容的函数</td>\n<td>function</td>\n<td>-</td>\n</tr>\n<tr>\n<td>customRender</td>\n<td>自定义渲染函数，用于覆盖默认的渲染逻辑</td>\n<td>function</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>`,\n    example: {\n        isFull: false,\n        className: `markdown_components_render_c73e7`,\n        style: ``,\n        list: [{\n    title: `这里填写示例标题`,\n    description: `这里填写示例说明`,\n    code: `const { default: MarkdownComponentsRender } = _MarkdownComponentsRender;\nconst { default: mdUrl } = md;\nconst { default: Fetch } = _ReactFetch;\nconst { Card, Button, App, Flex } = antd;\n\nconst BaseExample = () => {\n  const { message } = App.useApp();\n  return (\n    <Fetch\n      url={mdUrl}\n      ignoreSuccessState\n      render={({ data }) => {\n        return (\n          <Flex vertical gap={10}>\n            <MarkdownComponentsRender\n              components={{ Card, Button }}\n              variables={{\n                onClick: () => {\n                  message.info('你好');\n                }\n              }}>\n              {data}\n            </MarkdownComponentsRender>\n          </Flex>\n        );\n      }}></Fetch>\n  );\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_MarkdownComponentsRender\",\n    packageName: \"@kne/current-lib_markdown-components-render\",\n    importStatement: \"import * as _MarkdownComponentsRender from \\\"@kne/markdown-components-render\\\"\",\n    component: component_1\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_2\n},{\n    name: \"_ReactFetch\",\n    packageName: \"@kne/react-fetch\",\n    component: component_3\n},{\n    name: \"md\",\n    packageName: \"./doc/example.md\",\n    component: component_4\n}]\n}]\n    }\n};\nexport default readmeConfig;\n"],"names":["window","PUBLIC_URL","process","registry","url","tpl","ExampleRoutes","createEntry","_ref","globalPreset","props","_objectWithoutProperties","_excluded","_jsx","HashRouter","children","_objectSpread","paths","key","path","title","preset","themeToken","readme","pageProps","menu","root","ReactDOM","document","getElementById","async","ajax","createAjax","errorHandler","error","message","componentsCoreRemote","remote","defaultVersion","remoteLoaderPreset","remotes","default","fetchPreset","loading","Spin","delay","style","position","left","padding","transform","empty","Empty","transformResponse","response","data","code","msg","results","enums","apis","colorPrimary","globalInit","render","App","renderRoot","name","summary","description","packageName","api","example","isFull","className","list","scope","importStatement","component"],"sourceRoot":""}