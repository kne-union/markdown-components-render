{"version":3,"file":"static/js/136.1c2b3c20.chunk.js","mappings":"qTAIA,MCJwF,GAAgBA,yBDInF,CACjBC,KAAM,6BACNC,QAAS,o+BAwBTC,YAAa,gEACbC,YAAa,kCACbC,IAAK,kqCAgDLC,QAAS,CACLC,QAAQ,EACRC,UAAW,mCACXC,MAAO,GACPC,KAAM,CAAC,CACXC,MAAO,mDACPR,YAAa,mDACbS,KAAM,iyBAgCNC,MAAO,CAAC,CACRZ,KAAM,4BACNG,YAAa,8CACbU,gBAAiB,+EACjBC,UAAW,GACb,CACEd,KAAM,OACNG,YAAa,OACbW,UAAW,GACb,CACEd,KAAM,cACNG,YAAa,mBACbW,UAAW,GACb,CACEd,KAAM,KACNG,YAAa,mBACbW,U,cCtISC,EAAW,CAAC,KAAO,6BAA6B,QAAU,QAAQ,gBAAe,EAAK,aAAa,8BAA8B,QAAU,CAAC,CAAC,KAAO,6BAA6B,QAAU,0EAA0E,YAAc,gEAA6B,YAAc,oC","sources":["../../README.md","../node_modules/readme/modules.js"],"sourcesContent":["import * as component_1 from '@kne/current-lib_markdown-components-render';\nimport * as component_2 from 'antd';\nimport * as component_3 from '@kne/react-fetch';\nimport * as component_4 from './doc/example.md';\nconst readmeConfig = {\n    name: `markdown-components-render`,\n    summary: `<p>用于将一个yml格式的数据展示为一个已经定义好的react组件</p>\n<p>如下的yml会被渲染为Card组件</p>\n<pre><code class=\"language-jsunicoderegexp\">\\`\\`\\`yml\nmd-components:\n  type: Card\n  props:\n    title: 我是标题\n    size: small\n    children: 我是内容\n\\`\\`\\`\n</code></pre>\n<p>如果需要传入参数，可以$开头</p>\n<pre><code class=\"language-jsunicoderegexp\">\\`\\`\\`yml\nmd-components:\n  type: Button\n  props:\n    type: primary\n    children: 我是一个按钮\n    onClick: $onClick\n\\`\\`\\`\n</code></pre>\n<p>支持行内组件:</p>\n<pre><code class=\"language-md\">我是一个行内组件\\`md-components:Button{\"type\":\"link\",\"onClick\":\"$onClick\",\"children\":\"我是一个行内按钮\"}\\`\n</code></pre>`,\n    description: `渲染markdown文本，支持components.`,\n    packageName: `@kne/markdown-components-render`,\n    api: `<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>children</td>\n<td>markdown内容</td>\n<td>string</td>\n<td>-</td>\n</tr>\n<tr>\n<td>components</td>\n<td>用于渲染的组件类型对象，和yml里面的type对应</td>\n<td>object</td>\n<td>-</td>\n</tr>\n<tr>\n<td>variables</td>\n<td>变量对象，如果被渲染组件属性的值中有$开头的变量，则去该变量中查找，如果可以查找到，引用该值</td>\n<td>object</td>\n<td>-</td>\n</tr>\n<tr>\n<td>options</td>\n<td>markdown-it的配置参数</td>\n<td>object</td>\n<td>-</td>\n</tr>\n<tr>\n<td>options.config</td>\n<td>markdown-it初始化构造函数参数</td>\n<td>object</td>\n<td>-</td>\n</tr>\n<tr>\n<td>options.plugins</td>\n<td>markdown-it对象.use 应用的值</td>\n<td>array</td>\n<td>[]</td>\n</tr>\n</tbody>\n</table>`,\n    example: {\n        isFull: false,\n        className: `markdown_components_render_c73e7`,\n        style: ``,\n        list: [{\n    title: `这里填写示例标题`,\n    description: `这里填写示例说明`,\n    code: `const { default: MarkdownComponentsRender } = _MarkdownComponentsRender;\nconst { default: mdUrl } = md;\nconst { default: Fetch } = _ReactFetch;\nconst { Card, Button, App, Flex } = antd;\n\nconst BaseExample = () => {\n  const { message } = App.useApp();\n  return (\n    <Fetch\n      url={mdUrl}\n      ignoreSuccessState\n      render={({ data }) => {\n        return (\n          <Flex vertical gap={10}>\n            <MarkdownComponentsRender\n              components={{ Card, Button }}\n              variables={{\n                onClick: () => {\n                  message.info('你好');\n                }\n              }}>\n              {data}\n            </MarkdownComponentsRender>\n          </Flex>\n        );\n      }}></Fetch>\n  );\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_MarkdownComponentsRender\",\n    packageName: \"@kne/current-lib_markdown-components-render\",\n    importStatement: \"import * as _MarkdownComponentsRender from \\\"@kne/markdown-components-render\\\"\",\n    component: component_1\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_2\n},{\n    name: \"_ReactFetch\",\n    packageName: \"@kne/react-fetch\",\n    component: component_3\n},{\n    name: \"md\",\n    packageName: \"./doc/example.md\",\n    component: component_4\n}]\n}]\n    }\n};\nexport default readmeConfig;\n","import MarkdownComponentsRender from '@components/markdown-components-render/README.md';export default {MarkdownComponentsRender};\nexport const manifest = {\"name\":\"markdown-components-render\",\"version\":\"0.1.6\",\"open-version\":true,\"public-url\":\"/markdown-components-render\",\"modules\":[{\"name\":\"markdown-components-render\",\"baseDir\":\"/home/runner/work/markdown-components-render/markdown-components-render\",\"description\":\"渲染markdown文本，支持components.\",\"packageName\":\"@kne/markdown-components-render\"}]};"],"names":["MarkdownComponentsRender","name","summary","description","packageName","api","example","isFull","className","style","list","title","code","scope","importStatement","component","manifest"],"sourceRoot":""}