{"version":3,"file":"static/js/830.a2946856.chunk.js","mappings":"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","sources":["../../src/markdown-it-components.js","../../src/compileVariables.js","../../src/preset.js","../../src/index.js"],"sourcesContent":["import yaml from 'js-yaml';\nimport Ajv from 'ajv';\n\nconst ajv = new Ajv();\n\nconst mdComponentsSchema = {\n  type: 'object',\n  properties: {\n    'md-components': {\n      type: 'object',\n      properties: {\n        type: { type: 'string' },\n        props: { type: 'object' }\n      },\n      required: ['type', 'props']\n    }\n  },\n  required: ['md-components']\n};\n\nconst validate = ajv.compile(mdComponentsSchema);\n\nconst mdComponents = function (md) {\n  const defaultFence = md.renderer.rules.fence;\n  md.renderer.rules.fence = function (tokens, idx, options, env, self) {\n    const token = tokens[idx];\n    if (token.info.trim() === 'yml') {\n      const jsonData = yaml.load(token.content);\n      if (validate(jsonData)) {\n        const element = document.createElement('pre');\n        element.setAttribute('class', 'yaml-components');\n        element.dataset.components = JSON.stringify(jsonData);\n        return element.outerHTML;\n      }\n    }\n    return defaultFence(tokens, idx, options, env, self);\n  };\n};\n\nexport default mdComponents;\n","const compileVariables = (props, variables) => {\n  if (Array.isArray(props)) {\n    return props.map(prop => {\n      return compileVariables(prop, variables);\n    });\n  }\n  if (props && props.toString() === '[object Object]' && Object.keys(props).length > 0) {\n    const newProps = {};\n    Object.keys(props).forEach(key => {\n      newProps[key] = compileVariables(props[key], variables);\n    });\n    return newProps;\n  }\n  if (props && typeof props === 'string' && props.charAt(0) === '$' && variables[props.substring(1)]) {\n    return variables[props.substring(1)];\n  }\n\n  return props;\n};\n\nexport default compileVariables;\n","export const globalParams = {};\n\nexport default newOptions => {\n  return Object.assign(globalParams, newOptions);\n};\n","import React, { useMemo } from 'react';\nimport markdown from 'markdown-it';\nimport mdComponents from './markdown-it-components';\nimport compileVariables from './compileVariables';\nimport useRefCallback from '@kne/use-ref-callback';\nimport merge from 'lodash/merge';\nimport preset, { globalParams } from './preset';\n\nconst MarkdownComponentsRender = ({ children = '', ...props }) => {\n  const { htmlTransform, components = {}, variables = {}, options } = merge({}, globalParams, props);\n  const render = useRefCallback(children => {\n    const { config, plugins } = Object.assign({}, options, {\n      config: {},\n      plugins: []\n    });\n\n    const md = markdown(config);\n    plugins.forEach(plugin => {\n      const pluginArgs = Array.isArray(plugin) ? plugin : [plugin];\n      md.use(...pluginArgs);\n    });\n    md.use(mdComponents);\n\n    const html = md.render(children);\n    const root = document.createElement('div');\n    root.innerHTML = typeof htmlTransform === 'function' ? htmlTransform(html) : html;\n    return [].slice.call(root.children).map((element, index) => {\n      if (element.className === 'yaml-components' && element.dataset.components) {\n        const componentsData = JSON.parse(element.dataset.components);\n        if (!componentsData['md-components']) {\n          return null;\n        }\n        const { type, props } = componentsData['md-components'];\n        const MdComponent = components[type];\n        if (!MdComponent) {\n          return null;\n        }\n        return <MdComponent {...Object.assign({}, compileVariables(props, variables))} key={index} />;\n      }\n\n      return React.createElement(element.tagName.toLowerCase(), {\n        key: index,\n        dangerouslySetInnerHTML: {\n          __html: element.innerHTML\n        }\n      });\n    });\n  });\n\n  return useMemo(() => {\n    return render(children);\n  }, [children, render]);\n};\n\nexport default MarkdownComponentsRender;\nexport { preset };\n"],"names":["validate","Ajv","compile","type","properties","props","required","mdComponents","md","defaultFence","renderer","rules","fence","tokens","idx","options","env","self","token","info","trim","jsonData","yaml","content","element","document","createElement","setAttribute","dataset","components","JSON","stringify","outerHTML","compileVariables","variables","Array","isArray","map","prop","toString","Object","keys","length","newProps","forEach","key","charAt","substring","globalParams","preset","newOptions","assign","MarkdownComponentsRender","_ref","children","_objectWithoutPropertiesLoose","_excluded","htmlTransform","merge","render","useRefCallback","config","plugins","markdown","plugin","pluginArgs","use","html","root","innerHTML","slice","call","index","className","componentsData","parse","MdComponent","React","_extends","tagName","toLowerCase","dangerouslySetInnerHTML","__html","useMemo"],"sourceRoot":""}