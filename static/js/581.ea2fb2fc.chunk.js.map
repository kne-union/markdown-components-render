{"version":3,"file":"static/js/581.ea2fb2fc.chunk.js","mappings":"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AY,CAAC,GAAG,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,GAAG,UAAU,CAAC,EAAE,WAAW,CAAC,EAAE,UAAU,CAAC,EAAE,WAAW,CAAC,EAAE,YAAY,CAAC,EAAE,SAAS,CAAC,EAAE,YAAY,CAAC,EAAE,UAAU,CAAC,EAAE,SAAS,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,WAAW,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,cAAc,CAAC,EAAE,UAAU,CAAC,EAAE,SAAS,CAAC,EAAE,eAAe,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,WAAW,CAAC,EAAE,WAAW,CAAC,EAAE,UAAU,CAAC,EAAE,eAAe,CAAC,EAAE,WAAW,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,WAAW,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,WAAW,CAAC,EAAE,YAAY,CAAC,EAAE,UAAU,CAAC,EAAE,WAAW,CAAC,EAAE,WAAW,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,WAAW,CAAC,EAAE,UAAU,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,WAAW,CAAC,EAAE,UAAU,CAAC,EAAE,SAAS,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,WAAW,CAAC,EAAE,YAAY,CAAC,EAAE,UAAU,CAAC,EAAE,WAAW,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,WAAW,CAAC,EAAE,UAAU,CAAC,EAAE,YAAY,CAAC,EAAE,WAAW,CAAC,EAAE,WAAW,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,WAAW,CAAC,EAAE,YAAY,CAAC,EAAE,UAAU,CAAC,EAAE,WAAW,CAAC,EAAE,WAAW,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,WAAW,CAAC,EAAE,UAAU,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,WAAW,CAAC,EAAE,UAAU,CAAC,EAAE,SAAS,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,WAAW,CAAC,EAAE,YAAY,CAAC,EAAE,UAAU,CAAC,EAAE,SAAS,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,WAAW,CAAC,EAAE,UAAU,CAAC,EAAE,YAAY,CAAC,EAAE,WAAW,CAAC,EAAE,UAAU,CAAC,EAAE,WAAW,CAAC,EAAE,WAAW,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,WAAW,CAAC,EAAE,WAAW,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,WAAW,CAAC,EAAE,WAAW,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,WAAW,CAAC,EAAE,WAAW,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,WAAW,CAAC,EAAE,WAAW,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,WAAW,CAAC,EAAE,WAAW,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,YAAY,CAAC,EAAE,WAAW,CAAC,EAAE,WAAW,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,WAAW,CAAC,EAAE,WAAW,CAAC,EAAE,WAAW,CAAC,EAAE,WAAW,CAAC,EAAE,UAAU,CAAC,EAAE,WAAW,CAAC,EAAE,WAAW,CAAC,EAAE,WAAW,CAAC,EAAE,WAAW,CAAC,EAAE,WAAW,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YA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AAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,SAAS,CAAC,EAAE,YAAY,CAAC,EAAE,SAAS,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,SAAS,CAAC,EAAE,YAAY,CAAC,EAAE,SAAS,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,WAAW,CAAC,EAAE,UAAU,CAAC,EAAE,WAAW,CAAC,EAAE,UAAU,CAAC,EAAE,YAAY,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,WAAW,CAAC,EAAE,UAAU,CAAC,EAAE,WAAW,CAAC,EAAE,UAAU,CAAC,KAAK,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,WAAW,CAAC,EAAE,YAAY,CAAC,EAAE,eAAe,CAAC,EAAE,YAAY,CAAC,EAAE,yBAAyB,CAAC,EAAE,UAAU,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,UAAU,CAAC,EAAE,WAAW,CAAC,EAAE,WAAW,CAAC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","sources":["../../node_modules/ajv/lib/vocabularies/applicator/if.ts","../../node_modules/ajv/lib/runtime/validation_error.ts","../../node_modules/ajv/lib/vocabularies/validation/pattern.ts","../../node_modules/ajv/lib/compile/errors.ts","../../node_modules/ajv/lib/vocabularies/applicator/contains.ts","../../node_modules/ajv/lib/compile/validate/dataType.ts","../../node_modules/ajv/lib/core.ts","../../node_modules/ajv/lib/compile/codegen/index.ts","../../node_modules/ajv/lib/compile/validate/keyword.ts","../../node_modules/ajv/lib/ajv.ts","../../node_modules/ajv/lib/compile/util.ts","../../node_modules/fast-uri/lib/schemes.js","../../node_modules/ajv/lib/compile/ref_error.ts","../../node_modules/ajv/lib/vocabularies/core/id.ts","../../node_modules/ajv/lib/vocabularies/format/format.ts","../../node_modules/fast-uri/lib/utils.js","../../node_modules/ajv/lib/vocabularies/validation/limitProperties.ts","../../node_modules/ajv/lib/compile/codegen/code.ts","../../node_modules/ajv/lib/vocabularies/applicator/allOf.ts","../../node_modules/ajv/lib/compile/index.ts","../../node_modules/ajv/lib/vocabularies/applicator/oneOf.ts","../../node_modules/ajv/lib/vocabularies/validation/required.ts","../../node_modules/ajv/lib/vocabularies/applicator/thenElse.ts","../../node_modules/ajv/lib/vocabularies/validation/const.ts","../../node_modules/ajv/lib/vocabularies/metadata.ts","../../node_modules/ajv/lib/vocabularies/applicator/not.ts","../../node_modules/ajv/lib/vocabularies/applicator/properties.ts","../../node_modules/ajv/lib/vocabularies/core/index.ts","../../node_modules/fast-uri/lib/scopedChars.js","../../node_modules/ajv/lib/vocabularies/discriminator/types.ts","../../node_modules/ajv/lib/vocabularies/applicator/propertyNames.ts","../../node_modules/ajv/lib/vocabularies/validation/limitNumber.ts","../../node_modules/ajv/lib/vocabularies/validation/uniqueItems.ts","../../node_modules/ajv/lib/compile/resolve.ts","../../node_modules/ajv/lib/compile/validate/defaults.ts","../../node_modules/ajv/lib/compile/validate/applicability.ts","../../node_modules/ajv/lib/vocabularies/core/ref.ts","../../node_modules/ajv/lib/vocabularies/validation/index.ts","../../node_modules/ajv/lib/vocabularies/applicator/dependencies.ts","../../node_modules/js-yaml/dist/js-yaml.mjs","../../node_modules/ajv/lib/vocabularies/discriminator/index.ts","../../node_modules/ajv/lib/vocabularies/applicator/prefixItems.ts","../../node_modules/ajv/lib/compile/validate/subschema.ts","../../node_modules/ajv/lib/runtime/equal.ts","../../node_modules/ajv/lib/compile/codegen/scope.ts","../../node_modules/ajv/lib/vocabularies/applicator/items.ts","../../node_modules/ajv/lib/vocabularies/applicator/anyOf.ts","../../node_modules/ajv/lib/vocabularies/validation/multipleOf.ts","../../node_modules/ajv/lib/compile/rules.ts","../../node_modules/ajv/lib/vocabularies/validation/enum.ts","../../node_modules/json-schema-traverse/index.js","../../node_modules/ajv/lib/vocabularies/applicator/patternProperties.ts","../../node_modules/ajv/lib/vocabularies/applicator/items2020.ts","../../node_modules/ajv/lib/vocabularies/code.ts","../../node_modules/ajv/lib/vocabularies/validation/limitItems.ts","../../node_modules/mdurl/lib/decode.mjs","../../node_modules/mdurl/lib/encode.mjs","../../node_modules/mdurl/lib/format.mjs","../../node_modules/mdurl/lib/parse.mjs","../../node_modules/uc.micro/categories/P/regex.mjs","../../node_modules/uc.micro/categories/S/regex.mjs","../../node_modules/uc.micro/properties/Any/regex.mjs","../../node_modules/uc.micro/categories/Cc/regex.mjs","../../node_modules/uc.micro/categories/Cf/regex.mjs","../../node_modules/uc.micro/categories/Z/regex.mjs","https://raw.githubusercontent.com/fb55/entities/61afd4701eaa736978b13c7351cd3de9a96b04bc/src/generated/decode-data-html.ts","https://raw.githubusercontent.com/fb55/entities/61afd4701eaa736978b13c7351cd3de9a96b04bc/src/generated/decode-data-xml.ts","https://raw.githubusercontent.com/fb55/entities/61afd4701eaa736978b13c7351cd3de9a96b04bc/src/decode_codepoint.ts","https://raw.githubusercontent.com/fb55/entities/61afd4701eaa736978b13c7351cd3de9a96b04bc/src/decode.ts","https://raw.githubusercontent.com/fb55/entities/61afd4701eaa736978b13c7351cd3de9a96b04bc/src/generated/encode-html.ts","https://raw.githubusercontent.com/fb55/entities/61afd4701eaa736978b13c7351cd3de9a96b04bc/src/escape.ts","https://raw.githubusercontent.com/fb55/entities/61afd4701eaa736978b13c7351cd3de9a96b04bc/src/index.ts","../../node_modules/markdown-it/lib/common/utils.mjs","../../node_modules/markdown-it/lib/helpers/parse_link_label.mjs","../../node_modules/markdown-it/lib/helpers/parse_link_destination.mjs","../../node_modules/markdown-it/lib/helpers/parse_link_title.mjs","../../node_modules/markdown-it/lib/renderer.mjs","../../node_modules/markdown-it/lib/ruler.mjs","../../node_modules/markdown-it/lib/token.mjs","../../node_modules/markdown-it/lib/rules_core/state_core.mjs","../../node_modules/markdown-it/lib/rules_core/normalize.mjs","../../node_modules/markdown-it/lib/rules_core/linkify.mjs","../../node_modules/markdown-it/lib/rules_core/replacements.mjs","../../node_modules/markdown-it/lib/rules_core/smartquotes.mjs","../../node_modules/markdown-it/lib/parser_core.mjs","../../node_modules/markdown-it/lib/rules_core/block.mjs","../../node_modules/markdown-it/lib/rules_core/inline.mjs","../../node_modules/markdown-it/lib/rules_core/text_join.mjs","../../node_modules/markdown-it/lib/rules_block/state_block.mjs","../../node_modules/markdown-it/lib/rules_block/table.mjs","../../node_modules/markdown-it/lib/rules_block/list.mjs","../../node_modules/markdown-it/lib/common/html_blocks.mjs","../../node_modules/markdown-it/lib/common/html_re.mjs","../../node_modules/markdown-it/lib/rules_block/html_block.mjs","../../node_modules/markdown-it/lib/parser_block.mjs","../../node_modules/markdown-it/lib/rules_block/code.mjs","../../node_modules/markdown-it/lib/rules_block/fence.mjs","../../node_modules/markdown-it/lib/rules_block/blockquote.mjs","../../node_modules/markdown-it/lib/rules_block/hr.mjs","../../node_modules/markdown-it/lib/rules_block/reference.mjs","../../node_modules/markdown-it/lib/rules_block/heading.mjs","../../node_modules/markdown-it/lib/rules_block/lheading.mjs","../../node_modules/markdown-it/lib/rules_block/paragraph.mjs","../../node_modules/markdown-it/lib/rules_inline/state_inline.mjs","../../node_modules/markdown-it/lib/rules_inline/text.mjs","../../node_modules/markdown-it/lib/rules_inline/linkify.mjs","../../node_modules/markdown-it/lib/rules_inline/escape.mjs","../../node_modules/markdown-it/lib/rules_inline/strikethrough.mjs","../../node_modules/markdown-it/lib/rules_inline/emphasis.mjs","../../node_modules/markdown-it/lib/rules_inline/autolink.mjs","../../node_modules/markdown-it/lib/rules_inline/entity.mjs","../../node_modules/markdown-it/lib/rules_inline/balance_pairs.mjs","../../node_modules/markdown-it/lib/parser_inline.mjs","../../node_modules/markdown-it/lib/rules_inline/newline.mjs","../../node_modules/markdown-it/lib/rules_inline/backticks.mjs","../../node_modules/markdown-it/lib/rules_inline/link.mjs","../../node_modules/markdown-it/lib/rules_inline/image.mjs","../../node_modules/markdown-it/lib/rules_inline/html_inline.mjs","../../node_modules/markdown-it/lib/rules_inline/fragments_join.mjs","../../node_modules/linkify-it/index.mjs","../../node_modules/linkify-it/lib/re.mjs","../../node_modules/punycode.js/punycode.es6.js","../../node_modules/markdown-it/lib/index.mjs","../../node_modules/markdown-it/lib/presets/default.mjs","../../node_modules/markdown-it/lib/presets/zero.mjs","../../node_modules/markdown-it/lib/presets/commonmark.mjs","../../node_modules/ajv/lib/runtime/ucs2length.ts","../../node_modules/@kne/use-ref-callback/src/index.js","../../node_modules/ajv/lib/compile/validate/index.ts","../../node_modules/ajv/lib/compile/names.ts","../../node_modules/ajv/lib/vocabularies/validation/limitLength.ts","../../node_modules/fast-deep-equal/index.js","../../node_modules/ajv/lib/vocabularies/applicator/additionalItems.ts","../../node_modules/fast-uri/index.js","../../node_modules/ajv/lib/vocabularies/format/index.ts","../../node_modules/ajv/lib/vocabularies/applicator/index.ts","../../node_modules/ajv/lib/compile/validate/boolSchema.ts","../../node_modules/ajv/lib/vocabularies/draft7.ts","../../node_modules/ajv/lib/runtime/uri.ts","../../node_modules/ajv/lib/vocabularies/applicator/additionalProperties.ts"],"sourcesContent":["import type {\n  CodeKeywordDefinition,\n  ErrorObject,\n  KeywordErrorDefinition,\n  AnySchema,\n} from \"../../types\"\nimport type {SchemaObjCxt} from \"../../compile\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str, not, Name} from \"../../compile/codegen\"\nimport {alwaysValidSchema, checkStrictMode} from \"../../compile/util\"\n\nexport type IfKeywordError = ErrorObject<\"if\", {failingKeyword: string}, AnySchema>\n\nconst error: KeywordErrorDefinition = {\n  message: ({params}) => str`must match \"${params.ifClause}\" schema`,\n  params: ({params}) => _`{failingKeyword: ${params.ifClause}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"if\",\n  schemaType: [\"object\", \"boolean\"],\n  trackErrors: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {gen, parentSchema, it} = cxt\n    if (parentSchema.then === undefined && parentSchema.else === undefined) {\n      checkStrictMode(it, '\"if\" without \"then\" and \"else\" is ignored')\n    }\n    const hasThen = hasSchema(it, \"then\")\n    const hasElse = hasSchema(it, \"else\")\n    if (!hasThen && !hasElse) return\n\n    const valid = gen.let(\"valid\", true)\n    const schValid = gen.name(\"_valid\")\n    validateIf()\n    cxt.reset()\n\n    if (hasThen && hasElse) {\n      const ifClause = gen.let(\"ifClause\")\n      cxt.setParams({ifClause})\n      gen.if(schValid, validateClause(\"then\", ifClause), validateClause(\"else\", ifClause))\n    } else if (hasThen) {\n      gen.if(schValid, validateClause(\"then\"))\n    } else {\n      gen.if(not(schValid), validateClause(\"else\"))\n    }\n\n    cxt.pass(valid, () => cxt.error(true))\n\n    function validateIf(): void {\n      const schCxt = cxt.subschema(\n        {\n          keyword: \"if\",\n          compositeRule: true,\n          createErrors: false,\n          allErrors: false,\n        },\n        schValid\n      )\n      cxt.mergeEvaluated(schCxt)\n    }\n\n    function validateClause(keyword: string, ifClause?: Name): () => void {\n      return () => {\n        const schCxt = cxt.subschema({keyword}, schValid)\n        gen.assign(valid, schValid)\n        cxt.mergeValidEvaluated(schCxt, valid)\n        if (ifClause) gen.assign(ifClause, _`${keyword}`)\n        else cxt.setParams({ifClause: keyword})\n      }\n    }\n  },\n}\n\nfunction hasSchema(it: SchemaObjCxt, keyword: string): boolean {\n  const schema = it.schema[keyword]\n  return schema !== undefined && !alwaysValidSchema(it, schema)\n}\n\nexport default def\n","import type {ErrorObject} from \"../types\"\n\nexport default class ValidationError extends Error {\n  readonly errors: Partial<ErrorObject>[]\n  readonly ajv: true\n  readonly validation: true\n\n  constructor(errors: Partial<ErrorObject>[]) {\n    super(\"validation failed\")\n    this.errors = errors\n    this.ajv = this.validation = true\n  }\n}\n","import type {CodeKeywordDefinition, ErrorObject, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {usePattern} from \"../code\"\nimport {_, str} from \"../../compile/codegen\"\n\nexport type PatternError = ErrorObject<\"pattern\", {pattern: string}, string | {$data: string}>\n\nconst error: KeywordErrorDefinition = {\n  message: ({schemaCode}) => str`must match pattern \"${schemaCode}\"`,\n  params: ({schemaCode}) => _`{pattern: ${schemaCode}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"pattern\",\n  type: \"string\",\n  schemaType: \"string\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {data, $data, schema, schemaCode, it} = cxt\n    // TODO regexp should be wrapped in try/catchs\n    const u = it.opts.unicodeRegExp ? \"u\" : \"\"\n    const regExp = $data ? _`(new RegExp(${schemaCode}, ${u}))` : usePattern(cxt, schema)\n    cxt.fail$data(_`!${regExp}.test(${data})`)\n  },\n}\n\nexport default def\n","import type {KeywordErrorCxt, KeywordErrorDefinition} from \"../types\"\nimport type {SchemaCxt} from \"./index\"\nimport {CodeGen, _, str, strConcat, Code, Name} from \"./codegen\"\nimport {SafeExpr} from \"./codegen/code\"\nimport {getErrorPath, Type} from \"./util\"\nimport N from \"./names\"\n\nexport const keywordError: KeywordErrorDefinition = {\n  message: ({keyword}) => str`must pass \"${keyword}\" keyword validation`,\n}\n\nexport const keyword$DataError: KeywordErrorDefinition = {\n  message: ({keyword, schemaType}) =>\n    schemaType\n      ? str`\"${keyword}\" keyword must be ${schemaType} ($data)`\n      : str`\"${keyword}\" keyword is invalid ($data)`,\n}\n\nexport interface ErrorPaths {\n  instancePath?: Code\n  schemaPath?: string\n  parentSchema?: boolean\n}\n\nexport function reportError(\n  cxt: KeywordErrorCxt,\n  error: KeywordErrorDefinition = keywordError,\n  errorPaths?: ErrorPaths,\n  overrideAllErrors?: boolean\n): void {\n  const {it} = cxt\n  const {gen, compositeRule, allErrors} = it\n  const errObj = errorObjectCode(cxt, error, errorPaths)\n  if (overrideAllErrors ?? (compositeRule || allErrors)) {\n    addError(gen, errObj)\n  } else {\n    returnErrors(it, _`[${errObj}]`)\n  }\n}\n\nexport function reportExtraError(\n  cxt: KeywordErrorCxt,\n  error: KeywordErrorDefinition = keywordError,\n  errorPaths?: ErrorPaths\n): void {\n  const {it} = cxt\n  const {gen, compositeRule, allErrors} = it\n  const errObj = errorObjectCode(cxt, error, errorPaths)\n  addError(gen, errObj)\n  if (!(compositeRule || allErrors)) {\n    returnErrors(it, N.vErrors)\n  }\n}\n\nexport function resetErrorsCount(gen: CodeGen, errsCount: Name): void {\n  gen.assign(N.errors, errsCount)\n  gen.if(_`${N.vErrors} !== null`, () =>\n    gen.if(\n      errsCount,\n      () => gen.assign(_`${N.vErrors}.length`, errsCount),\n      () => gen.assign(N.vErrors, null)\n    )\n  )\n}\n\nexport function extendErrors({\n  gen,\n  keyword,\n  schemaValue,\n  data,\n  errsCount,\n  it,\n}: KeywordErrorCxt): void {\n  /* istanbul ignore if */\n  if (errsCount === undefined) throw new Error(\"ajv implementation error\")\n  const err = gen.name(\"err\")\n  gen.forRange(\"i\", errsCount, N.errors, (i) => {\n    gen.const(err, _`${N.vErrors}[${i}]`)\n    gen.if(_`${err}.instancePath === undefined`, () =>\n      gen.assign(_`${err}.instancePath`, strConcat(N.instancePath, it.errorPath))\n    )\n    gen.assign(_`${err}.schemaPath`, str`${it.errSchemaPath}/${keyword}`)\n    if (it.opts.verbose) {\n      gen.assign(_`${err}.schema`, schemaValue)\n      gen.assign(_`${err}.data`, data)\n    }\n  })\n}\n\nfunction addError(gen: CodeGen, errObj: Code): void {\n  const err = gen.const(\"err\", errObj)\n  gen.if(\n    _`${N.vErrors} === null`,\n    () => gen.assign(N.vErrors, _`[${err}]`),\n    _`${N.vErrors}.push(${err})`\n  )\n  gen.code(_`${N.errors}++`)\n}\n\nfunction returnErrors(it: SchemaCxt, errs: Code): void {\n  const {gen, validateName, schemaEnv} = it\n  if (schemaEnv.$async) {\n    gen.throw(_`new ${it.ValidationError as Name}(${errs})`)\n  } else {\n    gen.assign(_`${validateName}.errors`, errs)\n    gen.return(false)\n  }\n}\n\nconst E = {\n  keyword: new Name(\"keyword\"),\n  schemaPath: new Name(\"schemaPath\"), // also used in JTD errors\n  params: new Name(\"params\"),\n  propertyName: new Name(\"propertyName\"),\n  message: new Name(\"message\"),\n  schema: new Name(\"schema\"),\n  parentSchema: new Name(\"parentSchema\"),\n}\n\nfunction errorObjectCode(\n  cxt: KeywordErrorCxt,\n  error: KeywordErrorDefinition,\n  errorPaths?: ErrorPaths\n): Code {\n  const {createErrors} = cxt.it\n  if (createErrors === false) return _`{}`\n  return errorObject(cxt, error, errorPaths)\n}\n\nfunction errorObject(\n  cxt: KeywordErrorCxt,\n  error: KeywordErrorDefinition,\n  errorPaths: ErrorPaths = {}\n): Code {\n  const {gen, it} = cxt\n  const keyValues: [Name, SafeExpr | string][] = [\n    errorInstancePath(it, errorPaths),\n    errorSchemaPath(cxt, errorPaths),\n  ]\n  extraErrorProps(cxt, error, keyValues)\n  return gen.object(...keyValues)\n}\n\nfunction errorInstancePath({errorPath}: SchemaCxt, {instancePath}: ErrorPaths): [Name, Code] {\n  const instPath = instancePath\n    ? str`${errorPath}${getErrorPath(instancePath, Type.Str)}`\n    : errorPath\n  return [N.instancePath, strConcat(N.instancePath, instPath)]\n}\n\nfunction errorSchemaPath(\n  {keyword, it: {errSchemaPath}}: KeywordErrorCxt,\n  {schemaPath, parentSchema}: ErrorPaths\n): [Name, string | Code] {\n  let schPath = parentSchema ? errSchemaPath : str`${errSchemaPath}/${keyword}`\n  if (schemaPath) {\n    schPath = str`${schPath}${getErrorPath(schemaPath, Type.Str)}`\n  }\n  return [E.schemaPath, schPath]\n}\n\nfunction extraErrorProps(\n  cxt: KeywordErrorCxt,\n  {params, message}: KeywordErrorDefinition,\n  keyValues: [Name, SafeExpr | string][]\n): void {\n  const {keyword, data, schemaValue, it} = cxt\n  const {opts, propertyName, topSchemaRef, schemaPath} = it\n  keyValues.push(\n    [E.keyword, keyword],\n    [E.params, typeof params == \"function\" ? params(cxt) : params || _`{}`]\n  )\n  if (opts.messages) {\n    keyValues.push([E.message, typeof message == \"function\" ? message(cxt) : message])\n  }\n  if (opts.verbose) {\n    keyValues.push(\n      [E.schema, schemaValue],\n      [E.parentSchema, _`${topSchemaRef}${schemaPath}`],\n      [N.data, data]\n    )\n  }\n  if (propertyName) keyValues.push([E.propertyName, propertyName])\n}\n","import type {\n  CodeKeywordDefinition,\n  KeywordErrorDefinition,\n  ErrorObject,\n  AnySchema,\n} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str, Name} from \"../../compile/codegen\"\nimport {alwaysValidSchema, checkStrictMode, Type} from \"../../compile/util\"\n\nexport type ContainsError = ErrorObject<\n  \"contains\",\n  {minContains: number; maxContains?: number},\n  AnySchema\n>\n\nconst error: KeywordErrorDefinition = {\n  message: ({params: {min, max}}) =>\n    max === undefined\n      ? str`must contain at least ${min} valid item(s)`\n      : str`must contain at least ${min} and no more than ${max} valid item(s)`,\n  params: ({params: {min, max}}) =>\n    max === undefined ? _`{minContains: ${min}}` : _`{minContains: ${min}, maxContains: ${max}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"contains\",\n  type: \"array\",\n  schemaType: [\"object\", \"boolean\"],\n  before: \"uniqueItems\",\n  trackErrors: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {gen, schema, parentSchema, data, it} = cxt\n    let min: number\n    let max: number | undefined\n    const {minContains, maxContains} = parentSchema\n    if (it.opts.next) {\n      min = minContains === undefined ? 1 : minContains\n      max = maxContains\n    } else {\n      min = 1\n    }\n    const len = gen.const(\"len\", _`${data}.length`)\n    cxt.setParams({min, max})\n    if (max === undefined && min === 0) {\n      checkStrictMode(it, `\"minContains\" == 0 without \"maxContains\": \"contains\" keyword ignored`)\n      return\n    }\n    if (max !== undefined && min > max) {\n      checkStrictMode(it, `\"minContains\" > \"maxContains\" is always invalid`)\n      cxt.fail()\n      return\n    }\n    if (alwaysValidSchema(it, schema)) {\n      let cond = _`${len} >= ${min}`\n      if (max !== undefined) cond = _`${cond} && ${len} <= ${max}`\n      cxt.pass(cond)\n      return\n    }\n\n    it.items = true\n    const valid = gen.name(\"valid\")\n    if (max === undefined && min === 1) {\n      validateItems(valid, () => gen.if(valid, () => gen.break()))\n    } else if (min === 0) {\n      gen.let(valid, true)\n      if (max !== undefined) gen.if(_`${data}.length > 0`, validateItemsWithCount)\n    } else {\n      gen.let(valid, false)\n      validateItemsWithCount()\n    }\n    cxt.result(valid, () => cxt.reset())\n\n    function validateItemsWithCount(): void {\n      const schValid = gen.name(\"_valid\")\n      const count = gen.let(\"count\", 0)\n      validateItems(schValid, () => gen.if(schValid, () => checkLimits(count)))\n    }\n\n    function validateItems(_valid: Name, block: () => void): void {\n      gen.forRange(\"i\", 0, len, (i) => {\n        cxt.subschema(\n          {\n            keyword: \"contains\",\n            dataProp: i,\n            dataPropType: Type.Num,\n            compositeRule: true,\n          },\n          _valid\n        )\n        block()\n      })\n    }\n\n    function checkLimits(count: Name): void {\n      gen.code(_`${count}++`)\n      if (max === undefined) {\n        gen.if(_`${count} >= ${min}`, () => gen.assign(valid, true).break())\n      } else {\n        gen.if(_`${count} > ${max}`, () => gen.assign(valid, false).break())\n        if (min === 1) gen.assign(valid, true)\n        else gen.if(_`${count} >= ${min}`, () => gen.assign(valid, true))\n      }\n    }\n  },\n}\n\nexport default def\n","import type {\n  KeywordErrorDefinition,\n  KeywordErrorCxt,\n  ErrorObject,\n  AnySchemaObject,\n} from \"../../types\"\nimport type {SchemaObjCxt} from \"..\"\nimport {isJSONType, JSONType} from \"../rules\"\nimport {schemaHasRulesForType} from \"./applicability\"\nimport {reportError} from \"../errors\"\nimport {_, nil, and, not, operators, Code, Name} from \"../codegen\"\nimport {toHash, schemaRefOrVal} from \"../util\"\n\nexport enum DataType {\n  Correct,\n  Wrong,\n}\n\nexport function getSchemaTypes(schema: AnySchemaObject): JSONType[] {\n  const types = getJSONTypes(schema.type)\n  const hasNull = types.includes(\"null\")\n  if (hasNull) {\n    if (schema.nullable === false) throw new Error(\"type: null contradicts nullable: false\")\n  } else {\n    if (!types.length && schema.nullable !== undefined) {\n      throw new Error('\"nullable\" cannot be used without \"type\"')\n    }\n    if (schema.nullable === true) types.push(\"null\")\n  }\n  return types\n}\n\n// eslint-disable-next-line @typescript-eslint/no-redundant-type-constituents\nexport function getJSONTypes(ts: unknown | unknown[]): JSONType[] {\n  const types: unknown[] = Array.isArray(ts) ? ts : ts ? [ts] : []\n  if (types.every(isJSONType)) return types\n  throw new Error(\"type must be JSONType or JSONType[]: \" + types.join(\",\"))\n}\n\nexport function coerceAndCheckDataType(it: SchemaObjCxt, types: JSONType[]): boolean {\n  const {gen, data, opts} = it\n  const coerceTo = coerceToTypes(types, opts.coerceTypes)\n  const checkTypes =\n    types.length > 0 &&\n    !(coerceTo.length === 0 && types.length === 1 && schemaHasRulesForType(it, types[0]))\n  if (checkTypes) {\n    const wrongType = checkDataTypes(types, data, opts.strictNumbers, DataType.Wrong)\n    gen.if(wrongType, () => {\n      if (coerceTo.length) coerceData(it, types, coerceTo)\n      else reportTypeError(it)\n    })\n  }\n  return checkTypes\n}\n\nconst COERCIBLE: Set<JSONType> = new Set([\"string\", \"number\", \"integer\", \"boolean\", \"null\"])\nfunction coerceToTypes(types: JSONType[], coerceTypes?: boolean | \"array\"): JSONType[] {\n  return coerceTypes\n    ? types.filter((t) => COERCIBLE.has(t) || (coerceTypes === \"array\" && t === \"array\"))\n    : []\n}\n\nfunction coerceData(it: SchemaObjCxt, types: JSONType[], coerceTo: JSONType[]): void {\n  const {gen, data, opts} = it\n  const dataType = gen.let(\"dataType\", _`typeof ${data}`)\n  const coerced = gen.let(\"coerced\", _`undefined`)\n  if (opts.coerceTypes === \"array\") {\n    gen.if(_`${dataType} == 'object' && Array.isArray(${data}) && ${data}.length == 1`, () =>\n      gen\n        .assign(data, _`${data}[0]`)\n        .assign(dataType, _`typeof ${data}`)\n        .if(checkDataTypes(types, data, opts.strictNumbers), () => gen.assign(coerced, data))\n    )\n  }\n  gen.if(_`${coerced} !== undefined`)\n  for (const t of coerceTo) {\n    if (COERCIBLE.has(t) || (t === \"array\" && opts.coerceTypes === \"array\")) {\n      coerceSpecificType(t)\n    }\n  }\n  gen.else()\n  reportTypeError(it)\n  gen.endIf()\n\n  gen.if(_`${coerced} !== undefined`, () => {\n    gen.assign(data, coerced)\n    assignParentData(it, coerced)\n  })\n\n  function coerceSpecificType(t: string): void {\n    switch (t) {\n      case \"string\":\n        gen\n          .elseIf(_`${dataType} == \"number\" || ${dataType} == \"boolean\"`)\n          .assign(coerced, _`\"\" + ${data}`)\n          .elseIf(_`${data} === null`)\n          .assign(coerced, _`\"\"`)\n        return\n      case \"number\":\n        gen\n          .elseIf(\n            _`${dataType} == \"boolean\" || ${data} === null\n              || (${dataType} == \"string\" && ${data} && ${data} == +${data})`\n          )\n          .assign(coerced, _`+${data}`)\n        return\n      case \"integer\":\n        gen\n          .elseIf(\n            _`${dataType} === \"boolean\" || ${data} === null\n              || (${dataType} === \"string\" && ${data} && ${data} == +${data} && !(${data} % 1))`\n          )\n          .assign(coerced, _`+${data}`)\n        return\n      case \"boolean\":\n        gen\n          .elseIf(_`${data} === \"false\" || ${data} === 0 || ${data} === null`)\n          .assign(coerced, false)\n          .elseIf(_`${data} === \"true\" || ${data} === 1`)\n          .assign(coerced, true)\n        return\n      case \"null\":\n        gen.elseIf(_`${data} === \"\" || ${data} === 0 || ${data} === false`)\n        gen.assign(coerced, null)\n        return\n\n      case \"array\":\n        gen\n          .elseIf(\n            _`${dataType} === \"string\" || ${dataType} === \"number\"\n              || ${dataType} === \"boolean\" || ${data} === null`\n          )\n          .assign(coerced, _`[${data}]`)\n    }\n  }\n}\n\nfunction assignParentData({gen, parentData, parentDataProperty}: SchemaObjCxt, expr: Name): void {\n  // TODO use gen.property\n  gen.if(_`${parentData} !== undefined`, () =>\n    gen.assign(_`${parentData}[${parentDataProperty}]`, expr)\n  )\n}\n\nexport function checkDataType(\n  dataType: JSONType,\n  data: Name,\n  strictNums?: boolean | \"log\",\n  correct = DataType.Correct\n): Code {\n  const EQ = correct === DataType.Correct ? operators.EQ : operators.NEQ\n  let cond: Code\n  switch (dataType) {\n    case \"null\":\n      return _`${data} ${EQ} null`\n    case \"array\":\n      cond = _`Array.isArray(${data})`\n      break\n    case \"object\":\n      cond = _`${data} && typeof ${data} == \"object\" && !Array.isArray(${data})`\n      break\n    case \"integer\":\n      cond = numCond(_`!(${data} % 1) && !isNaN(${data})`)\n      break\n    case \"number\":\n      cond = numCond()\n      break\n    default:\n      return _`typeof ${data} ${EQ} ${dataType}`\n  }\n  return correct === DataType.Correct ? cond : not(cond)\n\n  function numCond(_cond: Code = nil): Code {\n    return and(_`typeof ${data} == \"number\"`, _cond, strictNums ? _`isFinite(${data})` : nil)\n  }\n}\n\nexport function checkDataTypes(\n  dataTypes: JSONType[],\n  data: Name,\n  strictNums?: boolean | \"log\",\n  correct?: DataType\n): Code {\n  if (dataTypes.length === 1) {\n    return checkDataType(dataTypes[0], data, strictNums, correct)\n  }\n  let cond: Code\n  const types = toHash(dataTypes)\n  if (types.array && types.object) {\n    const notObj = _`typeof ${data} != \"object\"`\n    cond = types.null ? notObj : _`!${data} || ${notObj}`\n    delete types.null\n    delete types.array\n    delete types.object\n  } else {\n    cond = nil\n  }\n  if (types.number) delete types.integer\n  for (const t in types) cond = and(cond, checkDataType(t as JSONType, data, strictNums, correct))\n  return cond\n}\n\nexport type TypeError = ErrorObject<\"type\", {type: string}>\n\nconst typeError: KeywordErrorDefinition = {\n  message: ({schema}) => `must be ${schema}`,\n  params: ({schema, schemaValue}) =>\n    typeof schema == \"string\" ? _`{type: ${schema}}` : _`{type: ${schemaValue}}`,\n}\n\nexport function reportTypeError(it: SchemaObjCxt): void {\n  const cxt = getTypeErrorContext(it)\n  reportError(cxt, typeError)\n}\n\nfunction getTypeErrorContext(it: SchemaObjCxt): KeywordErrorCxt {\n  const {gen, data, schema} = it\n  const schemaCode = schemaRefOrVal(it, schema, \"type\")\n  return {\n    gen,\n    keyword: \"type\",\n    data,\n    schema: schema.type,\n    schemaCode,\n    schemaValue: schemaCode,\n    parentSchema: schema,\n    params: {},\n    it,\n  }\n}\n","export {\n  Format,\n  FormatDefinition,\n  AsyncFormatDefinition,\n  KeywordDefinition,\n  KeywordErrorDefinition,\n  CodeKeywordDefinition,\n  MacroKeywordDefinition,\n  FuncKeywordDefinition,\n  Vocabulary,\n  Schema,\n  SchemaObject,\n  AnySchemaObject,\n  AsyncSchema,\n  AnySchema,\n  ValidateFunction,\n  AsyncValidateFunction,\n  AnyValidateFunction,\n  ErrorObject,\n  ErrorNoParams,\n} from \"./types\"\n\nexport {SchemaCxt, SchemaObjCxt} from \"./compile\"\nexport interface Plugin<Opts> {\n  (ajv: Ajv, options?: Opts): Ajv\n  [prop: string]: any\n}\n\nexport {KeywordCxt} from \"./compile/validate\"\nexport {DefinedError} from \"./vocabularies/errors\"\nexport {JSONType} from \"./compile/rules\"\nexport {JSONSchemaType} from \"./types/json-schema\"\nexport {JTDSchemaType, SomeJTDSchemaType, JTDDataType} from \"./types/jtd-schema\"\nexport {_, str, stringify, nil, Name, Code, CodeGen, CodeGenOptions} from \"./compile/codegen\"\n\nimport type {\n  Schema,\n  AnySchema,\n  AnySchemaObject,\n  SchemaObject,\n  AsyncSchema,\n  Vocabulary,\n  KeywordDefinition,\n  AddedKeywordDefinition,\n  AnyValidateFunction,\n  ValidateFunction,\n  AsyncValidateFunction,\n  ErrorObject,\n  Format,\n  AddedFormat,\n  RegExpEngine,\n  UriResolver,\n} from \"./types\"\nimport type {JSONSchemaType} from \"./types/json-schema\"\nimport type {JTDSchemaType, SomeJTDSchemaType, JTDDataType} from \"./types/jtd-schema\"\nimport ValidationError from \"./runtime/validation_error\"\nimport MissingRefError from \"./compile/ref_error\"\nimport {getRules, ValidationRules, Rule, RuleGroup, JSONType} from \"./compile/rules\"\nimport {SchemaEnv, compileSchema, resolveSchema} from \"./compile\"\nimport {Code, ValueScope} from \"./compile/codegen\"\nimport {normalizeId, getSchemaRefs} from \"./compile/resolve\"\nimport {getJSONTypes} from \"./compile/validate/dataType\"\nimport {eachItem} from \"./compile/util\"\nimport * as $dataRefSchema from \"./refs/data.json\"\n\nimport DefaultUriResolver from \"./runtime/uri\"\n\nconst defaultRegExp: RegExpEngine = (str, flags) => new RegExp(str, flags)\ndefaultRegExp.code = \"new RegExp\"\n\nconst META_IGNORE_OPTIONS: (keyof Options)[] = [\"removeAdditional\", \"useDefaults\", \"coerceTypes\"]\nconst EXT_SCOPE_NAMES = new Set([\n  \"validate\",\n  \"serialize\",\n  \"parse\",\n  \"wrapper\",\n  \"root\",\n  \"schema\",\n  \"keyword\",\n  \"pattern\",\n  \"formats\",\n  \"validate$data\",\n  \"func\",\n  \"obj\",\n  \"Error\",\n])\n\nexport type Options = CurrentOptions & DeprecatedOptions\n\nexport interface CurrentOptions {\n  // strict mode options (NEW)\n  strict?: boolean | \"log\"\n  strictSchema?: boolean | \"log\"\n  strictNumbers?: boolean | \"log\"\n  strictTypes?: boolean | \"log\"\n  strictTuples?: boolean | \"log\"\n  strictRequired?: boolean | \"log\"\n  allowMatchingProperties?: boolean // disables a strict mode restriction\n  allowUnionTypes?: boolean\n  validateFormats?: boolean\n  // validation and reporting options:\n  $data?: boolean\n  allErrors?: boolean\n  verbose?: boolean\n  discriminator?: boolean\n  unicodeRegExp?: boolean\n  timestamp?: \"string\" | \"date\" // JTD only\n  parseDate?: boolean // JTD only\n  allowDate?: boolean // JTD only\n  $comment?:\n    | true\n    | ((comment: string, schemaPath?: string, rootSchema?: AnySchemaObject) => unknown)\n  formats?: {[Name in string]?: Format}\n  keywords?: Vocabulary\n  schemas?: AnySchema[] | {[Key in string]?: AnySchema}\n  logger?: Logger | false\n  loadSchema?: (uri: string) => Promise<AnySchemaObject>\n  // options to modify validated data:\n  removeAdditional?: boolean | \"all\" | \"failing\"\n  useDefaults?: boolean | \"empty\"\n  coerceTypes?: boolean | \"array\"\n  // advanced options:\n  next?: boolean // NEW\n  unevaluated?: boolean // NEW\n  dynamicRef?: boolean // NEW\n  schemaId?: \"id\" | \"$id\"\n  jtd?: boolean // NEW\n  meta?: SchemaObject | boolean\n  defaultMeta?: string | AnySchemaObject\n  validateSchema?: boolean | \"log\"\n  addUsedSchema?: boolean\n  inlineRefs?: boolean | number\n  passContext?: boolean\n  loopRequired?: number\n  loopEnum?: number // NEW\n  ownProperties?: boolean\n  multipleOfPrecision?: number\n  int32range?: boolean // JTD only\n  messages?: boolean\n  code?: CodeOptions // NEW\n  uriResolver?: UriResolver\n}\n\nexport interface CodeOptions {\n  es5?: boolean\n  esm?: boolean\n  lines?: boolean\n  optimize?: boolean | number\n  formats?: Code // code to require (or construct) map of available formats - for standalone code\n  source?: boolean\n  process?: (code: string, schema?: SchemaEnv) => string\n  regExp?: RegExpEngine\n}\n\ninterface InstanceCodeOptions extends CodeOptions {\n  regExp: RegExpEngine\n  optimize: number\n}\n\ninterface DeprecatedOptions {\n  /** @deprecated */\n  ignoreKeywordsWithRef?: boolean\n  /** @deprecated */\n  jsPropertySyntax?: boolean // added instead of jsonPointers\n  /** @deprecated */\n  unicode?: boolean\n}\n\ninterface RemovedOptions {\n  format?: boolean\n  errorDataPath?: \"object\" | \"property\"\n  nullable?: boolean // \"nullable\" keyword is supported by default\n  jsonPointers?: boolean\n  extendRefs?: true | \"ignore\" | \"fail\"\n  missingRefs?: true | \"ignore\" | \"fail\"\n  processCode?: (code: string, schema?: SchemaEnv) => string\n  sourceCode?: boolean\n  strictDefaults?: boolean\n  strictKeywords?: boolean\n  uniqueItems?: boolean\n  unknownFormats?: true | string[] | \"ignore\"\n  cache?: any\n  serialize?: (schema: AnySchema) => unknown\n  ajvErrors?: boolean\n}\n\ntype OptionsInfo<T extends RemovedOptions | DeprecatedOptions> = {\n  [K in keyof T]-?: string | undefined\n}\n\nconst removedOptions: OptionsInfo<RemovedOptions> = {\n  errorDataPath: \"\",\n  format: \"`validateFormats: false` can be used instead.\",\n  nullable: '\"nullable\" keyword is supported by default.',\n  jsonPointers: \"Deprecated jsPropertySyntax can be used instead.\",\n  extendRefs: \"Deprecated ignoreKeywordsWithRef can be used instead.\",\n  missingRefs: \"Pass empty schema with $id that should be ignored to ajv.addSchema.\",\n  processCode: \"Use option `code: {process: (code, schemaEnv: object) => string}`\",\n  sourceCode: \"Use option `code: {source: true}`\",\n  strictDefaults: \"It is default now, see option `strict`.\",\n  strictKeywords: \"It is default now, see option `strict`.\",\n  uniqueItems: '\"uniqueItems\" keyword is always validated.',\n  unknownFormats: \"Disable strict mode or pass `true` to `ajv.addFormat` (or `formats` option).\",\n  cache: \"Map is used as cache, schema object as key.\",\n  serialize: \"Map is used as cache, schema object as key.\",\n  ajvErrors: \"It is default now.\",\n}\n\nconst deprecatedOptions: OptionsInfo<DeprecatedOptions> = {\n  ignoreKeywordsWithRef: \"\",\n  jsPropertySyntax: \"\",\n  unicode: '\"minLength\"/\"maxLength\" account for unicode characters by default.',\n}\n\ntype RequiredInstanceOptions = {\n  [K in\n    | \"strictSchema\"\n    | \"strictNumbers\"\n    | \"strictTypes\"\n    | \"strictTuples\"\n    | \"strictRequired\"\n    | \"inlineRefs\"\n    | \"loopRequired\"\n    | \"loopEnum\"\n    | \"meta\"\n    | \"messages\"\n    | \"schemaId\"\n    | \"addUsedSchema\"\n    | \"validateSchema\"\n    | \"validateFormats\"\n    | \"int32range\"\n    | \"unicodeRegExp\"\n    | \"uriResolver\"]: NonNullable<Options[K]>\n} & {code: InstanceCodeOptions}\n\nexport type InstanceOptions = Options & RequiredInstanceOptions\n\nconst MAX_EXPRESSION = 200\n\n// eslint-disable-next-line complexity\nfunction requiredOptions(o: Options): RequiredInstanceOptions {\n  const s = o.strict\n  const _optz = o.code?.optimize\n  const optimize = _optz === true || _optz === undefined ? 1 : _optz || 0\n  const regExp = o.code?.regExp ?? defaultRegExp\n  const uriResolver = o.uriResolver ?? DefaultUriResolver\n  return {\n    strictSchema: o.strictSchema ?? s ?? true,\n    strictNumbers: o.strictNumbers ?? s ?? true,\n    strictTypes: o.strictTypes ?? s ?? \"log\",\n    strictTuples: o.strictTuples ?? s ?? \"log\",\n    strictRequired: o.strictRequired ?? s ?? false,\n    code: o.code ? {...o.code, optimize, regExp} : {optimize, regExp},\n    loopRequired: o.loopRequired ?? MAX_EXPRESSION,\n    loopEnum: o.loopEnum ?? MAX_EXPRESSION,\n    meta: o.meta ?? true,\n    messages: o.messages ?? true,\n    inlineRefs: o.inlineRefs ?? true,\n    schemaId: o.schemaId ?? \"$id\",\n    addUsedSchema: o.addUsedSchema ?? true,\n    validateSchema: o.validateSchema ?? true,\n    validateFormats: o.validateFormats ?? true,\n    unicodeRegExp: o.unicodeRegExp ?? true,\n    int32range: o.int32range ?? true,\n    uriResolver: uriResolver,\n  }\n}\n\nexport interface Logger {\n  log(...args: unknown[]): unknown\n  warn(...args: unknown[]): unknown\n  error(...args: unknown[]): unknown\n}\n\nexport default class Ajv {\n  opts: InstanceOptions\n  errors?: ErrorObject[] | null // errors from the last validation\n  logger: Logger\n  // shared external scope values for compiled functions\n  readonly scope: ValueScope\n  readonly schemas: {[Key in string]?: SchemaEnv} = {}\n  readonly refs: {[Ref in string]?: SchemaEnv | string} = {}\n  readonly formats: {[Name in string]?: AddedFormat} = {}\n  readonly RULES: ValidationRules\n  readonly _compilations: Set<SchemaEnv> = new Set()\n  private readonly _loading: {[Ref in string]?: Promise<AnySchemaObject>} = {}\n  private readonly _cache: Map<AnySchema, SchemaEnv> = new Map()\n  private readonly _metaOpts: InstanceOptions\n\n  static ValidationError = ValidationError\n  static MissingRefError = MissingRefError\n\n  constructor(opts: Options = {}) {\n    opts = this.opts = {...opts, ...requiredOptions(opts)}\n    const {es5, lines} = this.opts.code\n\n    this.scope = new ValueScope({scope: {}, prefixes: EXT_SCOPE_NAMES, es5, lines})\n    this.logger = getLogger(opts.logger)\n    const formatOpt = opts.validateFormats\n    opts.validateFormats = false\n\n    this.RULES = getRules()\n    checkOptions.call(this, removedOptions, opts, \"NOT SUPPORTED\")\n    checkOptions.call(this, deprecatedOptions, opts, \"DEPRECATED\", \"warn\")\n    this._metaOpts = getMetaSchemaOptions.call(this)\n\n    if (opts.formats) addInitialFormats.call(this)\n    this._addVocabularies()\n    this._addDefaultMetaSchema()\n    if (opts.keywords) addInitialKeywords.call(this, opts.keywords)\n    if (typeof opts.meta == \"object\") this.addMetaSchema(opts.meta)\n    addInitialSchemas.call(this)\n    opts.validateFormats = formatOpt\n  }\n\n  _addVocabularies(): void {\n    this.addKeyword(\"$async\")\n  }\n\n  _addDefaultMetaSchema(): void {\n    const {$data, meta, schemaId} = this.opts\n    let _dataRefSchema: SchemaObject = $dataRefSchema\n    if (schemaId === \"id\") {\n      _dataRefSchema = {...$dataRefSchema}\n      _dataRefSchema.id = _dataRefSchema.$id\n      delete _dataRefSchema.$id\n    }\n    if (meta && $data) this.addMetaSchema(_dataRefSchema, _dataRefSchema[schemaId], false)\n  }\n\n  defaultMeta(): string | AnySchemaObject | undefined {\n    const {meta, schemaId} = this.opts\n    return (this.opts.defaultMeta = typeof meta == \"object\" ? meta[schemaId] || meta : undefined)\n  }\n\n  // Validate data using schema\n  // AnySchema will be compiled and cached using schema itself as a key for Map\n  validate(schema: Schema | string, data: unknown): boolean\n  validate(schemaKeyRef: AnySchema | string, data: unknown): boolean | Promise<unknown>\n  validate<T>(schema: Schema | JSONSchemaType<T> | string, data: unknown): data is T\n  // Separated for type inference to work\n  // eslint-disable-next-line @typescript-eslint/unified-signatures\n  validate<T>(schema: JTDSchemaType<T>, data: unknown): data is T\n  // This overload is only intended for typescript inference, the first\n  // argument prevents manual type annotation from matching this overload\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  validate<N extends never, T extends SomeJTDSchemaType>(\n    schema: T,\n    data: unknown\n  ): data is JTDDataType<T>\n  // eslint-disable-next-line @typescript-eslint/no-redundant-type-constituents\n  validate<T>(schema: AsyncSchema, data: unknown | T): Promise<T>\n  validate<T>(schemaKeyRef: AnySchema | string, data: unknown): data is T | Promise<T>\n  validate<T>(\n    schemaKeyRef: AnySchema | string, // key, ref or schema object\n    // eslint-disable-next-line @typescript-eslint/no-redundant-type-constituents\n    data: unknown | T // to be validated\n  ): boolean | Promise<T> {\n    let v: AnyValidateFunction | undefined\n    if (typeof schemaKeyRef == \"string\") {\n      v = this.getSchema<T>(schemaKeyRef)\n      if (!v) throw new Error(`no schema with key or ref \"${schemaKeyRef}\"`)\n    } else {\n      v = this.compile<T>(schemaKeyRef)\n    }\n\n    const valid = v(data)\n    if (!(\"$async\" in v)) this.errors = v.errors\n    return valid\n  }\n\n  // Create validation function for passed schema\n  // _meta: true if schema is a meta-schema. Used internally to compile meta schemas of user-defined keywords.\n  compile<T = unknown>(schema: Schema | JSONSchemaType<T>, _meta?: boolean): ValidateFunction<T>\n  // Separated for type inference to work\n  // eslint-disable-next-line @typescript-eslint/unified-signatures\n  compile<T = unknown>(schema: JTDSchemaType<T>, _meta?: boolean): ValidateFunction<T>\n  // This overload is only intended for typescript inference, the first\n  // argument prevents manual type annotation from matching this overload\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  compile<N extends never, T extends SomeJTDSchemaType>(\n    schema: T,\n    _meta?: boolean\n  ): ValidateFunction<JTDDataType<T>>\n  compile<T = unknown>(schema: AsyncSchema, _meta?: boolean): AsyncValidateFunction<T>\n  compile<T = unknown>(schema: AnySchema, _meta?: boolean): AnyValidateFunction<T>\n  compile<T = unknown>(schema: AnySchema, _meta?: boolean): AnyValidateFunction<T> {\n    const sch = this._addSchema(schema, _meta)\n    return (sch.validate || this._compileSchemaEnv(sch)) as AnyValidateFunction<T>\n  }\n\n  // Creates validating function for passed schema with asynchronous loading of missing schemas.\n  // `loadSchema` option should be a function that accepts schema uri and returns promise that resolves with the schema.\n  // TODO allow passing schema URI\n  // meta - optional true to compile meta-schema\n  compileAsync<T = unknown>(\n    schema: SchemaObject | JSONSchemaType<T>,\n    _meta?: boolean\n  ): Promise<ValidateFunction<T>>\n  // Separated for type inference to work\n  // eslint-disable-next-line @typescript-eslint/unified-signatures\n  compileAsync<T = unknown>(schema: JTDSchemaType<T>, _meta?: boolean): Promise<ValidateFunction<T>>\n  compileAsync<T = unknown>(schema: AsyncSchema, meta?: boolean): Promise<AsyncValidateFunction<T>>\n  // eslint-disable-next-line @typescript-eslint/unified-signatures\n  compileAsync<T = unknown>(\n    schema: AnySchemaObject,\n    meta?: boolean\n  ): Promise<AnyValidateFunction<T>>\n  compileAsync<T = unknown>(\n    schema: AnySchemaObject,\n    meta?: boolean\n  ): Promise<AnyValidateFunction<T>> {\n    if (typeof this.opts.loadSchema != \"function\") {\n      throw new Error(\"options.loadSchema should be a function\")\n    }\n    const {loadSchema} = this.opts\n    return runCompileAsync.call(this, schema, meta)\n\n    async function runCompileAsync(\n      this: Ajv,\n      _schema: AnySchemaObject,\n      _meta?: boolean\n    ): Promise<AnyValidateFunction> {\n      await loadMetaSchema.call(this, _schema.$schema)\n      const sch = this._addSchema(_schema, _meta)\n      return sch.validate || _compileAsync.call(this, sch)\n    }\n\n    async function loadMetaSchema(this: Ajv, $ref?: string): Promise<void> {\n      if ($ref && !this.getSchema($ref)) {\n        await runCompileAsync.call(this, {$ref}, true)\n      }\n    }\n\n    async function _compileAsync(this: Ajv, sch: SchemaEnv): Promise<AnyValidateFunction> {\n      try {\n        return this._compileSchemaEnv(sch)\n      } catch (e) {\n        if (!(e instanceof MissingRefError)) throw e\n        checkLoaded.call(this, e)\n        await loadMissingSchema.call(this, e.missingSchema)\n        return _compileAsync.call(this, sch)\n      }\n    }\n\n    function checkLoaded(this: Ajv, {missingSchema: ref, missingRef}: MissingRefError): void {\n      if (this.refs[ref]) {\n        throw new Error(`AnySchema ${ref} is loaded but ${missingRef} cannot be resolved`)\n      }\n    }\n\n    async function loadMissingSchema(this: Ajv, ref: string): Promise<void> {\n      const _schema = await _loadSchema.call(this, ref)\n      if (!this.refs[ref]) await loadMetaSchema.call(this, _schema.$schema)\n      if (!this.refs[ref]) this.addSchema(_schema, ref, meta)\n    }\n\n    async function _loadSchema(this: Ajv, ref: string): Promise<AnySchemaObject> {\n      const p = this._loading[ref]\n      if (p) return p\n      try {\n        return await (this._loading[ref] = loadSchema(ref))\n      } finally {\n        delete this._loading[ref]\n      }\n    }\n  }\n\n  // Adds schema to the instance\n  addSchema(\n    schema: AnySchema | AnySchema[], // If array is passed, `key` will be ignored\n    key?: string, // Optional schema key. Can be passed to `validate` method instead of schema object or id/ref. One schema per instance can have empty `id` and `key`.\n    _meta?: boolean, // true if schema is a meta-schema. Used internally, addMetaSchema should be used instead.\n    _validateSchema = this.opts.validateSchema // false to skip schema validation. Used internally, option validateSchema should be used instead.\n  ): Ajv {\n    if (Array.isArray(schema)) {\n      for (const sch of schema) this.addSchema(sch, undefined, _meta, _validateSchema)\n      return this\n    }\n    let id: string | undefined\n    if (typeof schema === \"object\") {\n      const {schemaId} = this.opts\n      id = schema[schemaId]\n      if (id !== undefined && typeof id != \"string\") {\n        throw new Error(`schema ${schemaId} must be string`)\n      }\n    }\n    key = normalizeId(key || id)\n    this._checkUnique(key)\n    this.schemas[key] = this._addSchema(schema, _meta, key, _validateSchema, true)\n    return this\n  }\n\n  // Add schema that will be used to validate other schemas\n  // options in META_IGNORE_OPTIONS are alway set to false\n  addMetaSchema(\n    schema: AnySchemaObject,\n    key?: string, // schema key\n    _validateSchema = this.opts.validateSchema // false to skip schema validation, can be used to override validateSchema option for meta-schema\n  ): Ajv {\n    this.addSchema(schema, key, true, _validateSchema)\n    return this\n  }\n\n  //  Validate schema against its meta-schema\n  validateSchema(schema: AnySchema, throwOrLogError?: boolean): boolean | Promise<unknown> {\n    if (typeof schema == \"boolean\") return true\n    let $schema: string | AnySchemaObject | undefined\n    $schema = schema.$schema\n    if ($schema !== undefined && typeof $schema != \"string\") {\n      throw new Error(\"$schema must be a string\")\n    }\n    $schema = $schema || this.opts.defaultMeta || this.defaultMeta()\n    if (!$schema) {\n      this.logger.warn(\"meta-schema not available\")\n      this.errors = null\n      return true\n    }\n    const valid = this.validate($schema, schema)\n    if (!valid && throwOrLogError) {\n      const message = \"schema is invalid: \" + this.errorsText()\n      if (this.opts.validateSchema === \"log\") this.logger.error(message)\n      else throw new Error(message)\n    }\n    return valid\n  }\n\n  // Get compiled schema by `key` or `ref`.\n  // (`key` that was passed to `addSchema` or full schema reference - `schema.$id` or resolved id)\n  getSchema<T = unknown>(keyRef: string): AnyValidateFunction<T> | undefined {\n    let sch\n    while (typeof (sch = getSchEnv.call(this, keyRef)) == \"string\") keyRef = sch\n    if (sch === undefined) {\n      const {schemaId} = this.opts\n      const root = new SchemaEnv({schema: {}, schemaId})\n      sch = resolveSchema.call(this, root, keyRef)\n      if (!sch) return\n      this.refs[keyRef] = sch\n    }\n    return (sch.validate || this._compileSchemaEnv(sch)) as AnyValidateFunction<T> | undefined\n  }\n\n  // Remove cached schema(s).\n  // If no parameter is passed all schemas but meta-schemas are removed.\n  // If RegExp is passed all schemas with key/id matching pattern but meta-schemas are removed.\n  // Even if schema is referenced by other schemas it still can be removed as other schemas have local references.\n  removeSchema(schemaKeyRef?: AnySchema | string | RegExp): Ajv {\n    if (schemaKeyRef instanceof RegExp) {\n      this._removeAllSchemas(this.schemas, schemaKeyRef)\n      this._removeAllSchemas(this.refs, schemaKeyRef)\n      return this\n    }\n    switch (typeof schemaKeyRef) {\n      case \"undefined\":\n        this._removeAllSchemas(this.schemas)\n        this._removeAllSchemas(this.refs)\n        this._cache.clear()\n        return this\n      case \"string\": {\n        const sch = getSchEnv.call(this, schemaKeyRef)\n        if (typeof sch == \"object\") this._cache.delete(sch.schema)\n        delete this.schemas[schemaKeyRef]\n        delete this.refs[schemaKeyRef]\n        return this\n      }\n      case \"object\": {\n        const cacheKey = schemaKeyRef\n        this._cache.delete(cacheKey)\n        let id = schemaKeyRef[this.opts.schemaId]\n        if (id) {\n          id = normalizeId(id)\n          delete this.schemas[id]\n          delete this.refs[id]\n        }\n        return this\n      }\n      default:\n        throw new Error(\"ajv.removeSchema: invalid parameter\")\n    }\n  }\n\n  // add \"vocabulary\" - a collection of keywords\n  addVocabulary(definitions: Vocabulary): Ajv {\n    for (const def of definitions) this.addKeyword(def)\n    return this\n  }\n\n  addKeyword(\n    kwdOrDef: string | KeywordDefinition,\n    def?: KeywordDefinition // deprecated\n  ): Ajv {\n    let keyword: string | string[]\n    if (typeof kwdOrDef == \"string\") {\n      keyword = kwdOrDef\n      if (typeof def == \"object\") {\n        this.logger.warn(\"these parameters are deprecated, see docs for addKeyword\")\n        def.keyword = keyword\n      }\n    } else if (typeof kwdOrDef == \"object\" && def === undefined) {\n      def = kwdOrDef\n      keyword = def.keyword\n      if (Array.isArray(keyword) && !keyword.length) {\n        throw new Error(\"addKeywords: keyword must be string or non-empty array\")\n      }\n    } else {\n      throw new Error(\"invalid addKeywords parameters\")\n    }\n\n    checkKeyword.call(this, keyword, def)\n    if (!def) {\n      eachItem(keyword, (kwd) => addRule.call(this, kwd))\n      return this\n    }\n    keywordMetaschema.call(this, def)\n    const definition: AddedKeywordDefinition = {\n      ...def,\n      type: getJSONTypes(def.type),\n      schemaType: getJSONTypes(def.schemaType),\n    }\n    eachItem(\n      keyword,\n      definition.type.length === 0\n        ? (k) => addRule.call(this, k, definition)\n        : (k) => definition.type.forEach((t) => addRule.call(this, k, definition, t))\n    )\n    return this\n  }\n\n  getKeyword(keyword: string): AddedKeywordDefinition | boolean {\n    const rule = this.RULES.all[keyword]\n    return typeof rule == \"object\" ? rule.definition : !!rule\n  }\n\n  // Remove keyword\n  removeKeyword(keyword: string): Ajv {\n    // TODO return type should be Ajv\n    const {RULES} = this\n    delete RULES.keywords[keyword]\n    delete RULES.all[keyword]\n    for (const group of RULES.rules) {\n      const i = group.rules.findIndex((rule) => rule.keyword === keyword)\n      if (i >= 0) group.rules.splice(i, 1)\n    }\n    return this\n  }\n\n  // Add format\n  addFormat(name: string, format: Format): Ajv {\n    if (typeof format == \"string\") format = new RegExp(format)\n    this.formats[name] = format\n    return this\n  }\n\n  errorsText(\n    errors: ErrorObject[] | null | undefined = this.errors, // optional array of validation errors\n    {separator = \", \", dataVar = \"data\"}: ErrorsTextOptions = {} // optional options with properties `separator` and `dataVar`\n  ): string {\n    if (!errors || errors.length === 0) return \"No errors\"\n    return errors\n      .map((e) => `${dataVar}${e.instancePath} ${e.message}`)\n      .reduce((text, msg) => text + separator + msg)\n  }\n\n  $dataMetaSchema(metaSchema: AnySchemaObject, keywordsJsonPointers: string[]): AnySchemaObject {\n    const rules = this.RULES.all\n    metaSchema = JSON.parse(JSON.stringify(metaSchema))\n    for (const jsonPointer of keywordsJsonPointers) {\n      const segments = jsonPointer.split(\"/\").slice(1) // first segment is an empty string\n      let keywords = metaSchema\n      for (const seg of segments) keywords = keywords[seg] as AnySchemaObject\n\n      for (const key in rules) {\n        const rule = rules[key]\n        if (typeof rule != \"object\") continue\n        const {$data} = rule.definition\n        const schema = keywords[key] as AnySchemaObject | undefined\n        if ($data && schema) keywords[key] = schemaOrData(schema)\n      }\n    }\n\n    return metaSchema\n  }\n\n  private _removeAllSchemas(schemas: {[Ref in string]?: SchemaEnv | string}, regex?: RegExp): void {\n    for (const keyRef in schemas) {\n      const sch = schemas[keyRef]\n      if (!regex || regex.test(keyRef)) {\n        if (typeof sch == \"string\") {\n          delete schemas[keyRef]\n        } else if (sch && !sch.meta) {\n          this._cache.delete(sch.schema)\n          delete schemas[keyRef]\n        }\n      }\n    }\n  }\n\n  _addSchema(\n    schema: AnySchema,\n    meta?: boolean,\n    baseId?: string,\n    validateSchema = this.opts.validateSchema,\n    addSchema = this.opts.addUsedSchema\n  ): SchemaEnv {\n    let id: string | undefined\n    const {schemaId} = this.opts\n    if (typeof schema == \"object\") {\n      id = schema[schemaId]\n    } else {\n      if (this.opts.jtd) throw new Error(\"schema must be object\")\n      else if (typeof schema != \"boolean\") throw new Error(\"schema must be object or boolean\")\n    }\n    let sch = this._cache.get(schema)\n    if (sch !== undefined) return sch\n\n    baseId = normalizeId(id || baseId)\n    const localRefs = getSchemaRefs.call(this, schema, baseId)\n    sch = new SchemaEnv({schema, schemaId, meta, baseId, localRefs})\n    this._cache.set(sch.schema, sch)\n    if (addSchema && !baseId.startsWith(\"#\")) {\n      // TODO atm it is allowed to overwrite schemas without id (instead of not adding them)\n      if (baseId) this._checkUnique(baseId)\n      this.refs[baseId] = sch\n    }\n    if (validateSchema) this.validateSchema(schema, true)\n    return sch\n  }\n\n  private _checkUnique(id: string): void {\n    if (this.schemas[id] || this.refs[id]) {\n      throw new Error(`schema with key or id \"${id}\" already exists`)\n    }\n  }\n\n  private _compileSchemaEnv(sch: SchemaEnv): AnyValidateFunction {\n    if (sch.meta) this._compileMetaSchema(sch)\n    else compileSchema.call(this, sch)\n\n    /* istanbul ignore if */\n    if (!sch.validate) throw new Error(\"ajv implementation error\")\n    return sch.validate\n  }\n\n  private _compileMetaSchema(sch: SchemaEnv): void {\n    const currentOpts = this.opts\n    this.opts = this._metaOpts\n    try {\n      compileSchema.call(this, sch)\n    } finally {\n      this.opts = currentOpts\n    }\n  }\n}\n\nexport interface ErrorsTextOptions {\n  separator?: string\n  dataVar?: string\n}\n\nfunction checkOptions(\n  this: Ajv,\n  checkOpts: OptionsInfo<RemovedOptions | DeprecatedOptions>,\n  options: Options & RemovedOptions,\n  msg: string,\n  log: \"warn\" | \"error\" = \"error\"\n): void {\n  for (const key in checkOpts) {\n    const opt = key as keyof typeof checkOpts\n    if (opt in options) this.logger[log](`${msg}: option ${key}. ${checkOpts[opt]}`)\n  }\n}\n\nfunction getSchEnv(this: Ajv, keyRef: string): SchemaEnv | string | undefined {\n  keyRef = normalizeId(keyRef) // TODO tests fail without this line\n  return this.schemas[keyRef] || this.refs[keyRef]\n}\n\nfunction addInitialSchemas(this: Ajv): void {\n  const optsSchemas = this.opts.schemas\n  if (!optsSchemas) return\n  if (Array.isArray(optsSchemas)) this.addSchema(optsSchemas)\n  else for (const key in optsSchemas) this.addSchema(optsSchemas[key] as AnySchema, key)\n}\n\nfunction addInitialFormats(this: Ajv): void {\n  for (const name in this.opts.formats) {\n    const format = this.opts.formats[name]\n    if (format) this.addFormat(name, format)\n  }\n}\n\nfunction addInitialKeywords(\n  this: Ajv,\n  defs: Vocabulary | {[K in string]?: KeywordDefinition}\n): void {\n  if (Array.isArray(defs)) {\n    this.addVocabulary(defs)\n    return\n  }\n  this.logger.warn(\"keywords option as map is deprecated, pass array\")\n  for (const keyword in defs) {\n    const def = defs[keyword] as KeywordDefinition\n    if (!def.keyword) def.keyword = keyword\n    this.addKeyword(def)\n  }\n}\n\nfunction getMetaSchemaOptions(this: Ajv): InstanceOptions {\n  const metaOpts = {...this.opts}\n  for (const opt of META_IGNORE_OPTIONS) delete metaOpts[opt]\n  return metaOpts\n}\n\nconst noLogs = {log() {}, warn() {}, error() {}}\n\nfunction getLogger(logger?: Partial<Logger> | false): Logger {\n  if (logger === false) return noLogs\n  if (logger === undefined) return console\n  if (logger.log && logger.warn && logger.error) return logger as Logger\n  throw new Error(\"logger must implement log, warn and error methods\")\n}\n\nconst KEYWORD_NAME = /^[a-z_$][a-z0-9_$:-]*$/i\n\nfunction checkKeyword(this: Ajv, keyword: string | string[], def?: KeywordDefinition): void {\n  const {RULES} = this\n  eachItem(keyword, (kwd) => {\n    if (RULES.keywords[kwd]) throw new Error(`Keyword ${kwd} is already defined`)\n    if (!KEYWORD_NAME.test(kwd)) throw new Error(`Keyword ${kwd} has invalid name`)\n  })\n  if (!def) return\n  if (def.$data && !(\"code\" in def || \"validate\" in def)) {\n    throw new Error('$data keyword must have \"code\" or \"validate\" function')\n  }\n}\n\nfunction addRule(\n  this: Ajv,\n  keyword: string,\n  definition?: AddedKeywordDefinition,\n  dataType?: JSONType\n): void {\n  const post = definition?.post\n  if (dataType && post) throw new Error('keyword with \"post\" flag cannot have \"type\"')\n  const {RULES} = this\n  let ruleGroup = post ? RULES.post : RULES.rules.find(({type: t}) => t === dataType)\n  if (!ruleGroup) {\n    ruleGroup = {type: dataType, rules: []}\n    RULES.rules.push(ruleGroup)\n  }\n  RULES.keywords[keyword] = true\n  if (!definition) return\n\n  const rule: Rule = {\n    keyword,\n    definition: {\n      ...definition,\n      type: getJSONTypes(definition.type),\n      schemaType: getJSONTypes(definition.schemaType),\n    },\n  }\n  if (definition.before) addBeforeRule.call(this, ruleGroup, rule, definition.before)\n  else ruleGroup.rules.push(rule)\n  RULES.all[keyword] = rule\n  definition.implements?.forEach((kwd) => this.addKeyword(kwd))\n}\n\nfunction addBeforeRule(this: Ajv, ruleGroup: RuleGroup, rule: Rule, before: string): void {\n  const i = ruleGroup.rules.findIndex((_rule) => _rule.keyword === before)\n  if (i >= 0) {\n    ruleGroup.rules.splice(i, 0, rule)\n  } else {\n    ruleGroup.rules.push(rule)\n    this.logger.warn(`rule ${before} is not defined`)\n  }\n}\n\nfunction keywordMetaschema(this: Ajv, def: KeywordDefinition): void {\n  let {metaSchema} = def\n  if (metaSchema === undefined) return\n  if (def.$data && this.opts.$data) metaSchema = schemaOrData(metaSchema)\n  def.validateSchema = this.compile(metaSchema, true)\n}\n\nconst $dataRef = {\n  $ref: \"https://raw.githubusercontent.com/ajv-validator/ajv/master/lib/refs/data.json#\",\n}\n\nfunction schemaOrData(schema: AnySchema): AnySchemaObject {\n  return {anyOf: [schema, $dataRef]}\n}\n","import type {ScopeValueSets, NameValue, ValueScope, ValueScopeName} from \"./scope\"\nimport {_, nil, _Code, Code, Name, UsedNames, CodeItem, addCodeArg, _CodeOrName} from \"./code\"\nimport {Scope, varKinds} from \"./scope\"\n\nexport {_, str, strConcat, nil, getProperty, stringify, regexpCode, Name, Code} from \"./code\"\nexport {Scope, ScopeStore, ValueScope, ValueScopeName, ScopeValueSets, varKinds} from \"./scope\"\n\n// type for expressions that can be safely inserted in code without quotes\nexport type SafeExpr = Code | number | boolean | null\n\n// type that is either Code of function that adds code to CodeGen instance using its methods\nexport type Block = Code | (() => void)\n\nexport const operators = {\n  GT: new _Code(\">\"),\n  GTE: new _Code(\">=\"),\n  LT: new _Code(\"<\"),\n  LTE: new _Code(\"<=\"),\n  EQ: new _Code(\"===\"),\n  NEQ: new _Code(\"!==\"),\n  NOT: new _Code(\"!\"),\n  OR: new _Code(\"||\"),\n  AND: new _Code(\"&&\"),\n  ADD: new _Code(\"+\"),\n}\n\nabstract class Node {\n  abstract readonly names: UsedNames\n\n  optimizeNodes(): this | ChildNode | ChildNode[] | undefined {\n    return this\n  }\n\n  optimizeNames(_names: UsedNames, _constants: Constants): this | undefined {\n    return this\n  }\n\n  // get count(): number {\n  //   return 1\n  // }\n}\n\nclass Def extends Node {\n  constructor(\n    private readonly varKind: Name,\n    private readonly name: Name,\n    private rhs?: SafeExpr\n  ) {\n    super()\n  }\n\n  render({es5, _n}: CGOptions): string {\n    const varKind = es5 ? varKinds.var : this.varKind\n    const rhs = this.rhs === undefined ? \"\" : ` = ${this.rhs}`\n    return `${varKind} ${this.name}${rhs};` + _n\n  }\n\n  optimizeNames(names: UsedNames, constants: Constants): this | undefined {\n    if (!names[this.name.str]) return\n    if (this.rhs) this.rhs = optimizeExpr(this.rhs, names, constants)\n    return this\n  }\n\n  get names(): UsedNames {\n    return this.rhs instanceof _CodeOrName ? this.rhs.names : {}\n  }\n}\n\nclass Assign extends Node {\n  constructor(\n    readonly lhs: Code,\n    public rhs: SafeExpr,\n    private readonly sideEffects?: boolean\n  ) {\n    super()\n  }\n\n  render({_n}: CGOptions): string {\n    return `${this.lhs} = ${this.rhs};` + _n\n  }\n\n  optimizeNames(names: UsedNames, constants: Constants): this | undefined {\n    if (this.lhs instanceof Name && !names[this.lhs.str] && !this.sideEffects) return\n    this.rhs = optimizeExpr(this.rhs, names, constants)\n    return this\n  }\n\n  get names(): UsedNames {\n    const names = this.lhs instanceof Name ? {} : {...this.lhs.names}\n    return addExprNames(names, this.rhs)\n  }\n}\n\nclass AssignOp extends Assign {\n  constructor(\n    lhs: Code,\n    private readonly op: Code,\n    rhs: SafeExpr,\n    sideEffects?: boolean\n  ) {\n    super(lhs, rhs, sideEffects)\n  }\n\n  render({_n}: CGOptions): string {\n    return `${this.lhs} ${this.op}= ${this.rhs};` + _n\n  }\n}\n\nclass Label extends Node {\n  readonly names: UsedNames = {}\n  constructor(readonly label: Name) {\n    super()\n  }\n\n  render({_n}: CGOptions): string {\n    return `${this.label}:` + _n\n  }\n}\n\nclass Break extends Node {\n  readonly names: UsedNames = {}\n  constructor(readonly label?: Code) {\n    super()\n  }\n\n  render({_n}: CGOptions): string {\n    const label = this.label ? ` ${this.label}` : \"\"\n    return `break${label};` + _n\n  }\n}\n\nclass Throw extends Node {\n  constructor(readonly error: Code) {\n    super()\n  }\n\n  render({_n}: CGOptions): string {\n    return `throw ${this.error};` + _n\n  }\n\n  get names(): UsedNames {\n    return this.error.names\n  }\n}\n\nclass AnyCode extends Node {\n  constructor(private code: SafeExpr) {\n    super()\n  }\n\n  render({_n}: CGOptions): string {\n    return `${this.code};` + _n\n  }\n\n  optimizeNodes(): this | undefined {\n    return `${this.code}` ? this : undefined\n  }\n\n  optimizeNames(names: UsedNames, constants: Constants): this {\n    this.code = optimizeExpr(this.code, names, constants)\n    return this\n  }\n\n  get names(): UsedNames {\n    return this.code instanceof _CodeOrName ? this.code.names : {}\n  }\n}\n\nabstract class ParentNode extends Node {\n  constructor(readonly nodes: ChildNode[] = []) {\n    super()\n  }\n\n  render(opts: CGOptions): string {\n    return this.nodes.reduce((code, n) => code + n.render(opts), \"\")\n  }\n\n  optimizeNodes(): this | ChildNode | ChildNode[] | undefined {\n    const {nodes} = this\n    let i = nodes.length\n    while (i--) {\n      const n = nodes[i].optimizeNodes()\n      if (Array.isArray(n)) nodes.splice(i, 1, ...n)\n      else if (n) nodes[i] = n\n      else nodes.splice(i, 1)\n    }\n    return nodes.length > 0 ? this : undefined\n  }\n\n  optimizeNames(names: UsedNames, constants: Constants): this | undefined {\n    const {nodes} = this\n    let i = nodes.length\n    while (i--) {\n      // iterating backwards improves 1-pass optimization\n      const n = nodes[i]\n      if (n.optimizeNames(names, constants)) continue\n      subtractNames(names, n.names)\n      nodes.splice(i, 1)\n    }\n    return nodes.length > 0 ? this : undefined\n  }\n\n  get names(): UsedNames {\n    return this.nodes.reduce((names: UsedNames, n) => addNames(names, n.names), {})\n  }\n\n  // get count(): number {\n  //   return this.nodes.reduce((c, n) => c + n.count, 1)\n  // }\n}\n\nabstract class BlockNode extends ParentNode {\n  render(opts: CGOptions): string {\n    return \"{\" + opts._n + super.render(opts) + \"}\" + opts._n\n  }\n}\n\nclass Root extends ParentNode {}\n\nclass Else extends BlockNode {\n  static readonly kind = \"else\"\n}\n\nclass If extends BlockNode {\n  static readonly kind = \"if\"\n  else?: If | Else\n  constructor(\n    private condition: Code | boolean,\n    nodes?: ChildNode[]\n  ) {\n    super(nodes)\n  }\n\n  render(opts: CGOptions): string {\n    let code = `if(${this.condition})` + super.render(opts)\n    if (this.else) code += \"else \" + this.else.render(opts)\n    return code\n  }\n\n  optimizeNodes(): If | ChildNode[] | undefined {\n    super.optimizeNodes()\n    const cond = this.condition\n    if (cond === true) return this.nodes // else is ignored here\n    let e = this.else\n    if (e) {\n      const ns = e.optimizeNodes()\n      e = this.else = Array.isArray(ns) ? new Else(ns) : (ns as Else | undefined)\n    }\n    if (e) {\n      if (cond === false) return e instanceof If ? e : e.nodes\n      if (this.nodes.length) return this\n      return new If(not(cond), e instanceof If ? [e] : e.nodes)\n    }\n    if (cond === false || !this.nodes.length) return undefined\n    return this\n  }\n\n  optimizeNames(names: UsedNames, constants: Constants): this | undefined {\n    this.else = this.else?.optimizeNames(names, constants)\n    if (!(super.optimizeNames(names, constants) || this.else)) return\n    this.condition = optimizeExpr(this.condition, names, constants)\n    return this\n  }\n\n  get names(): UsedNames {\n    const names = super.names\n    addExprNames(names, this.condition)\n    if (this.else) addNames(names, this.else.names)\n    return names\n  }\n\n  // get count(): number {\n  //   return super.count + (this.else?.count || 0)\n  // }\n}\n\nabstract class For extends BlockNode {\n  static readonly kind = \"for\"\n}\n\nclass ForLoop extends For {\n  constructor(private iteration: Code) {\n    super()\n  }\n\n  render(opts: CGOptions): string {\n    return `for(${this.iteration})` + super.render(opts)\n  }\n\n  optimizeNames(names: UsedNames, constants: Constants): this | undefined {\n    if (!super.optimizeNames(names, constants)) return\n    this.iteration = optimizeExpr(this.iteration, names, constants)\n    return this\n  }\n\n  get names(): UsedNames {\n    return addNames(super.names, this.iteration.names)\n  }\n}\n\nclass ForRange extends For {\n  constructor(\n    private readonly varKind: Name,\n    private readonly name: Name,\n    private readonly from: SafeExpr,\n    private readonly to: SafeExpr\n  ) {\n    super()\n  }\n\n  render(opts: CGOptions): string {\n    const varKind = opts.es5 ? varKinds.var : this.varKind\n    const {name, from, to} = this\n    return `for(${varKind} ${name}=${from}; ${name}<${to}; ${name}++)` + super.render(opts)\n  }\n\n  get names(): UsedNames {\n    const names = addExprNames(super.names, this.from)\n    return addExprNames(names, this.to)\n  }\n}\n\nclass ForIter extends For {\n  constructor(\n    private readonly loop: \"of\" | \"in\",\n    private readonly varKind: Name,\n    private readonly name: Name,\n    private iterable: Code\n  ) {\n    super()\n  }\n\n  render(opts: CGOptions): string {\n    return `for(${this.varKind} ${this.name} ${this.loop} ${this.iterable})` + super.render(opts)\n  }\n\n  optimizeNames(names: UsedNames, constants: Constants): this | undefined {\n    if (!super.optimizeNames(names, constants)) return\n    this.iterable = optimizeExpr(this.iterable, names, constants)\n    return this\n  }\n\n  get names(): UsedNames {\n    return addNames(super.names, this.iterable.names)\n  }\n}\n\nclass Func extends BlockNode {\n  static readonly kind = \"func\"\n  constructor(\n    public name: Name,\n    public args: Code,\n    public async?: boolean\n  ) {\n    super()\n  }\n\n  render(opts: CGOptions): string {\n    const _async = this.async ? \"async \" : \"\"\n    return `${_async}function ${this.name}(${this.args})` + super.render(opts)\n  }\n}\n\nclass Return extends ParentNode {\n  static readonly kind = \"return\"\n\n  render(opts: CGOptions): string {\n    return \"return \" + super.render(opts)\n  }\n}\n\nclass Try extends BlockNode {\n  catch?: Catch\n  finally?: Finally\n\n  render(opts: CGOptions): string {\n    let code = \"try\" + super.render(opts)\n    if (this.catch) code += this.catch.render(opts)\n    if (this.finally) code += this.finally.render(opts)\n    return code\n  }\n\n  optimizeNodes(): this {\n    super.optimizeNodes()\n    this.catch?.optimizeNodes() as Catch | undefined\n    this.finally?.optimizeNodes() as Finally | undefined\n    return this\n  }\n\n  optimizeNames(names: UsedNames, constants: Constants): this {\n    super.optimizeNames(names, constants)\n    this.catch?.optimizeNames(names, constants)\n    this.finally?.optimizeNames(names, constants)\n    return this\n  }\n\n  get names(): UsedNames {\n    const names = super.names\n    if (this.catch) addNames(names, this.catch.names)\n    if (this.finally) addNames(names, this.finally.names)\n    return names\n  }\n\n  // get count(): number {\n  //   return super.count + (this.catch?.count || 0) + (this.finally?.count || 0)\n  // }\n}\n\nclass Catch extends BlockNode {\n  static readonly kind = \"catch\"\n  constructor(readonly error: Name) {\n    super()\n  }\n\n  render(opts: CGOptions): string {\n    return `catch(${this.error})` + super.render(opts)\n  }\n}\n\nclass Finally extends BlockNode {\n  static readonly kind = \"finally\"\n  render(opts: CGOptions): string {\n    return \"finally\" + super.render(opts)\n  }\n}\n\ntype StartBlockNode = If | For | Func | Return | Try\n\ntype LeafNode = Def | Assign | Label | Break | Throw | AnyCode\n\ntype ChildNode = StartBlockNode | LeafNode\n\ntype EndBlockNodeType =\n  | typeof If\n  | typeof Else\n  | typeof For\n  | typeof Func\n  | typeof Return\n  | typeof Catch\n  | typeof Finally\n\ntype Constants = Record<string, SafeExpr | undefined>\n\nexport interface CodeGenOptions {\n  es5?: boolean\n  lines?: boolean\n  ownProperties?: boolean\n}\n\ninterface CGOptions extends CodeGenOptions {\n  _n: \"\\n\" | \"\"\n}\n\nexport class CodeGen {\n  readonly _scope: Scope\n  readonly _extScope: ValueScope\n  readonly _values: ScopeValueSets = {}\n  private readonly _nodes: ParentNode[]\n  private readonly _blockStarts: number[] = []\n  private readonly _constants: Constants = {}\n  private readonly opts: CGOptions\n\n  constructor(extScope: ValueScope, opts: CodeGenOptions = {}) {\n    this.opts = {...opts, _n: opts.lines ? \"\\n\" : \"\"}\n    this._extScope = extScope\n    this._scope = new Scope({parent: extScope})\n    this._nodes = [new Root()]\n  }\n\n  toString(): string {\n    return this._root.render(this.opts)\n  }\n\n  // returns unique name in the internal scope\n  name(prefix: string): Name {\n    return this._scope.name(prefix)\n  }\n\n  // reserves unique name in the external scope\n  scopeName(prefix: string): ValueScopeName {\n    return this._extScope.name(prefix)\n  }\n\n  // reserves unique name in the external scope and assigns value to it\n  scopeValue(prefixOrName: ValueScopeName | string, value: NameValue): Name {\n    const name = this._extScope.value(prefixOrName, value)\n    const vs = this._values[name.prefix] || (this._values[name.prefix] = new Set())\n    vs.add(name)\n    return name\n  }\n\n  getScopeValue(prefix: string, keyOrRef: unknown): ValueScopeName | undefined {\n    return this._extScope.getValue(prefix, keyOrRef)\n  }\n\n  // return code that assigns values in the external scope to the names that are used internally\n  // (same names that were returned by gen.scopeName or gen.scopeValue)\n  scopeRefs(scopeName: Name): Code {\n    return this._extScope.scopeRefs(scopeName, this._values)\n  }\n\n  scopeCode(): Code {\n    return this._extScope.scopeCode(this._values)\n  }\n\n  private _def(\n    varKind: Name,\n    nameOrPrefix: Name | string,\n    rhs?: SafeExpr,\n    constant?: boolean\n  ): Name {\n    const name = this._scope.toName(nameOrPrefix)\n    if (rhs !== undefined && constant) this._constants[name.str] = rhs\n    this._leafNode(new Def(varKind, name, rhs))\n    return name\n  }\n\n  // `const` declaration (`var` in es5 mode)\n  const(nameOrPrefix: Name | string, rhs: SafeExpr, _constant?: boolean): Name {\n    return this._def(varKinds.const, nameOrPrefix, rhs, _constant)\n  }\n\n  // `let` declaration with optional assignment (`var` in es5 mode)\n  let(nameOrPrefix: Name | string, rhs?: SafeExpr, _constant?: boolean): Name {\n    return this._def(varKinds.let, nameOrPrefix, rhs, _constant)\n  }\n\n  // `var` declaration with optional assignment\n  var(nameOrPrefix: Name | string, rhs?: SafeExpr, _constant?: boolean): Name {\n    return this._def(varKinds.var, nameOrPrefix, rhs, _constant)\n  }\n\n  // assignment code\n  assign(lhs: Code, rhs: SafeExpr, sideEffects?: boolean): CodeGen {\n    return this._leafNode(new Assign(lhs, rhs, sideEffects))\n  }\n\n  // `+=` code\n  add(lhs: Code, rhs: SafeExpr): CodeGen {\n    return this._leafNode(new AssignOp(lhs, operators.ADD, rhs))\n  }\n\n  // appends passed SafeExpr to code or executes Block\n  code(c: Block | SafeExpr): CodeGen {\n    if (typeof c == \"function\") c()\n    else if (c !== nil) this._leafNode(new AnyCode(c))\n    return this\n  }\n\n  // returns code for object literal for the passed argument list of key-value pairs\n  object(...keyValues: [Name | string, SafeExpr | string][]): _Code {\n    const code: CodeItem[] = [\"{\"]\n    for (const [key, value] of keyValues) {\n      if (code.length > 1) code.push(\",\")\n      code.push(key)\n      if (key !== value || this.opts.es5) {\n        code.push(\":\")\n        addCodeArg(code, value)\n      }\n    }\n    code.push(\"}\")\n    return new _Code(code)\n  }\n\n  // `if` clause (or statement if `thenBody` and, optionally, `elseBody` are passed)\n  if(condition: Code | boolean, thenBody?: Block, elseBody?: Block): CodeGen {\n    this._blockNode(new If(condition))\n\n    if (thenBody && elseBody) {\n      this.code(thenBody).else().code(elseBody).endIf()\n    } else if (thenBody) {\n      this.code(thenBody).endIf()\n    } else if (elseBody) {\n      throw new Error('CodeGen: \"else\" body without \"then\" body')\n    }\n    return this\n  }\n\n  // `else if` clause - invalid without `if` or after `else` clauses\n  elseIf(condition: Code | boolean): CodeGen {\n    return this._elseNode(new If(condition))\n  }\n\n  // `else` clause - only valid after `if` or `else if` clauses\n  else(): CodeGen {\n    return this._elseNode(new Else())\n  }\n\n  // end `if` statement (needed if gen.if was used only with condition)\n  endIf(): CodeGen {\n    return this._endBlockNode(If, Else)\n  }\n\n  private _for(node: For, forBody?: Block): CodeGen {\n    this._blockNode(node)\n    if (forBody) this.code(forBody).endFor()\n    return this\n  }\n\n  // a generic `for` clause (or statement if `forBody` is passed)\n  for(iteration: Code, forBody?: Block): CodeGen {\n    return this._for(new ForLoop(iteration), forBody)\n  }\n\n  // `for` statement for a range of values\n  forRange(\n    nameOrPrefix: Name | string,\n    from: SafeExpr,\n    to: SafeExpr,\n    forBody: (index: Name) => void,\n    varKind: Code = this.opts.es5 ? varKinds.var : varKinds.let\n  ): CodeGen {\n    const name = this._scope.toName(nameOrPrefix)\n    return this._for(new ForRange(varKind, name, from, to), () => forBody(name))\n  }\n\n  // `for-of` statement (in es5 mode replace with a normal for loop)\n  forOf(\n    nameOrPrefix: Name | string,\n    iterable: Code,\n    forBody: (item: Name) => void,\n    varKind: Code = varKinds.const\n  ): CodeGen {\n    const name = this._scope.toName(nameOrPrefix)\n    if (this.opts.es5) {\n      const arr = iterable instanceof Name ? iterable : this.var(\"_arr\", iterable)\n      return this.forRange(\"_i\", 0, _`${arr}.length`, (i) => {\n        this.var(name, _`${arr}[${i}]`)\n        forBody(name)\n      })\n    }\n    return this._for(new ForIter(\"of\", varKind, name, iterable), () => forBody(name))\n  }\n\n  // `for-in` statement.\n  // With option `ownProperties` replaced with a `for-of` loop for object keys\n  forIn(\n    nameOrPrefix: Name | string,\n    obj: Code,\n    forBody: (item: Name) => void,\n    varKind: Code = this.opts.es5 ? varKinds.var : varKinds.const\n  ): CodeGen {\n    if (this.opts.ownProperties) {\n      return this.forOf(nameOrPrefix, _`Object.keys(${obj})`, forBody)\n    }\n    const name = this._scope.toName(nameOrPrefix)\n    return this._for(new ForIter(\"in\", varKind, name, obj), () => forBody(name))\n  }\n\n  // end `for` loop\n  endFor(): CodeGen {\n    return this._endBlockNode(For)\n  }\n\n  // `label` statement\n  label(label: Name): CodeGen {\n    return this._leafNode(new Label(label))\n  }\n\n  // `break` statement\n  break(label?: Code): CodeGen {\n    return this._leafNode(new Break(label))\n  }\n\n  // `return` statement\n  return(value: Block | SafeExpr): CodeGen {\n    const node = new Return()\n    this._blockNode(node)\n    this.code(value)\n    if (node.nodes.length !== 1) throw new Error('CodeGen: \"return\" should have one node')\n    return this._endBlockNode(Return)\n  }\n\n  // `try` statement\n  try(tryBody: Block, catchCode?: (e: Name) => void, finallyCode?: Block): CodeGen {\n    if (!catchCode && !finallyCode) throw new Error('CodeGen: \"try\" without \"catch\" and \"finally\"')\n    const node = new Try()\n    this._blockNode(node)\n    this.code(tryBody)\n    if (catchCode) {\n      const error = this.name(\"e\")\n      this._currNode = node.catch = new Catch(error)\n      catchCode(error)\n    }\n    if (finallyCode) {\n      this._currNode = node.finally = new Finally()\n      this.code(finallyCode)\n    }\n    return this._endBlockNode(Catch, Finally)\n  }\n\n  // `throw` statement\n  throw(error: Code): CodeGen {\n    return this._leafNode(new Throw(error))\n  }\n\n  // start self-balancing block\n  block(body?: Block, nodeCount?: number): CodeGen {\n    this._blockStarts.push(this._nodes.length)\n    if (body) this.code(body).endBlock(nodeCount)\n    return this\n  }\n\n  // end the current self-balancing block\n  endBlock(nodeCount?: number): CodeGen {\n    const len = this._blockStarts.pop()\n    if (len === undefined) throw new Error(\"CodeGen: not in self-balancing block\")\n    const toClose = this._nodes.length - len\n    if (toClose < 0 || (nodeCount !== undefined && toClose !== nodeCount)) {\n      throw new Error(`CodeGen: wrong number of nodes: ${toClose} vs ${nodeCount} expected`)\n    }\n    this._nodes.length = len\n    return this\n  }\n\n  // `function` heading (or definition if funcBody is passed)\n  func(name: Name, args: Code = nil, async?: boolean, funcBody?: Block): CodeGen {\n    this._blockNode(new Func(name, args, async))\n    if (funcBody) this.code(funcBody).endFunc()\n    return this\n  }\n\n  // end function definition\n  endFunc(): CodeGen {\n    return this._endBlockNode(Func)\n  }\n\n  optimize(n = 1): void {\n    while (n-- > 0) {\n      this._root.optimizeNodes()\n      this._root.optimizeNames(this._root.names, this._constants)\n    }\n  }\n\n  private _leafNode(node: LeafNode): CodeGen {\n    this._currNode.nodes.push(node)\n    return this\n  }\n\n  private _blockNode(node: StartBlockNode): void {\n    this._currNode.nodes.push(node)\n    this._nodes.push(node)\n  }\n\n  private _endBlockNode(N1: EndBlockNodeType, N2?: EndBlockNodeType): CodeGen {\n    const n = this._currNode\n    if (n instanceof N1 || (N2 && n instanceof N2)) {\n      this._nodes.pop()\n      return this\n    }\n    throw new Error(`CodeGen: not in block \"${N2 ? `${N1.kind}/${N2.kind}` : N1.kind}\"`)\n  }\n\n  private _elseNode(node: If | Else): CodeGen {\n    const n = this._currNode\n    if (!(n instanceof If)) {\n      throw new Error('CodeGen: \"else\" without \"if\"')\n    }\n    this._currNode = n.else = node\n    return this\n  }\n\n  private get _root(): Root {\n    return this._nodes[0] as Root\n  }\n\n  private get _currNode(): ParentNode {\n    const ns = this._nodes\n    return ns[ns.length - 1]\n  }\n\n  private set _currNode(node: ParentNode) {\n    const ns = this._nodes\n    ns[ns.length - 1] = node\n  }\n\n  // get nodeCount(): number {\n  //   return this._root.count\n  // }\n}\n\nfunction addNames(names: UsedNames, from: UsedNames): UsedNames {\n  for (const n in from) names[n] = (names[n] || 0) + (from[n] || 0)\n  return names\n}\n\nfunction addExprNames(names: UsedNames, from: SafeExpr): UsedNames {\n  return from instanceof _CodeOrName ? addNames(names, from.names) : names\n}\n\nfunction optimizeExpr<T extends SafeExpr | Code>(expr: T, names: UsedNames, constants: Constants): T\nfunction optimizeExpr(expr: SafeExpr, names: UsedNames, constants: Constants): SafeExpr {\n  if (expr instanceof Name) return replaceName(expr)\n  if (!canOptimize(expr)) return expr\n  return new _Code(\n    expr._items.reduce((items: CodeItem[], c: SafeExpr | string) => {\n      if (c instanceof Name) c = replaceName(c)\n      if (c instanceof _Code) items.push(...c._items)\n      else items.push(c)\n      return items\n    }, [])\n  )\n\n  function replaceName(n: Name): SafeExpr {\n    const c = constants[n.str]\n    if (c === undefined || names[n.str] !== 1) return n\n    delete names[n.str]\n    return c\n  }\n\n  function canOptimize(e: SafeExpr): e is _Code {\n    return (\n      e instanceof _Code &&\n      e._items.some(\n        (c) => c instanceof Name && names[c.str] === 1 && constants[c.str] !== undefined\n      )\n    )\n  }\n}\n\nfunction subtractNames(names: UsedNames, from: UsedNames): void {\n  for (const n in from) names[n] = (names[n] || 0) - (from[n] || 0)\n}\n\nexport function not<T extends Code | SafeExpr>(x: T): T\nexport function not(x: Code | SafeExpr): Code | SafeExpr {\n  return typeof x == \"boolean\" || typeof x == \"number\" || x === null ? !x : _`!${par(x)}`\n}\n\nconst andCode = mappend(operators.AND)\n\n// boolean AND (&&) expression with the passed arguments\nexport function and(...args: Code[]): Code {\n  return args.reduce(andCode)\n}\n\nconst orCode = mappend(operators.OR)\n\n// boolean OR (||) expression with the passed arguments\nexport function or(...args: Code[]): Code {\n  return args.reduce(orCode)\n}\n\ntype MAppend = (x: Code, y: Code) => Code\n\nfunction mappend(op: Code): MAppend {\n  return (x, y) => (x === nil ? y : y === nil ? x : _`${par(x)} ${op} ${par(y)}`)\n}\n\nfunction par(x: Code): Code {\n  return x instanceof Name ? x : _`(${x})`\n}\n","import type {KeywordCxt} from \".\"\nimport type {\n  AnySchema,\n  SchemaValidateFunction,\n  AnyValidateFunction,\n  AddedKeywordDefinition,\n  MacroKeywordDefinition,\n  FuncKeywordDefinition,\n} from \"../../types\"\nimport type {SchemaObjCxt} from \"..\"\nimport {_, nil, not, stringify, Code, Name, CodeGen} from \"../codegen\"\nimport N from \"../names\"\nimport type {JSONType} from \"../rules\"\nimport {callValidateCode} from \"../../vocabularies/code\"\nimport {extendErrors} from \"../errors\"\n\ntype KeywordCompilationResult = AnySchema | SchemaValidateFunction | AnyValidateFunction\n\nexport function macroKeywordCode(cxt: KeywordCxt, def: MacroKeywordDefinition): void {\n  const {gen, keyword, schema, parentSchema, it} = cxt\n  const macroSchema = def.macro.call(it.self, schema, parentSchema, it)\n  const schemaRef = useKeyword(gen, keyword, macroSchema)\n  if (it.opts.validateSchema !== false) it.self.validateSchema(macroSchema, true)\n\n  const valid = gen.name(\"valid\")\n  cxt.subschema(\n    {\n      schema: macroSchema,\n      schemaPath: nil,\n      errSchemaPath: `${it.errSchemaPath}/${keyword}`,\n      topSchemaRef: schemaRef,\n      compositeRule: true,\n    },\n    valid\n  )\n  cxt.pass(valid, () => cxt.error(true))\n}\n\nexport function funcKeywordCode(cxt: KeywordCxt, def: FuncKeywordDefinition): void {\n  const {gen, keyword, schema, parentSchema, $data, it} = cxt\n  checkAsyncKeyword(it, def)\n  const validate =\n    !$data && def.compile ? def.compile.call(it.self, schema, parentSchema, it) : def.validate\n  const validateRef = useKeyword(gen, keyword, validate)\n  const valid = gen.let(\"valid\")\n  cxt.block$data(valid, validateKeyword)\n  cxt.ok(def.valid ?? valid)\n\n  function validateKeyword(): void {\n    if (def.errors === false) {\n      assignValid()\n      if (def.modifying) modifyData(cxt)\n      reportErrs(() => cxt.error())\n    } else {\n      const ruleErrs = def.async ? validateAsync() : validateSync()\n      if (def.modifying) modifyData(cxt)\n      reportErrs(() => addErrs(cxt, ruleErrs))\n    }\n  }\n\n  function validateAsync(): Name {\n    const ruleErrs = gen.let(\"ruleErrs\", null)\n    gen.try(\n      () => assignValid(_`await `),\n      (e) =>\n        gen.assign(valid, false).if(\n          _`${e} instanceof ${it.ValidationError as Name}`,\n          () => gen.assign(ruleErrs, _`${e}.errors`),\n          () => gen.throw(e)\n        )\n    )\n    return ruleErrs\n  }\n\n  function validateSync(): Code {\n    const validateErrs = _`${validateRef}.errors`\n    gen.assign(validateErrs, null)\n    assignValid(nil)\n    return validateErrs\n  }\n\n  function assignValid(_await: Code = def.async ? _`await ` : nil): void {\n    const passCxt = it.opts.passContext ? N.this : N.self\n    const passSchema = !((\"compile\" in def && !$data) || def.schema === false)\n    gen.assign(\n      valid,\n      _`${_await}${callValidateCode(cxt, validateRef, passCxt, passSchema)}`,\n      def.modifying\n    )\n  }\n\n  function reportErrs(errors: () => void): void {\n    gen.if(not(def.valid ?? valid), errors)\n  }\n}\n\nfunction modifyData(cxt: KeywordCxt): void {\n  const {gen, data, it} = cxt\n  gen.if(it.parentData, () => gen.assign(data, _`${it.parentData}[${it.parentDataProperty}]`))\n}\n\nfunction addErrs(cxt: KeywordCxt, errs: Code): void {\n  const {gen} = cxt\n  gen.if(\n    _`Array.isArray(${errs})`,\n    () => {\n      gen\n        .assign(N.vErrors, _`${N.vErrors} === null ? ${errs} : ${N.vErrors}.concat(${errs})`)\n        .assign(N.errors, _`${N.vErrors}.length`)\n      extendErrors(cxt)\n    },\n    () => cxt.error()\n  )\n}\n\nfunction checkAsyncKeyword({schemaEnv}: SchemaObjCxt, def: FuncKeywordDefinition): void {\n  if (def.async && !schemaEnv.$async) throw new Error(\"async keyword in sync schema\")\n}\n\nfunction useKeyword(gen: CodeGen, keyword: string, result?: KeywordCompilationResult): Name {\n  if (result === undefined) throw new Error(`keyword \"${keyword}\" failed to compile`)\n  return gen.scopeValue(\n    \"keyword\",\n    typeof result == \"function\" ? {ref: result} : {ref: result, code: stringify(result)}\n  )\n}\n\nexport function validSchemaType(\n  schema: unknown,\n  schemaType: JSONType[],\n  allowUndefined = false\n): boolean {\n  // TODO add tests\n  return (\n    !schemaType.length ||\n    schemaType.some((st) =>\n      st === \"array\"\n        ? Array.isArray(schema)\n        : st === \"object\"\n        ? schema && typeof schema == \"object\" && !Array.isArray(schema)\n        : typeof schema == st || (allowUndefined && typeof schema == \"undefined\")\n    )\n  )\n}\n\nexport function validateKeywordUsage(\n  {schema, opts, self, errSchemaPath}: SchemaObjCxt,\n  def: AddedKeywordDefinition,\n  keyword: string\n): void {\n  /* istanbul ignore if */\n  if (Array.isArray(def.keyword) ? !def.keyword.includes(keyword) : def.keyword !== keyword) {\n    throw new Error(\"ajv implementation error\")\n  }\n\n  const deps = def.dependencies\n  if (deps?.some((kwd) => !Object.prototype.hasOwnProperty.call(schema, kwd))) {\n    throw new Error(`parent schema must have dependencies of ${keyword}: ${deps.join(\",\")}`)\n  }\n\n  if (def.validateSchema) {\n    const valid = def.validateSchema(schema[keyword])\n    if (!valid) {\n      const msg =\n        `keyword \"${keyword}\" value is invalid at path \"${errSchemaPath}\": ` +\n        self.errorsText(def.validateSchema.errors)\n      if (opts.validateSchema === \"log\") self.logger.error(msg)\n      else throw new Error(msg)\n    }\n  }\n}\n","import type {AnySchemaObject} from \"./types\"\nimport AjvCore from \"./core\"\nimport draft7Vocabularies from \"./vocabularies/draft7\"\nimport discriminator from \"./vocabularies/discriminator\"\nimport * as draft7MetaSchema from \"./refs/json-schema-draft-07.json\"\n\nconst META_SUPPORT_DATA = [\"/properties\"]\n\nconst META_SCHEMA_ID = \"http://json-schema.org/draft-07/schema\"\n\nexport class Ajv extends AjvCore {\n  _addVocabularies(): void {\n    super._addVocabularies()\n    draft7Vocabularies.forEach((v) => this.addVocabulary(v))\n    if (this.opts.discriminator) this.addKeyword(discriminator)\n  }\n\n  _addDefaultMetaSchema(): void {\n    super._addDefaultMetaSchema()\n    if (!this.opts.meta) return\n    const metaSchema = this.opts.$data\n      ? this.$dataMetaSchema(draft7MetaSchema, META_SUPPORT_DATA)\n      : draft7MetaSchema\n    this.addMetaSchema(metaSchema, META_SCHEMA_ID, false)\n    this.refs[\"http://json-schema.org/schema\"] = META_SCHEMA_ID\n  }\n\n  defaultMeta(): string | AnySchemaObject | undefined {\n    return (this.opts.defaultMeta =\n      super.defaultMeta() || (this.getSchema(META_SCHEMA_ID) ? META_SCHEMA_ID : undefined))\n  }\n}\n\nmodule.exports = exports = Ajv\nmodule.exports.Ajv = Ajv\nObject.defineProperty(exports, \"__esModule\", {value: true})\n\nexport default Ajv\n\nexport {\n  Format,\n  FormatDefinition,\n  AsyncFormatDefinition,\n  KeywordDefinition,\n  KeywordErrorDefinition,\n  CodeKeywordDefinition,\n  MacroKeywordDefinition,\n  FuncKeywordDefinition,\n  Vocabulary,\n  Schema,\n  SchemaObject,\n  AnySchemaObject,\n  AsyncSchema,\n  AnySchema,\n  ValidateFunction,\n  AsyncValidateFunction,\n  SchemaValidateFunction,\n  ErrorObject,\n  ErrorNoParams,\n} from \"./types\"\n\nexport {Plugin, Options, CodeOptions, InstanceOptions, Logger, ErrorsTextOptions} from \"./core\"\nexport {SchemaCxt, SchemaObjCxt} from \"./compile\"\nexport {KeywordCxt} from \"./compile/validate\"\nexport {DefinedError} from \"./vocabularies/errors\"\nexport {JSONType} from \"./compile/rules\"\nexport {JSONSchemaType} from \"./types/json-schema\"\nexport {_, str, stringify, nil, Name, Code, CodeGen, CodeGenOptions} from \"./compile/codegen\"\nexport {default as ValidationError} from \"./runtime/validation_error\"\nexport {default as MissingRefError} from \"./compile/ref_error\"\n","import type {AnySchema, EvaluatedProperties, EvaluatedItems} from \"../types\"\nimport type {SchemaCxt, SchemaObjCxt} from \".\"\nimport {_, getProperty, Code, Name, CodeGen} from \"./codegen\"\nimport {_Code} from \"./codegen/code\"\nimport type {Rule, ValidationRules} from \"./rules\"\n\n// TODO refactor to use Set\nexport function toHash<T extends string = string>(arr: T[]): {[K in T]?: true} {\n  const hash: {[K in T]?: true} = {}\n  for (const item of arr) hash[item] = true\n  return hash\n}\n\nexport function alwaysValidSchema(it: SchemaCxt, schema: AnySchema): boolean | void {\n  if (typeof schema == \"boolean\") return schema\n  if (Object.keys(schema).length === 0) return true\n  checkUnknownRules(it, schema)\n  return !schemaHasRules(schema, it.self.RULES.all)\n}\n\nexport function checkUnknownRules(it: SchemaCxt, schema: AnySchema = it.schema): void {\n  const {opts, self} = it\n  if (!opts.strictSchema) return\n  if (typeof schema === \"boolean\") return\n  const rules = self.RULES.keywords\n  for (const key in schema) {\n    if (!rules[key]) checkStrictMode(it, `unknown keyword: \"${key}\"`)\n  }\n}\n\nexport function schemaHasRules(\n  schema: AnySchema,\n  rules: {[Key in string]?: boolean | Rule}\n): boolean {\n  if (typeof schema == \"boolean\") return !schema\n  for (const key in schema) if (rules[key]) return true\n  return false\n}\n\nexport function schemaHasRulesButRef(schema: AnySchema, RULES: ValidationRules): boolean {\n  if (typeof schema == \"boolean\") return !schema\n  for (const key in schema) if (key !== \"$ref\" && RULES.all[key]) return true\n  return false\n}\n\nexport function schemaRefOrVal(\n  {topSchemaRef, schemaPath}: SchemaObjCxt,\n  schema: unknown,\n  keyword: string,\n  $data?: string | false\n): Code | number | boolean {\n  if (!$data) {\n    if (typeof schema == \"number\" || typeof schema == \"boolean\") return schema\n    if (typeof schema == \"string\") return _`${schema}`\n  }\n  return _`${topSchemaRef}${schemaPath}${getProperty(keyword)}`\n}\n\nexport function unescapeFragment(str: string): string {\n  return unescapeJsonPointer(decodeURIComponent(str))\n}\n\nexport function escapeFragment(str: string | number): string {\n  return encodeURIComponent(escapeJsonPointer(str))\n}\n\nexport function escapeJsonPointer(str: string | number): string {\n  if (typeof str == \"number\") return `${str}`\n  return str.replace(/~/g, \"~0\").replace(/\\//g, \"~1\")\n}\n\nexport function unescapeJsonPointer(str: string): string {\n  return str.replace(/~1/g, \"/\").replace(/~0/g, \"~\")\n}\n\nexport function eachItem<T>(xs: T | T[], f: (x: T) => void): void {\n  if (Array.isArray(xs)) {\n    for (const x of xs) f(x)\n  } else {\n    f(xs)\n  }\n}\n\ntype SomeEvaluated = EvaluatedProperties | EvaluatedItems\n\ntype MergeEvaluatedFunc<T extends SomeEvaluated> = (\n  gen: CodeGen,\n  from: Name | T,\n  to: Name | Exclude<T, true> | undefined,\n  toName?: typeof Name\n) => Name | T\n\ninterface MakeMergeFuncArgs<T extends SomeEvaluated> {\n  mergeNames: (gen: CodeGen, from: Name, to: Name) => void\n  mergeToName: (gen: CodeGen, from: T, to: Name) => void\n  mergeValues: (from: T, to: Exclude<T, true>) => T\n  resultToName: (gen: CodeGen, res?: T) => Name\n}\n\nfunction makeMergeEvaluated<T extends SomeEvaluated>({\n  mergeNames,\n  mergeToName,\n  mergeValues,\n  resultToName,\n}: MakeMergeFuncArgs<T>): MergeEvaluatedFunc<T> {\n  return (gen, from, to, toName) => {\n    const res =\n      to === undefined\n        ? from\n        : to instanceof Name\n        ? (from instanceof Name ? mergeNames(gen, from, to) : mergeToName(gen, from, to), to)\n        : from instanceof Name\n        ? (mergeToName(gen, to, from), from)\n        : mergeValues(from, to)\n    return toName === Name && !(res instanceof Name) ? resultToName(gen, res) : res\n  }\n}\n\ninterface MergeEvaluated {\n  props: MergeEvaluatedFunc<EvaluatedProperties>\n  items: MergeEvaluatedFunc<EvaluatedItems>\n}\n\nexport const mergeEvaluated: MergeEvaluated = {\n  props: makeMergeEvaluated({\n    mergeNames: (gen, from, to) =>\n      gen.if(_`${to} !== true && ${from} !== undefined`, () => {\n        gen.if(\n          _`${from} === true`,\n          () => gen.assign(to, true),\n          () => gen.assign(to, _`${to} || {}`).code(_`Object.assign(${to}, ${from})`)\n        )\n      }),\n    mergeToName: (gen, from, to) =>\n      gen.if(_`${to} !== true`, () => {\n        if (from === true) {\n          gen.assign(to, true)\n        } else {\n          gen.assign(to, _`${to} || {}`)\n          setEvaluated(gen, to, from)\n        }\n      }),\n    mergeValues: (from, to) => (from === true ? true : {...from, ...to}),\n    resultToName: evaluatedPropsToName,\n  }),\n  items: makeMergeEvaluated({\n    mergeNames: (gen, from, to) =>\n      gen.if(_`${to} !== true && ${from} !== undefined`, () =>\n        gen.assign(to, _`${from} === true ? true : ${to} > ${from} ? ${to} : ${from}`)\n      ),\n    mergeToName: (gen, from, to) =>\n      gen.if(_`${to} !== true`, () =>\n        gen.assign(to, from === true ? true : _`${to} > ${from} ? ${to} : ${from}`)\n      ),\n    mergeValues: (from, to) => (from === true ? true : Math.max(from, to)),\n    resultToName: (gen, items) => gen.var(\"items\", items),\n  }),\n}\n\nexport function evaluatedPropsToName(gen: CodeGen, ps?: EvaluatedProperties): Name {\n  if (ps === true) return gen.var(\"props\", true)\n  const props = gen.var(\"props\", _`{}`)\n  if (ps !== undefined) setEvaluated(gen, props, ps)\n  return props\n}\n\nexport function setEvaluated(gen: CodeGen, props: Name, ps: {[K in string]?: true}): void {\n  Object.keys(ps).forEach((p) => gen.assign(_`${props}${getProperty(p)}`, true))\n}\n\nconst snippets: {[S in string]?: _Code} = {}\n\nexport function useFunc(gen: CodeGen, f: {code: string}): Name {\n  return gen.scopeValue(\"func\", {\n    ref: f,\n    code: snippets[f.code] || (snippets[f.code] = new _Code(f.code)),\n  })\n}\n\nexport enum Type {\n  Num,\n  Str,\n}\n\nexport function getErrorPath(\n  dataProp: Name | string | number,\n  dataPropType?: Type,\n  jsPropertySyntax?: boolean\n): Code | string {\n  // let path\n  if (dataProp instanceof Name) {\n    const isNumber = dataPropType === Type.Num\n    return jsPropertySyntax\n      ? isNumber\n        ? _`\"[\" + ${dataProp} + \"]\"`\n        : _`\"['\" + ${dataProp} + \"']\"`\n      : isNumber\n      ? _`\"/\" + ${dataProp}`\n      : _`\"/\" + ${dataProp}.replace(/~/g, \"~0\").replace(/\\\\//g, \"~1\")` // TODO maybe use global escapePointer\n  }\n  return jsPropertySyntax ? getProperty(dataProp).toString() : \"/\" + escapeJsonPointer(dataProp)\n}\n\nexport function checkStrictMode(\n  it: SchemaCxt,\n  msg: string,\n  mode: boolean | \"log\" = it.opts.strictSchema\n): void {\n  if (!mode) return\n  msg = `strict mode: ${msg}`\n  if (mode === true) throw new Error(msg)\n  it.self.logger.warn(msg)\n}\n","'use strict'\n\nconst UUID_REG = /^[\\da-f]{8}-[\\da-f]{4}-[\\da-f]{4}-[\\da-f]{4}-[\\da-f]{12}$/iu\nconst URN_REG = /([\\da-z][\\d\\-a-z]{0,31}):((?:[\\w!$'()*+,\\-.:;=@]|%[\\da-f]{2})+)/iu\n\nfunction isSecure (wsComponents) {\n  return typeof wsComponents.secure === 'boolean' ? wsComponents.secure : String(wsComponents.scheme).toLowerCase() === 'wss'\n}\n\nfunction httpParse (components) {\n  if (!components.host) {\n    components.error = components.error || 'HTTP URIs must have a host.'\n  }\n\n  return components\n}\n\nfunction httpSerialize (components) {\n  const secure = String(components.scheme).toLowerCase() === 'https'\n\n  // normalize the default port\n  if (components.port === (secure ? 443 : 80) || components.port === '') {\n    components.port = undefined\n  }\n\n  // normalize the empty path\n  if (!components.path) {\n    components.path = '/'\n  }\n\n  // NOTE: We do not parse query strings for HTTP URIs\n  // as WWW Form Url Encoded query strings are part of the HTML4+ spec,\n  // and not the HTTP spec.\n\n  return components\n}\n\nfunction wsParse (wsComponents) {\n// indicate if the secure flag is set\n  wsComponents.secure = isSecure(wsComponents)\n\n  // construct resouce name\n  wsComponents.resourceName = (wsComponents.path || '/') + (wsComponents.query ? '?' + wsComponents.query : '')\n  wsComponents.path = undefined\n  wsComponents.query = undefined\n\n  return wsComponents\n}\n\nfunction wsSerialize (wsComponents) {\n// normalize the default port\n  if (wsComponents.port === (isSecure(wsComponents) ? 443 : 80) || wsComponents.port === '') {\n    wsComponents.port = undefined\n  }\n\n  // ensure scheme matches secure flag\n  if (typeof wsComponents.secure === 'boolean') {\n    wsComponents.scheme = (wsComponents.secure ? 'wss' : 'ws')\n    wsComponents.secure = undefined\n  }\n\n  // reconstruct path from resource name\n  if (wsComponents.resourceName) {\n    const [path, query] = wsComponents.resourceName.split('?')\n    wsComponents.path = (path && path !== '/' ? path : undefined)\n    wsComponents.query = query\n    wsComponents.resourceName = undefined\n  }\n\n  // forbid fragment component\n  wsComponents.fragment = undefined\n\n  return wsComponents\n}\n\nfunction urnParse (urnComponents, options) {\n  if (!urnComponents.path) {\n    urnComponents.error = 'URN can not be parsed'\n    return urnComponents\n  }\n  const matches = urnComponents.path.match(URN_REG)\n  if (matches) {\n    const scheme = options.scheme || urnComponents.scheme || 'urn'\n    urnComponents.nid = matches[1].toLowerCase()\n    urnComponents.nss = matches[2]\n    const urnScheme = `${scheme}:${options.nid || urnComponents.nid}`\n    const schemeHandler = SCHEMES[urnScheme]\n    urnComponents.path = undefined\n\n    if (schemeHandler) {\n      urnComponents = schemeHandler.parse(urnComponents, options)\n    }\n  } else {\n    urnComponents.error = urnComponents.error || 'URN can not be parsed.'\n  }\n\n  return urnComponents\n}\n\nfunction urnSerialize (urnComponents, options) {\n  const scheme = options.scheme || urnComponents.scheme || 'urn'\n  const nid = urnComponents.nid.toLowerCase()\n  const urnScheme = `${scheme}:${options.nid || nid}`\n  const schemeHandler = SCHEMES[urnScheme]\n\n  if (schemeHandler) {\n    urnComponents = schemeHandler.serialize(urnComponents, options)\n  }\n\n  const uriComponents = urnComponents\n  const nss = urnComponents.nss\n  uriComponents.path = `${nid || options.nid}:${nss}`\n\n  options.skipEscape = true\n  return uriComponents\n}\n\nfunction urnuuidParse (urnComponents, options) {\n  const uuidComponents = urnComponents\n  uuidComponents.uuid = uuidComponents.nss\n  uuidComponents.nss = undefined\n\n  if (!options.tolerant && (!uuidComponents.uuid || !UUID_REG.test(uuidComponents.uuid))) {\n    uuidComponents.error = uuidComponents.error || 'UUID is not valid.'\n  }\n\n  return uuidComponents\n}\n\nfunction urnuuidSerialize (uuidComponents) {\n  const urnComponents = uuidComponents\n  // normalize UUID\n  urnComponents.nss = (uuidComponents.uuid || '').toLowerCase()\n  return urnComponents\n}\n\nconst http = {\n  scheme: 'http',\n  domainHost: true,\n  parse: httpParse,\n  serialize: httpSerialize\n}\n\nconst https = {\n  scheme: 'https',\n  domainHost: http.domainHost,\n  parse: httpParse,\n  serialize: httpSerialize\n}\n\nconst ws = {\n  scheme: 'ws',\n  domainHost: true,\n  parse: wsParse,\n  serialize: wsSerialize\n}\n\nconst wss = {\n  scheme: 'wss',\n  domainHost: ws.domainHost,\n  parse: ws.parse,\n  serialize: ws.serialize\n}\n\nconst urn = {\n  scheme: 'urn',\n  parse: urnParse,\n  serialize: urnSerialize,\n  skipNormalize: true\n}\n\nconst urnuuid = {\n  scheme: 'urn:uuid',\n  parse: urnuuidParse,\n  serialize: urnuuidSerialize,\n  skipNormalize: true\n}\n\nconst SCHEMES = {\n  http,\n  https,\n  ws,\n  wss,\n  urn,\n  'urn:uuid': urnuuid\n}\n\nmodule.exports = SCHEMES\n","import {resolveUrl, normalizeId, getFullPath} from \"./resolve\"\nimport type {UriResolver} from \"../types\"\n\nexport default class MissingRefError extends Error {\n  readonly missingRef: string\n  readonly missingSchema: string\n\n  constructor(resolver: UriResolver, baseId: string, ref: string, msg?: string) {\n    super(msg || `can't resolve reference ${ref} from id ${baseId}`)\n    this.missingRef = resolveUrl(resolver, baseId, ref)\n    this.missingSchema = normalizeId(getFullPath(resolver, this.missingRef))\n  }\n}\n","import type {CodeKeywordDefinition} from \"../../types\"\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"id\",\n  code() {\n    throw new Error('NOT SUPPORTED: keyword \"id\", use \"$id\" for schema ID')\n  },\n}\n\nexport default def\n","import type {\n  AddedFormat,\n  FormatValidator,\n  AsyncFormatValidator,\n  CodeKeywordDefinition,\n  KeywordErrorDefinition,\n  ErrorObject,\n} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str, nil, or, Code, getProperty, regexpCode} from \"../../compile/codegen\"\n\ntype FormatValidate =\n  | FormatValidator<string>\n  | FormatValidator<number>\n  | AsyncFormatValidator<string>\n  | AsyncFormatValidator<number>\n  | RegExp\n  | string\n  | true\n\nexport type FormatError = ErrorObject<\"format\", {format: string}, string | {$data: string}>\n\nconst error: KeywordErrorDefinition = {\n  message: ({schemaCode}) => str`must match format \"${schemaCode}\"`,\n  params: ({schemaCode}) => _`{format: ${schemaCode}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"format\",\n  type: [\"number\", \"string\"],\n  schemaType: \"string\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt, ruleType?: string) {\n    const {gen, data, $data, schema, schemaCode, it} = cxt\n    const {opts, errSchemaPath, schemaEnv, self} = it\n    if (!opts.validateFormats) return\n\n    if ($data) validate$DataFormat()\n    else validateFormat()\n\n    function validate$DataFormat(): void {\n      const fmts = gen.scopeValue(\"formats\", {\n        ref: self.formats,\n        code: opts.code.formats,\n      })\n      const fDef = gen.const(\"fDef\", _`${fmts}[${schemaCode}]`)\n      const fType = gen.let(\"fType\")\n      const format = gen.let(\"format\")\n      // TODO simplify\n      gen.if(\n        _`typeof ${fDef} == \"object\" && !(${fDef} instanceof RegExp)`,\n        () => gen.assign(fType, _`${fDef}.type || \"string\"`).assign(format, _`${fDef}.validate`),\n        () => gen.assign(fType, _`\"string\"`).assign(format, fDef)\n      )\n      cxt.fail$data(or(unknownFmt(), invalidFmt()))\n\n      function unknownFmt(): Code {\n        if (opts.strictSchema === false) return nil\n        return _`${schemaCode} && !${format}`\n      }\n\n      function invalidFmt(): Code {\n        const callFormat = schemaEnv.$async\n          ? _`(${fDef}.async ? await ${format}(${data}) : ${format}(${data}))`\n          : _`${format}(${data})`\n        const validData = _`(typeof ${format} == \"function\" ? ${callFormat} : ${format}.test(${data}))`\n        return _`${format} && ${format} !== true && ${fType} === ${ruleType} && !${validData}`\n      }\n    }\n\n    function validateFormat(): void {\n      const formatDef: AddedFormat | undefined = self.formats[schema]\n      if (!formatDef) {\n        unknownFormat()\n        return\n      }\n      if (formatDef === true) return\n      const [fmtType, format, fmtRef] = getFormat(formatDef)\n      if (fmtType === ruleType) cxt.pass(validCondition())\n\n      function unknownFormat(): void {\n        if (opts.strictSchema === false) {\n          self.logger.warn(unknownMsg())\n          return\n        }\n        throw new Error(unknownMsg())\n\n        function unknownMsg(): string {\n          return `unknown format \"${schema as string}\" ignored in schema at path \"${errSchemaPath}\"`\n        }\n      }\n\n      function getFormat(fmtDef: AddedFormat): [string, FormatValidate, Code] {\n        const code =\n          fmtDef instanceof RegExp\n            ? regexpCode(fmtDef)\n            : opts.code.formats\n            ? _`${opts.code.formats}${getProperty(schema)}`\n            : undefined\n        const fmt = gen.scopeValue(\"formats\", {key: schema, ref: fmtDef, code})\n        if (typeof fmtDef == \"object\" && !(fmtDef instanceof RegExp)) {\n          return [fmtDef.type || \"string\", fmtDef.validate, _`${fmt}.validate`]\n        }\n\n        return [\"string\", fmtDef, fmt]\n      }\n\n      function validCondition(): Code {\n        if (typeof formatDef == \"object\" && !(formatDef instanceof RegExp) && formatDef.async) {\n          if (!schemaEnv.$async) throw new Error(\"async format in sync schema\")\n          return _`await ${fmtRef}(${data})`\n        }\n        return typeof format == \"function\" ? _`${fmtRef}(${data})` : _`${fmtRef}.test(${data})`\n      }\n    }\n  },\n}\n\nexport default def\n","'use strict'\n\nconst { HEX } = require('./scopedChars')\n\nconst IPV4_REG = /^(?:(?:25[0-5]|2[0-4]\\d|1\\d{2}|[1-9]\\d|\\d)\\.){3}(?:25[0-5]|2[0-4]\\d|1\\d{2}|[1-9]\\d|\\d)$/u\n\nfunction normalizeIPv4 (host) {\n  if (findToken(host, '.') < 3) { return { host, isIPV4: false } }\n  const matches = host.match(IPV4_REG) || []\n  const [address] = matches\n  if (address) {\n    return { host: stripLeadingZeros(address, '.'), isIPV4: true }\n  } else {\n    return { host, isIPV4: false }\n  }\n}\n\n/**\n * @param {string[]} input\n * @param {boolean} [keepZero=false]\n * @returns {string|undefined}\n */\nfunction stringArrayToHexStripped (input, keepZero = false) {\n  let acc = ''\n  let strip = true\n  for (const c of input) {\n    if (HEX[c] === undefined) return undefined\n    if (c !== '0' && strip === true) strip = false\n    if (!strip) acc += c\n  }\n  if (keepZero && acc.length === 0) acc = '0'\n  return acc\n}\n\nfunction getIPV6 (input) {\n  let tokenCount = 0\n  const output = { error: false, address: '', zone: '' }\n  const address = []\n  const buffer = []\n  let isZone = false\n  let endipv6Encountered = false\n  let endIpv6 = false\n\n  function consume () {\n    if (buffer.length) {\n      if (isZone === false) {\n        const hex = stringArrayToHexStripped(buffer)\n        if (hex !== undefined) {\n          address.push(hex)\n        } else {\n          output.error = true\n          return false\n        }\n      }\n      buffer.length = 0\n    }\n    return true\n  }\n\n  for (let i = 0; i < input.length; i++) {\n    const cursor = input[i]\n    if (cursor === '[' || cursor === ']') { continue }\n    if (cursor === ':') {\n      if (endipv6Encountered === true) {\n        endIpv6 = true\n      }\n      if (!consume()) { break }\n      tokenCount++\n      address.push(':')\n      if (tokenCount > 7) {\n        // not valid\n        output.error = true\n        break\n      }\n      if (i - 1 >= 0 && input[i - 1] === ':') {\n        endipv6Encountered = true\n      }\n      continue\n    } else if (cursor === '%') {\n      if (!consume()) { break }\n      // switch to zone detection\n      isZone = true\n    } else {\n      buffer.push(cursor)\n      continue\n    }\n  }\n  if (buffer.length) {\n    if (isZone) {\n      output.zone = buffer.join('')\n    } else if (endIpv6) {\n      address.push(buffer.join(''))\n    } else {\n      address.push(stringArrayToHexStripped(buffer))\n    }\n  }\n  output.address = address.join('')\n  return output\n}\n\nfunction normalizeIPv6 (host) {\n  if (findToken(host, ':') < 2) { return { host, isIPV6: false } }\n  const ipv6 = getIPV6(host)\n\n  if (!ipv6.error) {\n    let newHost = ipv6.address\n    let escapedHost = ipv6.address\n    if (ipv6.zone) {\n      newHost += '%' + ipv6.zone\n      escapedHost += '%25' + ipv6.zone\n    }\n    return { host: newHost, escapedHost, isIPV6: true }\n  } else {\n    return { host, isIPV6: false }\n  }\n}\n\nfunction stripLeadingZeros (str, token) {\n  let out = ''\n  let skip = true\n  const l = str.length\n  for (let i = 0; i < l; i++) {\n    const c = str[i]\n    if (c === '0' && skip) {\n      if ((i + 1 <= l && str[i + 1] === token) || i + 1 === l) {\n        out += c\n        skip = false\n      }\n    } else {\n      if (c === token) {\n        skip = true\n      } else {\n        skip = false\n      }\n      out += c\n    }\n  }\n  return out\n}\n\nfunction findToken (str, token) {\n  let ind = 0\n  for (let i = 0; i < str.length; i++) {\n    if (str[i] === token) ind++\n  }\n  return ind\n}\n\nconst RDS1 = /^\\.\\.?\\//u\nconst RDS2 = /^\\/\\.(?:\\/|$)/u\nconst RDS3 = /^\\/\\.\\.(?:\\/|$)/u\nconst RDS5 = /^\\/?(?:.|\\n)*?(?=\\/|$)/u\n\nfunction removeDotSegments (input) {\n  const output = []\n\n  while (input.length) {\n    if (input.match(RDS1)) {\n      input = input.replace(RDS1, '')\n    } else if (input.match(RDS2)) {\n      input = input.replace(RDS2, '/')\n    } else if (input.match(RDS3)) {\n      input = input.replace(RDS3, '/')\n      output.pop()\n    } else if (input === '.' || input === '..') {\n      input = ''\n    } else {\n      const im = input.match(RDS5)\n      if (im) {\n        const s = im[0]\n        input = input.slice(s.length)\n        output.push(s)\n      } else {\n        throw new Error('Unexpected dot segment condition')\n      }\n    }\n  }\n  return output.join('')\n}\n\nfunction normalizeComponentEncoding (components, esc) {\n  const func = esc !== true ? escape : unescape\n  if (components.scheme !== undefined) {\n    components.scheme = func(components.scheme)\n  }\n  if (components.userinfo !== undefined) {\n    components.userinfo = func(components.userinfo)\n  }\n  if (components.host !== undefined) {\n    components.host = func(components.host)\n  }\n  if (components.path !== undefined) {\n    components.path = func(components.path)\n  }\n  if (components.query !== undefined) {\n    components.query = func(components.query)\n  }\n  if (components.fragment !== undefined) {\n    components.fragment = func(components.fragment)\n  }\n  return components\n}\n\nfunction recomposeAuthority (components) {\n  const uriTokens = []\n\n  if (components.userinfo !== undefined) {\n    uriTokens.push(components.userinfo)\n    uriTokens.push('@')\n  }\n\n  if (components.host !== undefined) {\n    let host = unescape(components.host)\n    const ipV4res = normalizeIPv4(host)\n\n    if (ipV4res.isIPV4) {\n      host = ipV4res.host\n    } else {\n      const ipV6res = normalizeIPv6(ipV4res.host)\n      if (ipV6res.isIPV6 === true) {\n        host = `[${ipV6res.escapedHost}]`\n      } else {\n        host = components.host\n      }\n    }\n    uriTokens.push(host)\n  }\n\n  if (typeof components.port === 'number' || typeof components.port === 'string') {\n    uriTokens.push(':')\n    uriTokens.push(String(components.port))\n  }\n\n  return uriTokens.length ? uriTokens.join('') : undefined\n};\n\nmodule.exports = {\n  recomposeAuthority,\n  normalizeComponentEncoding,\n  removeDotSegments,\n  normalizeIPv4,\n  normalizeIPv6,\n  stringArrayToHexStripped\n}\n","import type {CodeKeywordDefinition, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str, operators} from \"../../compile/codegen\"\n\nconst error: KeywordErrorDefinition = {\n  message({keyword, schemaCode}) {\n    const comp = keyword === \"maxProperties\" ? \"more\" : \"fewer\"\n    return str`must NOT have ${comp} than ${schemaCode} properties`\n  },\n  params: ({schemaCode}) => _`{limit: ${schemaCode}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: [\"maxProperties\", \"minProperties\"],\n  type: \"object\",\n  schemaType: \"number\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {keyword, data, schemaCode} = cxt\n    const op = keyword === \"maxProperties\" ? operators.GT : operators.LT\n    cxt.fail$data(_`Object.keys(${data}).length ${op} ${schemaCode}`)\n  },\n}\n\nexport default def\n","// eslint-disable-next-line @typescript-eslint/no-extraneous-class\nexport abstract class _CodeOrName {\n  abstract readonly str: string\n  abstract readonly names: UsedNames\n  abstract toString(): string\n  abstract emptyStr(): boolean\n}\n\nexport const IDENTIFIER = /^[a-z$_][a-z$_0-9]*$/i\n\nexport class Name extends _CodeOrName {\n  readonly str: string\n  constructor(s: string) {\n    super()\n    if (!IDENTIFIER.test(s)) throw new Error(\"CodeGen: name must be a valid identifier\")\n    this.str = s\n  }\n\n  toString(): string {\n    return this.str\n  }\n\n  emptyStr(): boolean {\n    return false\n  }\n\n  get names(): UsedNames {\n    return {[this.str]: 1}\n  }\n}\n\nexport class _Code extends _CodeOrName {\n  readonly _items: readonly CodeItem[]\n  private _str?: string\n  private _names?: UsedNames\n\n  constructor(code: string | readonly CodeItem[]) {\n    super()\n    this._items = typeof code === \"string\" ? [code] : code\n  }\n\n  toString(): string {\n    return this.str\n  }\n\n  emptyStr(): boolean {\n    if (this._items.length > 1) return false\n    const item = this._items[0]\n    return item === \"\" || item === '\"\"'\n  }\n\n  get str(): string {\n    return (this._str ??= this._items.reduce((s: string, c: CodeItem) => `${s}${c}`, \"\"))\n  }\n\n  get names(): UsedNames {\n    return (this._names ??= this._items.reduce((names: UsedNames, c) => {\n      if (c instanceof Name) names[c.str] = (names[c.str] || 0) + 1\n      return names\n    }, {}))\n  }\n}\n\nexport type CodeItem = Name | string | number | boolean | null\n\nexport type UsedNames = Record<string, number | undefined>\n\nexport type Code = _Code | Name\n\nexport type SafeExpr = Code | number | boolean | null\n\nexport const nil = new _Code(\"\")\n\ntype CodeArg = SafeExpr | string | undefined\n\nexport function _(strs: TemplateStringsArray, ...args: CodeArg[]): _Code {\n  const code: CodeItem[] = [strs[0]]\n  let i = 0\n  while (i < args.length) {\n    addCodeArg(code, args[i])\n    code.push(strs[++i])\n  }\n  return new _Code(code)\n}\n\nconst plus = new _Code(\"+\")\n\nexport function str(strs: TemplateStringsArray, ...args: (CodeArg | string[])[]): _Code {\n  const expr: CodeItem[] = [safeStringify(strs[0])]\n  let i = 0\n  while (i < args.length) {\n    expr.push(plus)\n    addCodeArg(expr, args[i])\n    expr.push(plus, safeStringify(strs[++i]))\n  }\n  optimize(expr)\n  return new _Code(expr)\n}\n\nexport function addCodeArg(code: CodeItem[], arg: CodeArg | string[]): void {\n  if (arg instanceof _Code) code.push(...arg._items)\n  else if (arg instanceof Name) code.push(arg)\n  else code.push(interpolate(arg))\n}\n\nfunction optimize(expr: CodeItem[]): void {\n  let i = 1\n  while (i < expr.length - 1) {\n    if (expr[i] === plus) {\n      const res = mergeExprItems(expr[i - 1], expr[i + 1])\n      if (res !== undefined) {\n        expr.splice(i - 1, 3, res)\n        continue\n      }\n      expr[i++] = \"+\"\n    }\n    i++\n  }\n}\n\nfunction mergeExprItems(a: CodeItem, b: CodeItem): CodeItem | undefined {\n  if (b === '\"\"') return a\n  if (a === '\"\"') return b\n  if (typeof a == \"string\") {\n    if (b instanceof Name || a[a.length - 1] !== '\"') return\n    if (typeof b != \"string\") return `${a.slice(0, -1)}${b}\"`\n    if (b[0] === '\"') return a.slice(0, -1) + b.slice(1)\n    return\n  }\n  if (typeof b == \"string\" && b[0] === '\"' && !(a instanceof Name)) return `\"${a}${b.slice(1)}`\n  return\n}\n\nexport function strConcat(c1: Code, c2: Code): Code {\n  return c2.emptyStr() ? c1 : c1.emptyStr() ? c2 : str`${c1}${c2}`\n}\n\n// TODO do not allow arrays here\nfunction interpolate(x?: string | string[] | number | boolean | null): SafeExpr | string {\n  return typeof x == \"number\" || typeof x == \"boolean\" || x === null\n    ? x\n    : safeStringify(Array.isArray(x) ? x.join(\",\") : x)\n}\n\nexport function stringify(x: unknown): Code {\n  return new _Code(safeStringify(x))\n}\n\nexport function safeStringify(x: unknown): string {\n  return JSON.stringify(x)\n    .replace(/\\u2028/g, \"\\\\u2028\")\n    .replace(/\\u2029/g, \"\\\\u2029\")\n}\n\nexport function getProperty(key: Code | string | number): Code {\n  return typeof key == \"string\" && IDENTIFIER.test(key) ? new _Code(`.${key}`) : _`[${key}]`\n}\n\n//Does best effort to format the name properly\nexport function getEsmExportName(key: Code | string | number): Code {\n  if (typeof key == \"string\" && IDENTIFIER.test(key)) {\n    return new _Code(`${key}`)\n  }\n  throw new Error(`CodeGen: invalid export name: ${key}, use explicit $id name mapping`)\n}\n\nexport function regexpCode(rx: RegExp): Code {\n  return new _Code(rx.toString())\n}\n","import type {CodeKeywordDefinition, AnySchema} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {alwaysValidSchema} from \"../../compile/util\"\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"allOf\",\n  schemaType: \"array\",\n  code(cxt: KeywordCxt) {\n    const {gen, schema, it} = cxt\n    /* istanbul ignore if */\n    if (!Array.isArray(schema)) throw new Error(\"ajv implementation error\")\n    const valid = gen.name(\"valid\")\n    schema.forEach((sch: AnySchema, i: number) => {\n      if (alwaysValidSchema(it, sch)) return\n      const schCxt = cxt.subschema({keyword: \"allOf\", schemaProp: i}, valid)\n      cxt.ok(valid)\n      cxt.mergeEvaluated(schCxt)\n    })\n  },\n}\n\nexport default def\n","import type {\n  AnySchema,\n  AnySchemaObject,\n  AnyValidateFunction,\n  AsyncValidateFunction,\n  EvaluatedProperties,\n  EvaluatedItems,\n} from \"../types\"\nimport type Ajv from \"../core\"\nimport type {InstanceOptions} from \"../core\"\nimport {CodeGen, _, nil, stringify, Name, Code, ValueScopeName} from \"./codegen\"\nimport ValidationError from \"../runtime/validation_error\"\nimport N from \"./names\"\nimport {LocalRefs, getFullPath, _getFullPath, inlineRef, normalizeId, resolveUrl} from \"./resolve\"\nimport {schemaHasRulesButRef, unescapeFragment} from \"./util\"\nimport {validateFunctionCode} from \"./validate\"\nimport {URIComponent} from \"fast-uri\"\nimport {JSONType} from \"./rules\"\n\nexport type SchemaRefs = {\n  [Ref in string]?: SchemaEnv | AnySchema\n}\n\nexport interface SchemaCxt {\n  readonly gen: CodeGen\n  readonly allErrors?: boolean // validation mode - whether to collect all errors or break on error\n  readonly data: Name // Name with reference to the current part of data instance\n  readonly parentData: Name // should be used in keywords modifying data\n  readonly parentDataProperty: Code | number // should be used in keywords modifying data\n  readonly dataNames: Name[]\n  readonly dataPathArr: (Code | number)[]\n  readonly dataLevel: number // the level of the currently validated data,\n  // it can be used to access both the property names and the data on all levels from the top.\n  dataTypes: JSONType[] // data types applied to the current part of data instance\n  definedProperties: Set<string> // set of properties to keep track of for required checks\n  readonly topSchemaRef: Code\n  readonly validateName: Name\n  evaluated?: Name\n  readonly ValidationError?: Name\n  readonly schema: AnySchema // current schema object - equal to parentSchema passed via KeywordCxt\n  readonly schemaEnv: SchemaEnv\n  readonly rootId: string\n  baseId: string // the current schema base URI that should be used as the base for resolving URIs in references (\\$ref)\n  readonly schemaPath: Code // the run-time expression that evaluates to the property name of the current schema\n  readonly errSchemaPath: string // this is actual string, should not be changed to Code\n  readonly errorPath: Code\n  readonly propertyName?: Name\n  readonly compositeRule?: boolean // true indicates that the current schema is inside the compound keyword,\n  // where failing some rule doesn't mean validation failure (`anyOf`, `oneOf`, `not`, `if`).\n  // This flag is used to determine whether you can return validation result immediately after any error in case the option `allErrors` is not `true.\n  // You only need to use it if you have many steps in your keywords and potentially can define multiple errors.\n  props?: EvaluatedProperties | Name // properties evaluated by this schema - used by parent schema or assigned to validation function\n  items?: EvaluatedItems | Name // last item evaluated by this schema - used by parent schema or assigned to validation function\n  jtdDiscriminator?: string\n  jtdMetadata?: boolean\n  readonly createErrors?: boolean\n  readonly opts: InstanceOptions // Ajv instance option.\n  readonly self: Ajv // current Ajv instance\n}\n\nexport interface SchemaObjCxt extends SchemaCxt {\n  readonly schema: AnySchemaObject\n}\ninterface SchemaEnvArgs {\n  readonly schema: AnySchema\n  readonly schemaId?: \"$id\" | \"id\"\n  readonly root?: SchemaEnv\n  readonly baseId?: string\n  readonly schemaPath?: string\n  readonly localRefs?: LocalRefs\n  readonly meta?: boolean\n}\n\nexport class SchemaEnv implements SchemaEnvArgs {\n  readonly schema: AnySchema\n  readonly schemaId?: \"$id\" | \"id\"\n  readonly root: SchemaEnv\n  baseId: string // TODO possibly, it should be readonly\n  schemaPath?: string\n  localRefs?: LocalRefs\n  readonly meta?: boolean\n  readonly $async?: boolean // true if the current schema is asynchronous.\n  readonly refs: SchemaRefs = {}\n  readonly dynamicAnchors: {[Ref in string]?: true} = {}\n  validate?: AnyValidateFunction\n  validateName?: ValueScopeName\n  serialize?: (data: unknown) => string\n  serializeName?: ValueScopeName\n  parse?: (data: string) => unknown\n  parseName?: ValueScopeName\n\n  constructor(env: SchemaEnvArgs) {\n    let schema: AnySchemaObject | undefined\n    if (typeof env.schema == \"object\") schema = env.schema\n    this.schema = env.schema\n    this.schemaId = env.schemaId\n    this.root = env.root || this\n    this.baseId = env.baseId ?? normalizeId(schema?.[env.schemaId || \"$id\"])\n    this.schemaPath = env.schemaPath\n    this.localRefs = env.localRefs\n    this.meta = env.meta\n    this.$async = schema?.$async\n    this.refs = {}\n  }\n}\n\n// let codeSize = 0\n// let nodeCount = 0\n\n// Compiles schema in SchemaEnv\nexport function compileSchema(this: Ajv, sch: SchemaEnv): SchemaEnv {\n  // TODO refactor - remove compilations\n  const _sch = getCompilingSchema.call(this, sch)\n  if (_sch) return _sch\n  const rootId = getFullPath(this.opts.uriResolver, sch.root.baseId) // TODO if getFullPath removed 1 tests fails\n  const {es5, lines} = this.opts.code\n  const {ownProperties} = this.opts\n  const gen = new CodeGen(this.scope, {es5, lines, ownProperties})\n  let _ValidationError\n  if (sch.$async) {\n    _ValidationError = gen.scopeValue(\"Error\", {\n      ref: ValidationError,\n      code: _`require(\"ajv/dist/runtime/validation_error\").default`,\n    })\n  }\n\n  const validateName = gen.scopeName(\"validate\")\n  sch.validateName = validateName\n\n  const schemaCxt: SchemaCxt = {\n    gen,\n    allErrors: this.opts.allErrors,\n    data: N.data,\n    parentData: N.parentData,\n    parentDataProperty: N.parentDataProperty,\n    dataNames: [N.data],\n    dataPathArr: [nil], // TODO can its length be used as dataLevel if nil is removed?\n    dataLevel: 0,\n    dataTypes: [],\n    definedProperties: new Set<string>(),\n    topSchemaRef: gen.scopeValue(\n      \"schema\",\n      this.opts.code.source === true\n        ? {ref: sch.schema, code: stringify(sch.schema)}\n        : {ref: sch.schema}\n    ),\n    validateName,\n    ValidationError: _ValidationError,\n    schema: sch.schema,\n    schemaEnv: sch,\n    rootId,\n    baseId: sch.baseId || rootId,\n    schemaPath: nil,\n    errSchemaPath: sch.schemaPath || (this.opts.jtd ? \"\" : \"#\"),\n    errorPath: _`\"\"`,\n    opts: this.opts,\n    self: this,\n  }\n\n  let sourceCode: string | undefined\n  try {\n    this._compilations.add(sch)\n    validateFunctionCode(schemaCxt)\n    gen.optimize(this.opts.code.optimize)\n    // gen.optimize(1)\n    const validateCode = gen.toString()\n    sourceCode = `${gen.scopeRefs(N.scope)}return ${validateCode}`\n    // console.log((codeSize += sourceCode.length), (nodeCount += gen.nodeCount))\n    if (this.opts.code.process) sourceCode = this.opts.code.process(sourceCode, sch)\n    // console.log(\"\\n\\n\\n *** \\n\", sourceCode)\n    const makeValidate = new Function(`${N.self}`, `${N.scope}`, sourceCode)\n    const validate: AnyValidateFunction = makeValidate(this, this.scope.get())\n    this.scope.value(validateName, {ref: validate})\n\n    validate.errors = null\n    validate.schema = sch.schema\n    validate.schemaEnv = sch\n    if (sch.$async) (validate as AsyncValidateFunction).$async = true\n    if (this.opts.code.source === true) {\n      validate.source = {validateName, validateCode, scopeValues: gen._values}\n    }\n    if (this.opts.unevaluated) {\n      const {props, items} = schemaCxt\n      validate.evaluated = {\n        props: props instanceof Name ? undefined : props,\n        items: items instanceof Name ? undefined : items,\n        dynamicProps: props instanceof Name,\n        dynamicItems: items instanceof Name,\n      }\n      if (validate.source) validate.source.evaluated = stringify(validate.evaluated)\n    }\n    sch.validate = validate\n    return sch\n  } catch (e) {\n    delete sch.validate\n    delete sch.validateName\n    if (sourceCode) this.logger.error(\"Error compiling schema, function code:\", sourceCode)\n    // console.log(\"\\n\\n\\n *** \\n\", sourceCode, this.opts)\n    throw e\n  } finally {\n    this._compilations.delete(sch)\n  }\n}\n\nexport function resolveRef(\n  this: Ajv,\n  root: SchemaEnv,\n  baseId: string,\n  ref: string\n): AnySchema | SchemaEnv | undefined {\n  ref = resolveUrl(this.opts.uriResolver, baseId, ref)\n  const schOrFunc = root.refs[ref]\n  if (schOrFunc) return schOrFunc\n\n  let _sch = resolve.call(this, root, ref)\n  if (_sch === undefined) {\n    const schema = root.localRefs?.[ref] // TODO maybe localRefs should hold SchemaEnv\n    const {schemaId} = this.opts\n    if (schema) _sch = new SchemaEnv({schema, schemaId, root, baseId})\n  }\n\n  if (_sch === undefined) return\n  return (root.refs[ref] = inlineOrCompile.call(this, _sch))\n}\n\nfunction inlineOrCompile(this: Ajv, sch: SchemaEnv): AnySchema | SchemaEnv {\n  if (inlineRef(sch.schema, this.opts.inlineRefs)) return sch.schema\n  return sch.validate ? sch : compileSchema.call(this, sch)\n}\n\n// Index of schema compilation in the currently compiled list\nexport function getCompilingSchema(this: Ajv, schEnv: SchemaEnv): SchemaEnv | void {\n  for (const sch of this._compilations) {\n    if (sameSchemaEnv(sch, schEnv)) return sch\n  }\n}\n\nfunction sameSchemaEnv(s1: SchemaEnv, s2: SchemaEnv): boolean {\n  return s1.schema === s2.schema && s1.root === s2.root && s1.baseId === s2.baseId\n}\n\n// resolve and compile the references ($ref)\n// TODO returns AnySchemaObject (if the schema can be inlined) or validation function\nfunction resolve(\n  this: Ajv,\n  root: SchemaEnv, // information about the root schema for the current schema\n  ref: string // reference to resolve\n): SchemaEnv | undefined {\n  let sch\n  while (typeof (sch = this.refs[ref]) == \"string\") ref = sch\n  return sch || this.schemas[ref] || resolveSchema.call(this, root, ref)\n}\n\n// Resolve schema, its root and baseId\nexport function resolveSchema(\n  this: Ajv,\n  root: SchemaEnv, // root object with properties schema, refs TODO below SchemaEnv is assigned to it\n  ref: string // reference to resolve\n): SchemaEnv | undefined {\n  const p = this.opts.uriResolver.parse(ref)\n  const refPath = _getFullPath(this.opts.uriResolver, p)\n  let baseId = getFullPath(this.opts.uriResolver, root.baseId, undefined)\n  // TODO `Object.keys(root.schema).length > 0` should not be needed - but removing breaks 2 tests\n  if (Object.keys(root.schema).length > 0 && refPath === baseId) {\n    return getJsonPointer.call(this, p, root)\n  }\n\n  const id = normalizeId(refPath)\n  const schOrRef = this.refs[id] || this.schemas[id]\n  if (typeof schOrRef == \"string\") {\n    const sch = resolveSchema.call(this, root, schOrRef)\n    if (typeof sch?.schema !== \"object\") return\n    return getJsonPointer.call(this, p, sch)\n  }\n\n  if (typeof schOrRef?.schema !== \"object\") return\n  if (!schOrRef.validate) compileSchema.call(this, schOrRef)\n  if (id === normalizeId(ref)) {\n    const {schema} = schOrRef\n    const {schemaId} = this.opts\n    const schId = schema[schemaId]\n    if (schId) baseId = resolveUrl(this.opts.uriResolver, baseId, schId)\n    return new SchemaEnv({schema, schemaId, root, baseId})\n  }\n  return getJsonPointer.call(this, p, schOrRef)\n}\n\nconst PREVENT_SCOPE_CHANGE = new Set([\n  \"properties\",\n  \"patternProperties\",\n  \"enum\",\n  \"dependencies\",\n  \"definitions\",\n])\n\nfunction getJsonPointer(\n  this: Ajv,\n  parsedRef: URIComponent,\n  {baseId, schema, root}: SchemaEnv\n): SchemaEnv | undefined {\n  if (parsedRef.fragment?.[0] !== \"/\") return\n  for (const part of parsedRef.fragment.slice(1).split(\"/\")) {\n    if (typeof schema === \"boolean\") return\n    const partSchema = schema[unescapeFragment(part)]\n    if (partSchema === undefined) return\n    schema = partSchema\n    // TODO PREVENT_SCOPE_CHANGE could be defined in keyword def?\n    const schId = typeof schema === \"object\" && schema[this.opts.schemaId]\n    if (!PREVENT_SCOPE_CHANGE.has(part) && schId) {\n      baseId = resolveUrl(this.opts.uriResolver, baseId, schId)\n    }\n  }\n  let env: SchemaEnv | undefined\n  if (typeof schema != \"boolean\" && schema.$ref && !schemaHasRulesButRef(schema, this.RULES)) {\n    const $ref = resolveUrl(this.opts.uriResolver, baseId, schema.$ref)\n    env = resolveSchema.call(this, root, $ref)\n  }\n  // even though resolution failed we need to return SchemaEnv to throw exception\n  // so that compileAsync loads missing schema.\n  const {schemaId} = this.opts\n  env = env || new SchemaEnv({schema, schemaId, root, baseId})\n  if (env.schema !== env.root.schema) return env\n  return undefined\n}\n","import type {\n  CodeKeywordDefinition,\n  ErrorObject,\n  KeywordErrorDefinition,\n  AnySchema,\n} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, Name} from \"../../compile/codegen\"\nimport {alwaysValidSchema} from \"../../compile/util\"\nimport {SchemaCxt} from \"../../compile\"\n\nexport type OneOfError = ErrorObject<\n  \"oneOf\",\n  {passingSchemas: [number, number] | null},\n  AnySchema[]\n>\n\nconst error: KeywordErrorDefinition = {\n  message: \"must match exactly one schema in oneOf\",\n  params: ({params}) => _`{passingSchemas: ${params.passing}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"oneOf\",\n  schemaType: \"array\",\n  trackErrors: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {gen, schema, parentSchema, it} = cxt\n    /* istanbul ignore if */\n    if (!Array.isArray(schema)) throw new Error(\"ajv implementation error\")\n    if (it.opts.discriminator && parentSchema.discriminator) return\n    const schArr: AnySchema[] = schema\n    const valid = gen.let(\"valid\", false)\n    const passing = gen.let(\"passing\", null)\n    const schValid = gen.name(\"_valid\")\n    cxt.setParams({passing})\n    // TODO possibly fail straight away (with warning or exception) if there are two empty always valid schemas\n\n    gen.block(validateOneOf)\n\n    cxt.result(\n      valid,\n      () => cxt.reset(),\n      () => cxt.error(true)\n    )\n\n    function validateOneOf(): void {\n      schArr.forEach((sch: AnySchema, i: number) => {\n        let schCxt: SchemaCxt | undefined\n        if (alwaysValidSchema(it, sch)) {\n          gen.var(schValid, true)\n        } else {\n          schCxt = cxt.subschema(\n            {\n              keyword: \"oneOf\",\n              schemaProp: i,\n              compositeRule: true,\n            },\n            schValid\n          )\n        }\n\n        if (i > 0) {\n          gen\n            .if(_`${schValid} && ${valid}`)\n            .assign(valid, false)\n            .assign(passing, _`[${passing}, ${i}]`)\n            .else()\n        }\n\n        gen.if(schValid, () => {\n          gen.assign(valid, true)\n          gen.assign(passing, i)\n          if (schCxt) cxt.mergeEvaluated(schCxt, Name)\n        })\n      })\n    }\n  },\n}\n\nexport default def\n","import type {CodeKeywordDefinition, ErrorObject, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {\n  checkReportMissingProp,\n  checkMissingProp,\n  reportMissingProp,\n  propertyInData,\n  noPropertyInData,\n} from \"../code\"\nimport {_, str, nil, not, Name, Code} from \"../../compile/codegen\"\nimport {checkStrictMode} from \"../../compile/util\"\n\nexport type RequiredError = ErrorObject<\n  \"required\",\n  {missingProperty: string},\n  string[] | {$data: string}\n>\n\nconst error: KeywordErrorDefinition = {\n  message: ({params: {missingProperty}}) => str`must have required property '${missingProperty}'`,\n  params: ({params: {missingProperty}}) => _`{missingProperty: ${missingProperty}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"required\",\n  type: \"object\",\n  schemaType: \"array\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {gen, schema, schemaCode, data, $data, it} = cxt\n    const {opts} = it\n    if (!$data && schema.length === 0) return\n    const useLoop = schema.length >= opts.loopRequired\n    if (it.allErrors) allErrorsMode()\n    else exitOnErrorMode()\n\n    if (opts.strictRequired) {\n      const props = cxt.parentSchema.properties\n      const {definedProperties} = cxt.it\n      for (const requiredKey of schema) {\n        if (props?.[requiredKey] === undefined && !definedProperties.has(requiredKey)) {\n          const schemaPath = it.schemaEnv.baseId + it.errSchemaPath\n          const msg = `required property \"${requiredKey}\" is not defined at \"${schemaPath}\" (strictRequired)`\n          checkStrictMode(it, msg, it.opts.strictRequired)\n        }\n      }\n    }\n\n    function allErrorsMode(): void {\n      if (useLoop || $data) {\n        cxt.block$data(nil, loopAllRequired)\n      } else {\n        for (const prop of schema) {\n          checkReportMissingProp(cxt, prop)\n        }\n      }\n    }\n\n    function exitOnErrorMode(): void {\n      const missing = gen.let(\"missing\")\n      if (useLoop || $data) {\n        const valid = gen.let(\"valid\", true)\n        cxt.block$data(valid, () => loopUntilMissing(missing, valid))\n        cxt.ok(valid)\n      } else {\n        gen.if(checkMissingProp(cxt, schema, missing))\n        reportMissingProp(cxt, missing)\n        gen.else()\n      }\n    }\n\n    function loopAllRequired(): void {\n      gen.forOf(\"prop\", schemaCode as Code, (prop) => {\n        cxt.setParams({missingProperty: prop})\n        gen.if(noPropertyInData(gen, data, prop, opts.ownProperties), () => cxt.error())\n      })\n    }\n\n    function loopUntilMissing(missing: Name, valid: Name): void {\n      cxt.setParams({missingProperty: missing})\n      gen.forOf(\n        missing,\n        schemaCode as Code,\n        () => {\n          gen.assign(valid, propertyInData(gen, data, missing, opts.ownProperties))\n          gen.if(not(valid), () => {\n            cxt.error()\n            gen.break()\n          })\n        },\n        nil\n      )\n    }\n  },\n}\n\nexport default def\n","import type {CodeKeywordDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {checkStrictMode} from \"../../compile/util\"\n\nconst def: CodeKeywordDefinition = {\n  keyword: [\"then\", \"else\"],\n  schemaType: [\"object\", \"boolean\"],\n  code({keyword, parentSchema, it}: KeywordCxt) {\n    if (parentSchema.if === undefined) checkStrictMode(it, `\"${keyword}\" without \"if\" is ignored`)\n  },\n}\n\nexport default def\n","import type {CodeKeywordDefinition, ErrorObject, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_} from \"../../compile/codegen\"\nimport {useFunc} from \"../../compile/util\"\nimport equal from \"../../runtime/equal\"\n\nexport type ConstError = ErrorObject<\"const\", {allowedValue: any}>\n\nconst error: KeywordErrorDefinition = {\n  message: \"must be equal to constant\",\n  params: ({schemaCode}) => _`{allowedValue: ${schemaCode}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"const\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {gen, data, $data, schemaCode, schema} = cxt\n    if ($data || (schema && typeof schema == \"object\")) {\n      cxt.fail$data(_`!${useFunc(gen, equal)}(${data}, ${schemaCode})`)\n    } else {\n      cxt.fail(_`${schema} !== ${data}`)\n    }\n  },\n}\n\nexport default def\n","import type {Vocabulary} from \"../types\"\n\nexport const metadataVocabulary: Vocabulary = [\n  \"title\",\n  \"description\",\n  \"default\",\n  \"deprecated\",\n  \"readOnly\",\n  \"writeOnly\",\n  \"examples\",\n]\n\nexport const contentVocabulary: Vocabulary = [\n  \"contentMediaType\",\n  \"contentEncoding\",\n  \"contentSchema\",\n]\n","import type {CodeKeywordDefinition, ErrorNoParams, AnySchema} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {alwaysValidSchema} from \"../../compile/util\"\n\nexport type NotKeywordError = ErrorNoParams<\"not\", AnySchema>\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"not\",\n  schemaType: [\"object\", \"boolean\"],\n  trackErrors: true,\n  code(cxt: KeywordCxt) {\n    const {gen, schema, it} = cxt\n    if (alwaysValidSchema(it, schema)) {\n      cxt.fail()\n      return\n    }\n\n    const valid = gen.name(\"valid\")\n    cxt.subschema(\n      {\n        keyword: \"not\",\n        compositeRule: true,\n        createErrors: false,\n        allErrors: false,\n      },\n      valid\n    )\n\n    cxt.failResult(\n      valid,\n      () => cxt.reset(),\n      () => cxt.error()\n    )\n  },\n  error: {message: \"must NOT be valid\"},\n}\n\nexport default def\n","import type {CodeKeywordDefinition} from \"../../types\"\nimport {KeywordCxt} from \"../../compile/validate\"\nimport {propertyInData, allSchemaProperties} from \"../code\"\nimport {alwaysValidSchema, toHash, mergeEvaluated} from \"../../compile/util\"\nimport apDef from \"./additionalProperties\"\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"properties\",\n  type: \"object\",\n  schemaType: \"object\",\n  code(cxt: KeywordCxt) {\n    const {gen, schema, parentSchema, data, it} = cxt\n    if (it.opts.removeAdditional === \"all\" && parentSchema.additionalProperties === undefined) {\n      apDef.code(new KeywordCxt(it, apDef, \"additionalProperties\"))\n    }\n    const allProps = allSchemaProperties(schema)\n    for (const prop of allProps) {\n      it.definedProperties.add(prop)\n    }\n    if (it.opts.unevaluated && allProps.length && it.props !== true) {\n      it.props = mergeEvaluated.props(gen, toHash(allProps), it.props)\n    }\n    const properties = allProps.filter((p) => !alwaysValidSchema(it, schema[p]))\n    if (properties.length === 0) return\n    const valid = gen.name(\"valid\")\n\n    for (const prop of properties) {\n      if (hasDefault(prop)) {\n        applyPropertySchema(prop)\n      } else {\n        gen.if(propertyInData(gen, data, prop, it.opts.ownProperties))\n        applyPropertySchema(prop)\n        if (!it.allErrors) gen.else().var(valid, true)\n        gen.endIf()\n      }\n      cxt.it.definedProperties.add(prop)\n      cxt.ok(valid)\n    }\n\n    function hasDefault(prop: string): boolean | undefined {\n      return it.opts.useDefaults && !it.compositeRule && schema[prop].default !== undefined\n    }\n\n    function applyPropertySchema(prop: string): void {\n      cxt.subschema(\n        {\n          keyword: \"properties\",\n          schemaProp: prop,\n          dataProp: prop,\n        },\n        valid\n      )\n    }\n  },\n}\n\nexport default def\n","import type {Vocabulary} from \"../../types\"\nimport idKeyword from \"./id\"\nimport refKeyword from \"./ref\"\n\nconst core: Vocabulary = [\n  \"$schema\",\n  \"$id\",\n  \"$defs\",\n  \"$vocabulary\",\n  {keyword: \"$comment\"},\n  \"definitions\",\n  idKeyword,\n  refKeyword,\n]\n\nexport default core\n","'use strict'\n\nconst HEX = {\n  0: 0,\n  1: 1,\n  2: 2,\n  3: 3,\n  4: 4,\n  5: 5,\n  6: 6,\n  7: 7,\n  8: 8,\n  9: 9,\n  a: 10,\n  A: 10,\n  b: 11,\n  B: 11,\n  c: 12,\n  C: 12,\n  d: 13,\n  D: 13,\n  e: 14,\n  E: 14,\n  f: 15,\n  F: 15\n}\n\nmodule.exports = {\n  HEX\n}\n","import type {ErrorObject} from \"../../types\"\n\nexport enum DiscrError {\n  Tag = \"tag\",\n  Mapping = \"mapping\",\n}\n\nexport type DiscrErrorObj<E extends DiscrError> = ErrorObject<\n  \"discriminator\",\n  {error: E; tag: string; tagValue: unknown},\n  string\n>\n","import type {\n  CodeKeywordDefinition,\n  ErrorObject,\n  KeywordErrorDefinition,\n  AnySchema,\n} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, not} from \"../../compile/codegen\"\nimport {alwaysValidSchema} from \"../../compile/util\"\n\nexport type PropertyNamesError = ErrorObject<\"propertyNames\", {propertyName: string}, AnySchema>\n\nconst error: KeywordErrorDefinition = {\n  message: \"property name must be valid\",\n  params: ({params}) => _`{propertyName: ${params.propertyName}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"propertyNames\",\n  type: \"object\",\n  schemaType: [\"object\", \"boolean\"],\n  error,\n  code(cxt: KeywordCxt) {\n    const {gen, schema, data, it} = cxt\n    if (alwaysValidSchema(it, schema)) return\n    const valid = gen.name(\"valid\")\n\n    gen.forIn(\"key\", data, (key) => {\n      cxt.setParams({propertyName: key})\n      cxt.subschema(\n        {\n          keyword: \"propertyNames\",\n          data: key,\n          dataTypes: [\"string\"],\n          propertyName: key,\n          compositeRule: true,\n        },\n        valid\n      )\n      gen.if(not(valid), () => {\n        cxt.error(true)\n        if (!it.allErrors) gen.break()\n      })\n    })\n\n    cxt.ok(valid)\n  },\n}\n\nexport default def\n","import type {CodeKeywordDefinition, ErrorObject, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str, operators, Code} from \"../../compile/codegen\"\n\nconst ops = operators\n\ntype Kwd = \"maximum\" | \"minimum\" | \"exclusiveMaximum\" | \"exclusiveMinimum\"\n\ntype Comparison = \"<=\" | \">=\" | \"<\" | \">\"\n\nconst KWDs: {[K in Kwd]: {okStr: Comparison; ok: Code; fail: Code}} = {\n  maximum: {okStr: \"<=\", ok: ops.LTE, fail: ops.GT},\n  minimum: {okStr: \">=\", ok: ops.GTE, fail: ops.LT},\n  exclusiveMaximum: {okStr: \"<\", ok: ops.LT, fail: ops.GTE},\n  exclusiveMinimum: {okStr: \">\", ok: ops.GT, fail: ops.LTE},\n}\n\nexport type LimitNumberError = ErrorObject<\n  Kwd,\n  {limit: number; comparison: Comparison},\n  number | {$data: string}\n>\n\nconst error: KeywordErrorDefinition = {\n  message: ({keyword, schemaCode}) => str`must be ${KWDs[keyword as Kwd].okStr} ${schemaCode}`,\n  params: ({keyword, schemaCode}) =>\n    _`{comparison: ${KWDs[keyword as Kwd].okStr}, limit: ${schemaCode}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: Object.keys(KWDs),\n  type: \"number\",\n  schemaType: \"number\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {keyword, data, schemaCode} = cxt\n    cxt.fail$data(_`${data} ${KWDs[keyword as Kwd].fail} ${schemaCode} || isNaN(${data})`)\n  },\n}\n\nexport default def\n","import type {CodeKeywordDefinition, ErrorObject, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {checkDataTypes, getSchemaTypes, DataType} from \"../../compile/validate/dataType\"\nimport {_, str, Name} from \"../../compile/codegen\"\nimport {useFunc} from \"../../compile/util\"\nimport equal from \"../../runtime/equal\"\n\nexport type UniqueItemsError = ErrorObject<\n  \"uniqueItems\",\n  {i: number; j: number},\n  boolean | {$data: string}\n>\n\nconst error: KeywordErrorDefinition = {\n  message: ({params: {i, j}}) =>\n    str`must NOT have duplicate items (items ## ${j} and ${i} are identical)`,\n  params: ({params: {i, j}}) => _`{i: ${i}, j: ${j}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"uniqueItems\",\n  type: \"array\",\n  schemaType: \"boolean\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {gen, data, $data, schema, parentSchema, schemaCode, it} = cxt\n    if (!$data && !schema) return\n    const valid = gen.let(\"valid\")\n    const itemTypes = parentSchema.items ? getSchemaTypes(parentSchema.items) : []\n    cxt.block$data(valid, validateUniqueItems, _`${schemaCode} === false`)\n    cxt.ok(valid)\n\n    function validateUniqueItems(): void {\n      const i = gen.let(\"i\", _`${data}.length`)\n      const j = gen.let(\"j\")\n      cxt.setParams({i, j})\n      gen.assign(valid, true)\n      gen.if(_`${i} > 1`, () => (canOptimize() ? loopN : loopN2)(i, j))\n    }\n\n    function canOptimize(): boolean {\n      return itemTypes.length > 0 && !itemTypes.some((t) => t === \"object\" || t === \"array\")\n    }\n\n    function loopN(i: Name, j: Name): void {\n      const item = gen.name(\"item\")\n      const wrongType = checkDataTypes(itemTypes, item, it.opts.strictNumbers, DataType.Wrong)\n      const indices = gen.const(\"indices\", _`{}`)\n      gen.for(_`;${i}--;`, () => {\n        gen.let(item, _`${data}[${i}]`)\n        gen.if(wrongType, _`continue`)\n        if (itemTypes.length > 1) gen.if(_`typeof ${item} == \"string\"`, _`${item} += \"_\"`)\n        gen\n          .if(_`typeof ${indices}[${item}] == \"number\"`, () => {\n            gen.assign(j, _`${indices}[${item}]`)\n            cxt.error()\n            gen.assign(valid, false).break()\n          })\n          .code(_`${indices}[${item}] = ${i}`)\n      })\n    }\n\n    function loopN2(i: Name, j: Name): void {\n      const eql = useFunc(gen, equal)\n      const outer = gen.name(\"outer\")\n      gen.label(outer).for(_`;${i}--;`, () =>\n        gen.for(_`${j} = ${i}; ${j}--;`, () =>\n          gen.if(_`${eql}(${data}[${i}], ${data}[${j}])`, () => {\n            cxt.error()\n            gen.assign(valid, false).break(outer)\n          })\n        )\n      )\n    }\n  },\n}\n\nexport default def\n","import type {AnySchema, AnySchemaObject, UriResolver} from \"../types\"\nimport type Ajv from \"../ajv\"\nimport type {URIComponent} from \"fast-uri\"\nimport {eachItem} from \"./util\"\nimport * as equal from \"fast-deep-equal\"\nimport * as traverse from \"json-schema-traverse\"\n\n// the hash of local references inside the schema (created by getSchemaRefs), used for inline resolution\nexport type LocalRefs = {[Ref in string]?: AnySchemaObject}\n\n// TODO refactor to use keyword definitions\nconst SIMPLE_INLINED = new Set([\n  \"type\",\n  \"format\",\n  \"pattern\",\n  \"maxLength\",\n  \"minLength\",\n  \"maxProperties\",\n  \"minProperties\",\n  \"maxItems\",\n  \"minItems\",\n  \"maximum\",\n  \"minimum\",\n  \"uniqueItems\",\n  \"multipleOf\",\n  \"required\",\n  \"enum\",\n  \"const\",\n])\n\nexport function inlineRef(schema: AnySchema, limit: boolean | number = true): boolean {\n  if (typeof schema == \"boolean\") return true\n  if (limit === true) return !hasRef(schema)\n  if (!limit) return false\n  return countKeys(schema) <= limit\n}\n\nconst REF_KEYWORDS = new Set([\n  \"$ref\",\n  \"$recursiveRef\",\n  \"$recursiveAnchor\",\n  \"$dynamicRef\",\n  \"$dynamicAnchor\",\n])\n\nfunction hasRef(schema: AnySchemaObject): boolean {\n  for (const key in schema) {\n    if (REF_KEYWORDS.has(key)) return true\n    const sch = schema[key]\n    if (Array.isArray(sch) && sch.some(hasRef)) return true\n    if (typeof sch == \"object\" && hasRef(sch)) return true\n  }\n  return false\n}\n\nfunction countKeys(schema: AnySchemaObject): number {\n  let count = 0\n  for (const key in schema) {\n    if (key === \"$ref\") return Infinity\n    count++\n    if (SIMPLE_INLINED.has(key)) continue\n    if (typeof schema[key] == \"object\") {\n      eachItem(schema[key], (sch) => (count += countKeys(sch)))\n    }\n    if (count === Infinity) return Infinity\n  }\n  return count\n}\n\nexport function getFullPath(resolver: UriResolver, id = \"\", normalize?: boolean): string {\n  if (normalize !== false) id = normalizeId(id)\n  const p = resolver.parse(id)\n  return _getFullPath(resolver, p)\n}\n\nexport function _getFullPath(resolver: UriResolver, p: URIComponent): string {\n  const serialized = resolver.serialize(p)\n  return serialized.split(\"#\")[0] + \"#\"\n}\n\nconst TRAILING_SLASH_HASH = /#\\/?$/\nexport function normalizeId(id: string | undefined): string {\n  return id ? id.replace(TRAILING_SLASH_HASH, \"\") : \"\"\n}\n\nexport function resolveUrl(resolver: UriResolver, baseId: string, id: string): string {\n  id = normalizeId(id)\n  return resolver.resolve(baseId, id)\n}\n\nconst ANCHOR = /^[a-z_][-a-z0-9._]*$/i\n\nexport function getSchemaRefs(this: Ajv, schema: AnySchema, baseId: string): LocalRefs {\n  if (typeof schema == \"boolean\") return {}\n  const {schemaId, uriResolver} = this.opts\n  const schId = normalizeId(schema[schemaId] || baseId)\n  const baseIds: {[JsonPtr in string]?: string} = {\"\": schId}\n  const pathPrefix = getFullPath(uriResolver, schId, false)\n  const localRefs: LocalRefs = {}\n  const schemaRefs: Set<string> = new Set()\n\n  traverse(schema, {allKeys: true}, (sch, jsonPtr, _, parentJsonPtr) => {\n    if (parentJsonPtr === undefined) return\n    const fullPath = pathPrefix + jsonPtr\n    let innerBaseId = baseIds[parentJsonPtr]\n    if (typeof sch[schemaId] == \"string\") innerBaseId = addRef.call(this, sch[schemaId])\n    addAnchor.call(this, sch.$anchor)\n    addAnchor.call(this, sch.$dynamicAnchor)\n    baseIds[jsonPtr] = innerBaseId\n\n    function addRef(this: Ajv, ref: string): string {\n      // eslint-disable-next-line @typescript-eslint/unbound-method\n      const _resolve = this.opts.uriResolver.resolve\n      ref = normalizeId(innerBaseId ? _resolve(innerBaseId, ref) : ref)\n      if (schemaRefs.has(ref)) throw ambiguos(ref)\n      schemaRefs.add(ref)\n      let schOrRef = this.refs[ref]\n      if (typeof schOrRef == \"string\") schOrRef = this.refs[schOrRef]\n      if (typeof schOrRef == \"object\") {\n        checkAmbiguosRef(sch, schOrRef.schema, ref)\n      } else if (ref !== normalizeId(fullPath)) {\n        if (ref[0] === \"#\") {\n          checkAmbiguosRef(sch, localRefs[ref], ref)\n          localRefs[ref] = sch\n        } else {\n          this.refs[ref] = fullPath\n        }\n      }\n      return ref\n    }\n\n    function addAnchor(this: Ajv, anchor: unknown): void {\n      if (typeof anchor == \"string\") {\n        if (!ANCHOR.test(anchor)) throw new Error(`invalid anchor \"${anchor}\"`)\n        addRef.call(this, `#${anchor}`)\n      }\n    }\n  })\n\n  return localRefs\n\n  function checkAmbiguosRef(sch1: AnySchema, sch2: AnySchema | undefined, ref: string): void {\n    if (sch2 !== undefined && !equal(sch1, sch2)) throw ambiguos(ref)\n  }\n\n  function ambiguos(ref: string): Error {\n    return new Error(`reference \"${ref}\" resolves to more than one schema`)\n  }\n}\n","import type {SchemaObjCxt} from \"..\"\nimport {_, getProperty, stringify} from \"../codegen\"\nimport {checkStrictMode} from \"../util\"\n\nexport function assignDefaults(it: SchemaObjCxt, ty?: string): void {\n  const {properties, items} = it.schema\n  if (ty === \"object\" && properties) {\n    for (const key in properties) {\n      assignDefault(it, key, properties[key].default)\n    }\n  } else if (ty === \"array\" && Array.isArray(items)) {\n    items.forEach((sch, i: number) => assignDefault(it, i, sch.default))\n  }\n}\n\nfunction assignDefault(it: SchemaObjCxt, prop: string | number, defaultValue: unknown): void {\n  const {gen, compositeRule, data, opts} = it\n  if (defaultValue === undefined) return\n  const childData = _`${data}${getProperty(prop)}`\n  if (compositeRule) {\n    checkStrictMode(it, `default is ignored for: ${childData}`)\n    return\n  }\n\n  let condition = _`${childData} === undefined`\n  if (opts.useDefaults === \"empty\") {\n    condition = _`${condition} || ${childData} === null || ${childData} === \"\"`\n  }\n  // `${childData} === undefined` +\n  // (opts.useDefaults === \"empty\" ? ` || ${childData} === null || ${childData} === \"\"` : \"\")\n  gen.if(condition, _`${childData} = ${stringify(defaultValue)}`)\n}\n","import type {AnySchemaObject} from \"../../types\"\nimport type {SchemaObjCxt} from \"..\"\nimport type {JSONType, RuleGroup, Rule} from \"../rules\"\n\nexport function schemaHasRulesForType(\n  {schema, self}: SchemaObjCxt,\n  type: JSONType\n): boolean | undefined {\n  const group = self.RULES.types[type]\n  return group && group !== true && shouldUseGroup(schema, group)\n}\n\nexport function shouldUseGroup(schema: AnySchemaObject, group: RuleGroup): boolean {\n  return group.rules.some((rule) => shouldUseRule(schema, rule))\n}\n\nexport function shouldUseRule(schema: AnySchemaObject, rule: Rule): boolean | undefined {\n  return (\n    schema[rule.keyword] !== undefined ||\n    rule.definition.implements?.some((kwd) => schema[kwd] !== undefined)\n  )\n}\n","import type {CodeKeywordDefinition, AnySchema} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport MissingRefError from \"../../compile/ref_error\"\nimport {callValidateCode} from \"../code\"\nimport {_, nil, stringify, Code, Name} from \"../../compile/codegen\"\nimport N from \"../../compile/names\"\nimport {SchemaEnv, resolveRef} from \"../../compile\"\nimport {mergeEvaluated} from \"../../compile/util\"\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"$ref\",\n  schemaType: \"string\",\n  code(cxt: KeywordCxt): void {\n    const {gen, schema: $ref, it} = cxt\n    const {baseId, schemaEnv: env, validateName, opts, self} = it\n    const {root} = env\n    if (($ref === \"#\" || $ref === \"#/\") && baseId === root.baseId) return callRootRef()\n    const schOrEnv = resolveRef.call(self, root, baseId, $ref)\n    if (schOrEnv === undefined) throw new MissingRefError(it.opts.uriResolver, baseId, $ref)\n    if (schOrEnv instanceof SchemaEnv) return callValidate(schOrEnv)\n    return inlineRefSchema(schOrEnv)\n\n    function callRootRef(): void {\n      if (env === root) return callRef(cxt, validateName, env, env.$async)\n      const rootName = gen.scopeValue(\"root\", {ref: root})\n      return callRef(cxt, _`${rootName}.validate`, root, root.$async)\n    }\n\n    function callValidate(sch: SchemaEnv): void {\n      const v = getValidate(cxt, sch)\n      callRef(cxt, v, sch, sch.$async)\n    }\n\n    function inlineRefSchema(sch: AnySchema): void {\n      const schName = gen.scopeValue(\n        \"schema\",\n        opts.code.source === true ? {ref: sch, code: stringify(sch)} : {ref: sch}\n      )\n      const valid = gen.name(\"valid\")\n      const schCxt = cxt.subschema(\n        {\n          schema: sch,\n          dataTypes: [],\n          schemaPath: nil,\n          topSchemaRef: schName,\n          errSchemaPath: $ref,\n        },\n        valid\n      )\n      cxt.mergeEvaluated(schCxt)\n      cxt.ok(valid)\n    }\n  },\n}\n\nexport function getValidate(cxt: KeywordCxt, sch: SchemaEnv): Code {\n  const {gen} = cxt\n  return sch.validate\n    ? gen.scopeValue(\"validate\", {ref: sch.validate})\n    : _`${gen.scopeValue(\"wrapper\", {ref: sch})}.validate`\n}\n\nexport function callRef(cxt: KeywordCxt, v: Code, sch?: SchemaEnv, $async?: boolean): void {\n  const {gen, it} = cxt\n  const {allErrors, schemaEnv: env, opts} = it\n  const passCxt = opts.passContext ? N.this : nil\n  if ($async) callAsyncRef()\n  else callSyncRef()\n\n  function callAsyncRef(): void {\n    if (!env.$async) throw new Error(\"async schema referenced by sync schema\")\n    const valid = gen.let(\"valid\")\n    gen.try(\n      () => {\n        gen.code(_`await ${callValidateCode(cxt, v, passCxt)}`)\n        addEvaluatedFrom(v) // TODO will not work with async, it has to be returned with the result\n        if (!allErrors) gen.assign(valid, true)\n      },\n      (e) => {\n        gen.if(_`!(${e} instanceof ${it.ValidationError as Name})`, () => gen.throw(e))\n        addErrorsFrom(e)\n        if (!allErrors) gen.assign(valid, false)\n      }\n    )\n    cxt.ok(valid)\n  }\n\n  function callSyncRef(): void {\n    cxt.result(\n      callValidateCode(cxt, v, passCxt),\n      () => addEvaluatedFrom(v),\n      () => addErrorsFrom(v)\n    )\n  }\n\n  function addErrorsFrom(source: Code): void {\n    const errs = _`${source}.errors`\n    gen.assign(N.vErrors, _`${N.vErrors} === null ? ${errs} : ${N.vErrors}.concat(${errs})`) // TODO tagged\n    gen.assign(N.errors, _`${N.vErrors}.length`)\n  }\n\n  function addEvaluatedFrom(source: Code): void {\n    if (!it.opts.unevaluated) return\n    const schEvaluated = sch?.validate?.evaluated\n    // TODO refactor\n    if (it.props !== true) {\n      if (schEvaluated && !schEvaluated.dynamicProps) {\n        if (schEvaluated.props !== undefined) {\n          it.props = mergeEvaluated.props(gen, schEvaluated.props, it.props)\n        }\n      } else {\n        const props = gen.var(\"props\", _`${source}.evaluated.props`)\n        it.props = mergeEvaluated.props(gen, props, it.props, Name)\n      }\n    }\n    if (it.items !== true) {\n      if (schEvaluated && !schEvaluated.dynamicItems) {\n        if (schEvaluated.items !== undefined) {\n          it.items = mergeEvaluated.items(gen, schEvaluated.items, it.items)\n        }\n      } else {\n        const items = gen.var(\"items\", _`${source}.evaluated.items`)\n        it.items = mergeEvaluated.items(gen, items, it.items, Name)\n      }\n    }\n  }\n}\n\nexport default def\n","import type {ErrorObject, Vocabulary} from \"../../types\"\nimport limitNumber, {LimitNumberError} from \"./limitNumber\"\nimport multipleOf, {MultipleOfError} from \"./multipleOf\"\nimport limitLength from \"./limitLength\"\nimport pattern, {PatternError} from \"./pattern\"\nimport limitProperties from \"./limitProperties\"\nimport required, {RequiredError} from \"./required\"\nimport limitItems from \"./limitItems\"\nimport uniqueItems, {UniqueItemsError} from \"./uniqueItems\"\nimport constKeyword, {ConstError} from \"./const\"\nimport enumKeyword, {EnumError} from \"./enum\"\n\nconst validation: Vocabulary = [\n  // number\n  limitNumber,\n  multipleOf,\n  // string\n  limitLength,\n  pattern,\n  // object\n  limitProperties,\n  required,\n  // array\n  limitItems,\n  uniqueItems,\n  // any\n  {keyword: \"type\", schemaType: [\"string\", \"array\"]},\n  {keyword: \"nullable\", schemaType: \"boolean\"},\n  constKeyword,\n  enumKeyword,\n]\n\nexport default validation\n\ntype LimitError = ErrorObject<\n  \"maxItems\" | \"minItems\" | \"minProperties\" | \"maxProperties\" | \"minLength\" | \"maxLength\",\n  {limit: number},\n  number | {$data: string}\n>\n\nexport type ValidationKeywordError =\n  | LimitError\n  | LimitNumberError\n  | MultipleOfError\n  | PatternError\n  | RequiredError\n  | UniqueItemsError\n  | ConstError\n  | EnumError\n","import type {\n  CodeKeywordDefinition,\n  ErrorObject,\n  KeywordErrorDefinition,\n  SchemaMap,\n  AnySchema,\n} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str} from \"../../compile/codegen\"\nimport {alwaysValidSchema} from \"../../compile/util\"\nimport {checkReportMissingProp, checkMissingProp, reportMissingProp, propertyInData} from \"../code\"\n\nexport type PropertyDependencies = {[K in string]?: string[]}\n\nexport interface DependenciesErrorParams {\n  property: string\n  missingProperty: string\n  depsCount: number\n  deps: string // TODO change to string[]\n}\n\ntype SchemaDependencies = SchemaMap\n\nexport type DependenciesError = ErrorObject<\n  \"dependencies\",\n  DependenciesErrorParams,\n  {[K in string]?: string[] | AnySchema}\n>\n\nexport const error: KeywordErrorDefinition = {\n  message: ({params: {property, depsCount, deps}}) => {\n    const property_ies = depsCount === 1 ? \"property\" : \"properties\"\n    return str`must have ${property_ies} ${deps} when property ${property} is present`\n  },\n  params: ({params: {property, depsCount, deps, missingProperty}}) =>\n    _`{property: ${property},\n    missingProperty: ${missingProperty},\n    depsCount: ${depsCount},\n    deps: ${deps}}`, // TODO change to reference\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"dependencies\",\n  type: \"object\",\n  schemaType: \"object\",\n  error,\n  code(cxt: KeywordCxt) {\n    const [propDeps, schDeps] = splitDependencies(cxt)\n    validatePropertyDeps(cxt, propDeps)\n    validateSchemaDeps(cxt, schDeps)\n  },\n}\n\nfunction splitDependencies({schema}: KeywordCxt): [PropertyDependencies, SchemaDependencies] {\n  const propertyDeps: PropertyDependencies = {}\n  const schemaDeps: SchemaDependencies = {}\n  for (const key in schema) {\n    if (key === \"__proto__\") continue\n    const deps = Array.isArray(schema[key]) ? propertyDeps : schemaDeps\n    deps[key] = schema[key]\n  }\n  return [propertyDeps, schemaDeps]\n}\n\nexport function validatePropertyDeps(\n  cxt: KeywordCxt,\n  propertyDeps: {[K in string]?: string[]} = cxt.schema\n): void {\n  const {gen, data, it} = cxt\n  if (Object.keys(propertyDeps).length === 0) return\n  const missing = gen.let(\"missing\")\n  for (const prop in propertyDeps) {\n    const deps = propertyDeps[prop] as string[]\n    if (deps.length === 0) continue\n    const hasProperty = propertyInData(gen, data, prop, it.opts.ownProperties)\n    cxt.setParams({\n      property: prop,\n      depsCount: deps.length,\n      deps: deps.join(\", \"),\n    })\n    if (it.allErrors) {\n      gen.if(hasProperty, () => {\n        for (const depProp of deps) {\n          checkReportMissingProp(cxt, depProp)\n        }\n      })\n    } else {\n      gen.if(_`${hasProperty} && (${checkMissingProp(cxt, deps, missing)})`)\n      reportMissingProp(cxt, missing)\n      gen.else()\n    }\n  }\n}\n\nexport function validateSchemaDeps(cxt: KeywordCxt, schemaDeps: SchemaMap = cxt.schema): void {\n  const {gen, data, keyword, it} = cxt\n  const valid = gen.name(\"valid\")\n  for (const prop in schemaDeps) {\n    if (alwaysValidSchema(it, schemaDeps[prop] as AnySchema)) continue\n    gen.if(\n      propertyInData(gen, data, prop, it.opts.ownProperties),\n      () => {\n        const schCxt = cxt.subschema({keyword, schemaProp: prop}, valid)\n        cxt.mergeValidEvaluated(schCxt, valid)\n      },\n      () => gen.var(valid, true) // TODO var\n    )\n    cxt.ok(valid)\n  }\n}\n\nexport default def\n","\n/*! js-yaml 4.1.0 https://github.com/nodeca/js-yaml @license MIT */\nfunction isNothing(subject) {\n  return (typeof subject === 'undefined') || (subject === null);\n}\n\n\nfunction isObject(subject) {\n  return (typeof subject === 'object') && (subject !== null);\n}\n\n\nfunction toArray(sequence) {\n  if (Array.isArray(sequence)) return sequence;\n  else if (isNothing(sequence)) return [];\n\n  return [ sequence ];\n}\n\n\nfunction extend(target, source) {\n  var index, length, key, sourceKeys;\n\n  if (source) {\n    sourceKeys = Object.keys(source);\n\n    for (index = 0, length = sourceKeys.length; index < length; index += 1) {\n      key = sourceKeys[index];\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\n\nfunction repeat(string, count) {\n  var result = '', cycle;\n\n  for (cycle = 0; cycle < count; cycle += 1) {\n    result += string;\n  }\n\n  return result;\n}\n\n\nfunction isNegativeZero(number) {\n  return (number === 0) && (Number.NEGATIVE_INFINITY === 1 / number);\n}\n\n\nvar isNothing_1      = isNothing;\nvar isObject_1       = isObject;\nvar toArray_1        = toArray;\nvar repeat_1         = repeat;\nvar isNegativeZero_1 = isNegativeZero;\nvar extend_1         = extend;\n\nvar common = {\n\tisNothing: isNothing_1,\n\tisObject: isObject_1,\n\ttoArray: toArray_1,\n\trepeat: repeat_1,\n\tisNegativeZero: isNegativeZero_1,\n\textend: extend_1\n};\n\n// YAML error class. http://stackoverflow.com/questions/8458984\n\n\nfunction formatError(exception, compact) {\n  var where = '', message = exception.reason || '(unknown reason)';\n\n  if (!exception.mark) return message;\n\n  if (exception.mark.name) {\n    where += 'in \"' + exception.mark.name + '\" ';\n  }\n\n  where += '(' + (exception.mark.line + 1) + ':' + (exception.mark.column + 1) + ')';\n\n  if (!compact && exception.mark.snippet) {\n    where += '\\n\\n' + exception.mark.snippet;\n  }\n\n  return message + ' ' + where;\n}\n\n\nfunction YAMLException$1(reason, mark) {\n  // Super constructor\n  Error.call(this);\n\n  this.name = 'YAMLException';\n  this.reason = reason;\n  this.mark = mark;\n  this.message = formatError(this, false);\n\n  // Include stack trace in error object\n  if (Error.captureStackTrace) {\n    // Chrome and NodeJS\n    Error.captureStackTrace(this, this.constructor);\n  } else {\n    // FF, IE 10+ and Safari 6+. Fallback for others\n    this.stack = (new Error()).stack || '';\n  }\n}\n\n\n// Inherit from Error\nYAMLException$1.prototype = Object.create(Error.prototype);\nYAMLException$1.prototype.constructor = YAMLException$1;\n\n\nYAMLException$1.prototype.toString = function toString(compact) {\n  return this.name + ': ' + formatError(this, compact);\n};\n\n\nvar exception = YAMLException$1;\n\n// get snippet for a single line, respecting maxLength\nfunction getLine(buffer, lineStart, lineEnd, position, maxLineLength) {\n  var head = '';\n  var tail = '';\n  var maxHalfLength = Math.floor(maxLineLength / 2) - 1;\n\n  if (position - lineStart > maxHalfLength) {\n    head = ' ... ';\n    lineStart = position - maxHalfLength + head.length;\n  }\n\n  if (lineEnd - position > maxHalfLength) {\n    tail = ' ...';\n    lineEnd = position + maxHalfLength - tail.length;\n  }\n\n  return {\n    str: head + buffer.slice(lineStart, lineEnd).replace(/\\t/g, '→') + tail,\n    pos: position - lineStart + head.length // relative position\n  };\n}\n\n\nfunction padStart(string, max) {\n  return common.repeat(' ', max - string.length) + string;\n}\n\n\nfunction makeSnippet(mark, options) {\n  options = Object.create(options || null);\n\n  if (!mark.buffer) return null;\n\n  if (!options.maxLength) options.maxLength = 79;\n  if (typeof options.indent      !== 'number') options.indent      = 1;\n  if (typeof options.linesBefore !== 'number') options.linesBefore = 3;\n  if (typeof options.linesAfter  !== 'number') options.linesAfter  = 2;\n\n  var re = /\\r?\\n|\\r|\\0/g;\n  var lineStarts = [ 0 ];\n  var lineEnds = [];\n  var match;\n  var foundLineNo = -1;\n\n  while ((match = re.exec(mark.buffer))) {\n    lineEnds.push(match.index);\n    lineStarts.push(match.index + match[0].length);\n\n    if (mark.position <= match.index && foundLineNo < 0) {\n      foundLineNo = lineStarts.length - 2;\n    }\n  }\n\n  if (foundLineNo < 0) foundLineNo = lineStarts.length - 1;\n\n  var result = '', i, line;\n  var lineNoLength = Math.min(mark.line + options.linesAfter, lineEnds.length).toString().length;\n  var maxLineLength = options.maxLength - (options.indent + lineNoLength + 3);\n\n  for (i = 1; i <= options.linesBefore; i++) {\n    if (foundLineNo - i < 0) break;\n    line = getLine(\n      mark.buffer,\n      lineStarts[foundLineNo - i],\n      lineEnds[foundLineNo - i],\n      mark.position - (lineStarts[foundLineNo] - lineStarts[foundLineNo - i]),\n      maxLineLength\n    );\n    result = common.repeat(' ', options.indent) + padStart((mark.line - i + 1).toString(), lineNoLength) +\n      ' | ' + line.str + '\\n' + result;\n  }\n\n  line = getLine(mark.buffer, lineStarts[foundLineNo], lineEnds[foundLineNo], mark.position, maxLineLength);\n  result += common.repeat(' ', options.indent) + padStart((mark.line + 1).toString(), lineNoLength) +\n    ' | ' + line.str + '\\n';\n  result += common.repeat('-', options.indent + lineNoLength + 3 + line.pos) + '^' + '\\n';\n\n  for (i = 1; i <= options.linesAfter; i++) {\n    if (foundLineNo + i >= lineEnds.length) break;\n    line = getLine(\n      mark.buffer,\n      lineStarts[foundLineNo + i],\n      lineEnds[foundLineNo + i],\n      mark.position - (lineStarts[foundLineNo] - lineStarts[foundLineNo + i]),\n      maxLineLength\n    );\n    result += common.repeat(' ', options.indent) + padStart((mark.line + i + 1).toString(), lineNoLength) +\n      ' | ' + line.str + '\\n';\n  }\n\n  return result.replace(/\\n$/, '');\n}\n\n\nvar snippet = makeSnippet;\n\nvar TYPE_CONSTRUCTOR_OPTIONS = [\n  'kind',\n  'multi',\n  'resolve',\n  'construct',\n  'instanceOf',\n  'predicate',\n  'represent',\n  'representName',\n  'defaultStyle',\n  'styleAliases'\n];\n\nvar YAML_NODE_KINDS = [\n  'scalar',\n  'sequence',\n  'mapping'\n];\n\nfunction compileStyleAliases(map) {\n  var result = {};\n\n  if (map !== null) {\n    Object.keys(map).forEach(function (style) {\n      map[style].forEach(function (alias) {\n        result[String(alias)] = style;\n      });\n    });\n  }\n\n  return result;\n}\n\nfunction Type$1(tag, options) {\n  options = options || {};\n\n  Object.keys(options).forEach(function (name) {\n    if (TYPE_CONSTRUCTOR_OPTIONS.indexOf(name) === -1) {\n      throw new exception('Unknown option \"' + name + '\" is met in definition of \"' + tag + '\" YAML type.');\n    }\n  });\n\n  // TODO: Add tag format check.\n  this.options       = options; // keep original options in case user wants to extend this type later\n  this.tag           = tag;\n  this.kind          = options['kind']          || null;\n  this.resolve       = options['resolve']       || function () { return true; };\n  this.construct     = options['construct']     || function (data) { return data; };\n  this.instanceOf    = options['instanceOf']    || null;\n  this.predicate     = options['predicate']     || null;\n  this.represent     = options['represent']     || null;\n  this.representName = options['representName'] || null;\n  this.defaultStyle  = options['defaultStyle']  || null;\n  this.multi         = options['multi']         || false;\n  this.styleAliases  = compileStyleAliases(options['styleAliases'] || null);\n\n  if (YAML_NODE_KINDS.indexOf(this.kind) === -1) {\n    throw new exception('Unknown kind \"' + this.kind + '\" is specified for \"' + tag + '\" YAML type.');\n  }\n}\n\nvar type = Type$1;\n\n/*eslint-disable max-len*/\n\n\n\n\n\nfunction compileList(schema, name) {\n  var result = [];\n\n  schema[name].forEach(function (currentType) {\n    var newIndex = result.length;\n\n    result.forEach(function (previousType, previousIndex) {\n      if (previousType.tag === currentType.tag &&\n          previousType.kind === currentType.kind &&\n          previousType.multi === currentType.multi) {\n\n        newIndex = previousIndex;\n      }\n    });\n\n    result[newIndex] = currentType;\n  });\n\n  return result;\n}\n\n\nfunction compileMap(/* lists... */) {\n  var result = {\n        scalar: {},\n        sequence: {},\n        mapping: {},\n        fallback: {},\n        multi: {\n          scalar: [],\n          sequence: [],\n          mapping: [],\n          fallback: []\n        }\n      }, index, length;\n\n  function collectType(type) {\n    if (type.multi) {\n      result.multi[type.kind].push(type);\n      result.multi['fallback'].push(type);\n    } else {\n      result[type.kind][type.tag] = result['fallback'][type.tag] = type;\n    }\n  }\n\n  for (index = 0, length = arguments.length; index < length; index += 1) {\n    arguments[index].forEach(collectType);\n  }\n  return result;\n}\n\n\nfunction Schema$1(definition) {\n  return this.extend(definition);\n}\n\n\nSchema$1.prototype.extend = function extend(definition) {\n  var implicit = [];\n  var explicit = [];\n\n  if (definition instanceof type) {\n    // Schema.extend(type)\n    explicit.push(definition);\n\n  } else if (Array.isArray(definition)) {\n    // Schema.extend([ type1, type2, ... ])\n    explicit = explicit.concat(definition);\n\n  } else if (definition && (Array.isArray(definition.implicit) || Array.isArray(definition.explicit))) {\n    // Schema.extend({ explicit: [ type1, type2, ... ], implicit: [ type1, type2, ... ] })\n    if (definition.implicit) implicit = implicit.concat(definition.implicit);\n    if (definition.explicit) explicit = explicit.concat(definition.explicit);\n\n  } else {\n    throw new exception('Schema.extend argument should be a Type, [ Type ], ' +\n      'or a schema definition ({ implicit: [...], explicit: [...] })');\n  }\n\n  implicit.forEach(function (type$1) {\n    if (!(type$1 instanceof type)) {\n      throw new exception('Specified list of YAML types (or a single Type object) contains a non-Type object.');\n    }\n\n    if (type$1.loadKind && type$1.loadKind !== 'scalar') {\n      throw new exception('There is a non-scalar type in the implicit list of a schema. Implicit resolving of such types is not supported.');\n    }\n\n    if (type$1.multi) {\n      throw new exception('There is a multi type in the implicit list of a schema. Multi tags can only be listed as explicit.');\n    }\n  });\n\n  explicit.forEach(function (type$1) {\n    if (!(type$1 instanceof type)) {\n      throw new exception('Specified list of YAML types (or a single Type object) contains a non-Type object.');\n    }\n  });\n\n  var result = Object.create(Schema$1.prototype);\n\n  result.implicit = (this.implicit || []).concat(implicit);\n  result.explicit = (this.explicit || []).concat(explicit);\n\n  result.compiledImplicit = compileList(result, 'implicit');\n  result.compiledExplicit = compileList(result, 'explicit');\n  result.compiledTypeMap  = compileMap(result.compiledImplicit, result.compiledExplicit);\n\n  return result;\n};\n\n\nvar schema = Schema$1;\n\nvar str = new type('tag:yaml.org,2002:str', {\n  kind: 'scalar',\n  construct: function (data) { return data !== null ? data : ''; }\n});\n\nvar seq = new type('tag:yaml.org,2002:seq', {\n  kind: 'sequence',\n  construct: function (data) { return data !== null ? data : []; }\n});\n\nvar map = new type('tag:yaml.org,2002:map', {\n  kind: 'mapping',\n  construct: function (data) { return data !== null ? data : {}; }\n});\n\nvar failsafe = new schema({\n  explicit: [\n    str,\n    seq,\n    map\n  ]\n});\n\nfunction resolveYamlNull(data) {\n  if (data === null) return true;\n\n  var max = data.length;\n\n  return (max === 1 && data === '~') ||\n         (max === 4 && (data === 'null' || data === 'Null' || data === 'NULL'));\n}\n\nfunction constructYamlNull() {\n  return null;\n}\n\nfunction isNull(object) {\n  return object === null;\n}\n\nvar _null = new type('tag:yaml.org,2002:null', {\n  kind: 'scalar',\n  resolve: resolveYamlNull,\n  construct: constructYamlNull,\n  predicate: isNull,\n  represent: {\n    canonical: function () { return '~';    },\n    lowercase: function () { return 'null'; },\n    uppercase: function () { return 'NULL'; },\n    camelcase: function () { return 'Null'; },\n    empty:     function () { return '';     }\n  },\n  defaultStyle: 'lowercase'\n});\n\nfunction resolveYamlBoolean(data) {\n  if (data === null) return false;\n\n  var max = data.length;\n\n  return (max === 4 && (data === 'true' || data === 'True' || data === 'TRUE')) ||\n         (max === 5 && (data === 'false' || data === 'False' || data === 'FALSE'));\n}\n\nfunction constructYamlBoolean(data) {\n  return data === 'true' ||\n         data === 'True' ||\n         data === 'TRUE';\n}\n\nfunction isBoolean(object) {\n  return Object.prototype.toString.call(object) === '[object Boolean]';\n}\n\nvar bool = new type('tag:yaml.org,2002:bool', {\n  kind: 'scalar',\n  resolve: resolveYamlBoolean,\n  construct: constructYamlBoolean,\n  predicate: isBoolean,\n  represent: {\n    lowercase: function (object) { return object ? 'true' : 'false'; },\n    uppercase: function (object) { return object ? 'TRUE' : 'FALSE'; },\n    camelcase: function (object) { return object ? 'True' : 'False'; }\n  },\n  defaultStyle: 'lowercase'\n});\n\nfunction isHexCode(c) {\n  return ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */)) ||\n         ((0x41/* A */ <= c) && (c <= 0x46/* F */)) ||\n         ((0x61/* a */ <= c) && (c <= 0x66/* f */));\n}\n\nfunction isOctCode(c) {\n  return ((0x30/* 0 */ <= c) && (c <= 0x37/* 7 */));\n}\n\nfunction isDecCode(c) {\n  return ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */));\n}\n\nfunction resolveYamlInteger(data) {\n  if (data === null) return false;\n\n  var max = data.length,\n      index = 0,\n      hasDigits = false,\n      ch;\n\n  if (!max) return false;\n\n  ch = data[index];\n\n  // sign\n  if (ch === '-' || ch === '+') {\n    ch = data[++index];\n  }\n\n  if (ch === '0') {\n    // 0\n    if (index + 1 === max) return true;\n    ch = data[++index];\n\n    // base 2, base 8, base 16\n\n    if (ch === 'b') {\n      // base 2\n      index++;\n\n      for (; index < max; index++) {\n        ch = data[index];\n        if (ch === '_') continue;\n        if (ch !== '0' && ch !== '1') return false;\n        hasDigits = true;\n      }\n      return hasDigits && ch !== '_';\n    }\n\n\n    if (ch === 'x') {\n      // base 16\n      index++;\n\n      for (; index < max; index++) {\n        ch = data[index];\n        if (ch === '_') continue;\n        if (!isHexCode(data.charCodeAt(index))) return false;\n        hasDigits = true;\n      }\n      return hasDigits && ch !== '_';\n    }\n\n\n    if (ch === 'o') {\n      // base 8\n      index++;\n\n      for (; index < max; index++) {\n        ch = data[index];\n        if (ch === '_') continue;\n        if (!isOctCode(data.charCodeAt(index))) return false;\n        hasDigits = true;\n      }\n      return hasDigits && ch !== '_';\n    }\n  }\n\n  // base 10 (except 0)\n\n  // value should not start with `_`;\n  if (ch === '_') return false;\n\n  for (; index < max; index++) {\n    ch = data[index];\n    if (ch === '_') continue;\n    if (!isDecCode(data.charCodeAt(index))) {\n      return false;\n    }\n    hasDigits = true;\n  }\n\n  // Should have digits and should not end with `_`\n  if (!hasDigits || ch === '_') return false;\n\n  return true;\n}\n\nfunction constructYamlInteger(data) {\n  var value = data, sign = 1, ch;\n\n  if (value.indexOf('_') !== -1) {\n    value = value.replace(/_/g, '');\n  }\n\n  ch = value[0];\n\n  if (ch === '-' || ch === '+') {\n    if (ch === '-') sign = -1;\n    value = value.slice(1);\n    ch = value[0];\n  }\n\n  if (value === '0') return 0;\n\n  if (ch === '0') {\n    if (value[1] === 'b') return sign * parseInt(value.slice(2), 2);\n    if (value[1] === 'x') return sign * parseInt(value.slice(2), 16);\n    if (value[1] === 'o') return sign * parseInt(value.slice(2), 8);\n  }\n\n  return sign * parseInt(value, 10);\n}\n\nfunction isInteger(object) {\n  return (Object.prototype.toString.call(object)) === '[object Number]' &&\n         (object % 1 === 0 && !common.isNegativeZero(object));\n}\n\nvar int = new type('tag:yaml.org,2002:int', {\n  kind: 'scalar',\n  resolve: resolveYamlInteger,\n  construct: constructYamlInteger,\n  predicate: isInteger,\n  represent: {\n    binary:      function (obj) { return obj >= 0 ? '0b' + obj.toString(2) : '-0b' + obj.toString(2).slice(1); },\n    octal:       function (obj) { return obj >= 0 ? '0o'  + obj.toString(8) : '-0o'  + obj.toString(8).slice(1); },\n    decimal:     function (obj) { return obj.toString(10); },\n    /* eslint-disable max-len */\n    hexadecimal: function (obj) { return obj >= 0 ? '0x' + obj.toString(16).toUpperCase() :  '-0x' + obj.toString(16).toUpperCase().slice(1); }\n  },\n  defaultStyle: 'decimal',\n  styleAliases: {\n    binary:      [ 2,  'bin' ],\n    octal:       [ 8,  'oct' ],\n    decimal:     [ 10, 'dec' ],\n    hexadecimal: [ 16, 'hex' ]\n  }\n});\n\nvar YAML_FLOAT_PATTERN = new RegExp(\n  // 2.5e4, 2.5 and integers\n  '^(?:[-+]?(?:[0-9][0-9_]*)(?:\\\\.[0-9_]*)?(?:[eE][-+]?[0-9]+)?' +\n  // .2e4, .2\n  // special case, seems not from spec\n  '|\\\\.[0-9_]+(?:[eE][-+]?[0-9]+)?' +\n  // .inf\n  '|[-+]?\\\\.(?:inf|Inf|INF)' +\n  // .nan\n  '|\\\\.(?:nan|NaN|NAN))$');\n\nfunction resolveYamlFloat(data) {\n  if (data === null) return false;\n\n  if (!YAML_FLOAT_PATTERN.test(data) ||\n      // Quick hack to not allow integers end with `_`\n      // Probably should update regexp & check speed\n      data[data.length - 1] === '_') {\n    return false;\n  }\n\n  return true;\n}\n\nfunction constructYamlFloat(data) {\n  var value, sign;\n\n  value  = data.replace(/_/g, '').toLowerCase();\n  sign   = value[0] === '-' ? -1 : 1;\n\n  if ('+-'.indexOf(value[0]) >= 0) {\n    value = value.slice(1);\n  }\n\n  if (value === '.inf') {\n    return (sign === 1) ? Number.POSITIVE_INFINITY : Number.NEGATIVE_INFINITY;\n\n  } else if (value === '.nan') {\n    return NaN;\n  }\n  return sign * parseFloat(value, 10);\n}\n\n\nvar SCIENTIFIC_WITHOUT_DOT = /^[-+]?[0-9]+e/;\n\nfunction representYamlFloat(object, style) {\n  var res;\n\n  if (isNaN(object)) {\n    switch (style) {\n      case 'lowercase': return '.nan';\n      case 'uppercase': return '.NAN';\n      case 'camelcase': return '.NaN';\n    }\n  } else if (Number.POSITIVE_INFINITY === object) {\n    switch (style) {\n      case 'lowercase': return '.inf';\n      case 'uppercase': return '.INF';\n      case 'camelcase': return '.Inf';\n    }\n  } else if (Number.NEGATIVE_INFINITY === object) {\n    switch (style) {\n      case 'lowercase': return '-.inf';\n      case 'uppercase': return '-.INF';\n      case 'camelcase': return '-.Inf';\n    }\n  } else if (common.isNegativeZero(object)) {\n    return '-0.0';\n  }\n\n  res = object.toString(10);\n\n  // JS stringifier can build scientific format without dots: 5e-100,\n  // while YAML requres dot: 5.e-100. Fix it with simple hack\n\n  return SCIENTIFIC_WITHOUT_DOT.test(res) ? res.replace('e', '.e') : res;\n}\n\nfunction isFloat(object) {\n  return (Object.prototype.toString.call(object) === '[object Number]') &&\n         (object % 1 !== 0 || common.isNegativeZero(object));\n}\n\nvar float = new type('tag:yaml.org,2002:float', {\n  kind: 'scalar',\n  resolve: resolveYamlFloat,\n  construct: constructYamlFloat,\n  predicate: isFloat,\n  represent: representYamlFloat,\n  defaultStyle: 'lowercase'\n});\n\nvar json = failsafe.extend({\n  implicit: [\n    _null,\n    bool,\n    int,\n    float\n  ]\n});\n\nvar core = json;\n\nvar YAML_DATE_REGEXP = new RegExp(\n  '^([0-9][0-9][0-9][0-9])'          + // [1] year\n  '-([0-9][0-9])'                    + // [2] month\n  '-([0-9][0-9])$');                   // [3] day\n\nvar YAML_TIMESTAMP_REGEXP = new RegExp(\n  '^([0-9][0-9][0-9][0-9])'          + // [1] year\n  '-([0-9][0-9]?)'                   + // [2] month\n  '-([0-9][0-9]?)'                   + // [3] day\n  '(?:[Tt]|[ \\\\t]+)'                 + // ...\n  '([0-9][0-9]?)'                    + // [4] hour\n  ':([0-9][0-9])'                    + // [5] minute\n  ':([0-9][0-9])'                    + // [6] second\n  '(?:\\\\.([0-9]*))?'                 + // [7] fraction\n  '(?:[ \\\\t]*(Z|([-+])([0-9][0-9]?)' + // [8] tz [9] tz_sign [10] tz_hour\n  '(?::([0-9][0-9]))?))?$');           // [11] tz_minute\n\nfunction resolveYamlTimestamp(data) {\n  if (data === null) return false;\n  if (YAML_DATE_REGEXP.exec(data) !== null) return true;\n  if (YAML_TIMESTAMP_REGEXP.exec(data) !== null) return true;\n  return false;\n}\n\nfunction constructYamlTimestamp(data) {\n  var match, year, month, day, hour, minute, second, fraction = 0,\n      delta = null, tz_hour, tz_minute, date;\n\n  match = YAML_DATE_REGEXP.exec(data);\n  if (match === null) match = YAML_TIMESTAMP_REGEXP.exec(data);\n\n  if (match === null) throw new Error('Date resolve error');\n\n  // match: [1] year [2] month [3] day\n\n  year = +(match[1]);\n  month = +(match[2]) - 1; // JS month starts with 0\n  day = +(match[3]);\n\n  if (!match[4]) { // no hour\n    return new Date(Date.UTC(year, month, day));\n  }\n\n  // match: [4] hour [5] minute [6] second [7] fraction\n\n  hour = +(match[4]);\n  minute = +(match[5]);\n  second = +(match[6]);\n\n  if (match[7]) {\n    fraction = match[7].slice(0, 3);\n    while (fraction.length < 3) { // milli-seconds\n      fraction += '0';\n    }\n    fraction = +fraction;\n  }\n\n  // match: [8] tz [9] tz_sign [10] tz_hour [11] tz_minute\n\n  if (match[9]) {\n    tz_hour = +(match[10]);\n    tz_minute = +(match[11] || 0);\n    delta = (tz_hour * 60 + tz_minute) * 60000; // delta in mili-seconds\n    if (match[9] === '-') delta = -delta;\n  }\n\n  date = new Date(Date.UTC(year, month, day, hour, minute, second, fraction));\n\n  if (delta) date.setTime(date.getTime() - delta);\n\n  return date;\n}\n\nfunction representYamlTimestamp(object /*, style*/) {\n  return object.toISOString();\n}\n\nvar timestamp = new type('tag:yaml.org,2002:timestamp', {\n  kind: 'scalar',\n  resolve: resolveYamlTimestamp,\n  construct: constructYamlTimestamp,\n  instanceOf: Date,\n  represent: representYamlTimestamp\n});\n\nfunction resolveYamlMerge(data) {\n  return data === '<<' || data === null;\n}\n\nvar merge = new type('tag:yaml.org,2002:merge', {\n  kind: 'scalar',\n  resolve: resolveYamlMerge\n});\n\n/*eslint-disable no-bitwise*/\n\n\n\n\n\n// [ 64, 65, 66 ] -> [ padding, CR, LF ]\nvar BASE64_MAP = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\\n\\r';\n\n\nfunction resolveYamlBinary(data) {\n  if (data === null) return false;\n\n  var code, idx, bitlen = 0, max = data.length, map = BASE64_MAP;\n\n  // Convert one by one.\n  for (idx = 0; idx < max; idx++) {\n    code = map.indexOf(data.charAt(idx));\n\n    // Skip CR/LF\n    if (code > 64) continue;\n\n    // Fail on illegal characters\n    if (code < 0) return false;\n\n    bitlen += 6;\n  }\n\n  // If there are any bits left, source was corrupted\n  return (bitlen % 8) === 0;\n}\n\nfunction constructYamlBinary(data) {\n  var idx, tailbits,\n      input = data.replace(/[\\r\\n=]/g, ''), // remove CR/LF & padding to simplify scan\n      max = input.length,\n      map = BASE64_MAP,\n      bits = 0,\n      result = [];\n\n  // Collect by 6*4 bits (3 bytes)\n\n  for (idx = 0; idx < max; idx++) {\n    if ((idx % 4 === 0) && idx) {\n      result.push((bits >> 16) & 0xFF);\n      result.push((bits >> 8) & 0xFF);\n      result.push(bits & 0xFF);\n    }\n\n    bits = (bits << 6) | map.indexOf(input.charAt(idx));\n  }\n\n  // Dump tail\n\n  tailbits = (max % 4) * 6;\n\n  if (tailbits === 0) {\n    result.push((bits >> 16) & 0xFF);\n    result.push((bits >> 8) & 0xFF);\n    result.push(bits & 0xFF);\n  } else if (tailbits === 18) {\n    result.push((bits >> 10) & 0xFF);\n    result.push((bits >> 2) & 0xFF);\n  } else if (tailbits === 12) {\n    result.push((bits >> 4) & 0xFF);\n  }\n\n  return new Uint8Array(result);\n}\n\nfunction representYamlBinary(object /*, style*/) {\n  var result = '', bits = 0, idx, tail,\n      max = object.length,\n      map = BASE64_MAP;\n\n  // Convert every three bytes to 4 ASCII characters.\n\n  for (idx = 0; idx < max; idx++) {\n    if ((idx % 3 === 0) && idx) {\n      result += map[(bits >> 18) & 0x3F];\n      result += map[(bits >> 12) & 0x3F];\n      result += map[(bits >> 6) & 0x3F];\n      result += map[bits & 0x3F];\n    }\n\n    bits = (bits << 8) + object[idx];\n  }\n\n  // Dump tail\n\n  tail = max % 3;\n\n  if (tail === 0) {\n    result += map[(bits >> 18) & 0x3F];\n    result += map[(bits >> 12) & 0x3F];\n    result += map[(bits >> 6) & 0x3F];\n    result += map[bits & 0x3F];\n  } else if (tail === 2) {\n    result += map[(bits >> 10) & 0x3F];\n    result += map[(bits >> 4) & 0x3F];\n    result += map[(bits << 2) & 0x3F];\n    result += map[64];\n  } else if (tail === 1) {\n    result += map[(bits >> 2) & 0x3F];\n    result += map[(bits << 4) & 0x3F];\n    result += map[64];\n    result += map[64];\n  }\n\n  return result;\n}\n\nfunction isBinary(obj) {\n  return Object.prototype.toString.call(obj) ===  '[object Uint8Array]';\n}\n\nvar binary = new type('tag:yaml.org,2002:binary', {\n  kind: 'scalar',\n  resolve: resolveYamlBinary,\n  construct: constructYamlBinary,\n  predicate: isBinary,\n  represent: representYamlBinary\n});\n\nvar _hasOwnProperty$3 = Object.prototype.hasOwnProperty;\nvar _toString$2       = Object.prototype.toString;\n\nfunction resolveYamlOmap(data) {\n  if (data === null) return true;\n\n  var objectKeys = [], index, length, pair, pairKey, pairHasKey,\n      object = data;\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    pair = object[index];\n    pairHasKey = false;\n\n    if (_toString$2.call(pair) !== '[object Object]') return false;\n\n    for (pairKey in pair) {\n      if (_hasOwnProperty$3.call(pair, pairKey)) {\n        if (!pairHasKey) pairHasKey = true;\n        else return false;\n      }\n    }\n\n    if (!pairHasKey) return false;\n\n    if (objectKeys.indexOf(pairKey) === -1) objectKeys.push(pairKey);\n    else return false;\n  }\n\n  return true;\n}\n\nfunction constructYamlOmap(data) {\n  return data !== null ? data : [];\n}\n\nvar omap = new type('tag:yaml.org,2002:omap', {\n  kind: 'sequence',\n  resolve: resolveYamlOmap,\n  construct: constructYamlOmap\n});\n\nvar _toString$1 = Object.prototype.toString;\n\nfunction resolveYamlPairs(data) {\n  if (data === null) return true;\n\n  var index, length, pair, keys, result,\n      object = data;\n\n  result = new Array(object.length);\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    pair = object[index];\n\n    if (_toString$1.call(pair) !== '[object Object]') return false;\n\n    keys = Object.keys(pair);\n\n    if (keys.length !== 1) return false;\n\n    result[index] = [ keys[0], pair[keys[0]] ];\n  }\n\n  return true;\n}\n\nfunction constructYamlPairs(data) {\n  if (data === null) return [];\n\n  var index, length, pair, keys, result,\n      object = data;\n\n  result = new Array(object.length);\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    pair = object[index];\n\n    keys = Object.keys(pair);\n\n    result[index] = [ keys[0], pair[keys[0]] ];\n  }\n\n  return result;\n}\n\nvar pairs = new type('tag:yaml.org,2002:pairs', {\n  kind: 'sequence',\n  resolve: resolveYamlPairs,\n  construct: constructYamlPairs\n});\n\nvar _hasOwnProperty$2 = Object.prototype.hasOwnProperty;\n\nfunction resolveYamlSet(data) {\n  if (data === null) return true;\n\n  var key, object = data;\n\n  for (key in object) {\n    if (_hasOwnProperty$2.call(object, key)) {\n      if (object[key] !== null) return false;\n    }\n  }\n\n  return true;\n}\n\nfunction constructYamlSet(data) {\n  return data !== null ? data : {};\n}\n\nvar set = new type('tag:yaml.org,2002:set', {\n  kind: 'mapping',\n  resolve: resolveYamlSet,\n  construct: constructYamlSet\n});\n\nvar _default = core.extend({\n  implicit: [\n    timestamp,\n    merge\n  ],\n  explicit: [\n    binary,\n    omap,\n    pairs,\n    set\n  ]\n});\n\n/*eslint-disable max-len,no-use-before-define*/\n\n\n\n\n\n\n\nvar _hasOwnProperty$1 = Object.prototype.hasOwnProperty;\n\n\nvar CONTEXT_FLOW_IN   = 1;\nvar CONTEXT_FLOW_OUT  = 2;\nvar CONTEXT_BLOCK_IN  = 3;\nvar CONTEXT_BLOCK_OUT = 4;\n\n\nvar CHOMPING_CLIP  = 1;\nvar CHOMPING_STRIP = 2;\nvar CHOMPING_KEEP  = 3;\n\n\nvar PATTERN_NON_PRINTABLE         = /[\\x00-\\x08\\x0B\\x0C\\x0E-\\x1F\\x7F-\\x84\\x86-\\x9F\\uFFFE\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/;\nvar PATTERN_NON_ASCII_LINE_BREAKS = /[\\x85\\u2028\\u2029]/;\nvar PATTERN_FLOW_INDICATORS       = /[,\\[\\]\\{\\}]/;\nvar PATTERN_TAG_HANDLE            = /^(?:!|!!|![a-z\\-]+!)$/i;\nvar PATTERN_TAG_URI               = /^(?:!|[^,\\[\\]\\{\\}])(?:%[0-9a-f]{2}|[0-9a-z\\-#;\\/\\?:@&=\\+\\$,_\\.!~\\*'\\(\\)\\[\\]])*$/i;\n\n\nfunction _class(obj) { return Object.prototype.toString.call(obj); }\n\nfunction is_EOL(c) {\n  return (c === 0x0A/* LF */) || (c === 0x0D/* CR */);\n}\n\nfunction is_WHITE_SPACE(c) {\n  return (c === 0x09/* Tab */) || (c === 0x20/* Space */);\n}\n\nfunction is_WS_OR_EOL(c) {\n  return (c === 0x09/* Tab */) ||\n         (c === 0x20/* Space */) ||\n         (c === 0x0A/* LF */) ||\n         (c === 0x0D/* CR */);\n}\n\nfunction is_FLOW_INDICATOR(c) {\n  return c === 0x2C/* , */ ||\n         c === 0x5B/* [ */ ||\n         c === 0x5D/* ] */ ||\n         c === 0x7B/* { */ ||\n         c === 0x7D/* } */;\n}\n\nfunction fromHexCode(c) {\n  var lc;\n\n  if ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */)) {\n    return c - 0x30;\n  }\n\n  /*eslint-disable no-bitwise*/\n  lc = c | 0x20;\n\n  if ((0x61/* a */ <= lc) && (lc <= 0x66/* f */)) {\n    return lc - 0x61 + 10;\n  }\n\n  return -1;\n}\n\nfunction escapedHexLen(c) {\n  if (c === 0x78/* x */) { return 2; }\n  if (c === 0x75/* u */) { return 4; }\n  if (c === 0x55/* U */) { return 8; }\n  return 0;\n}\n\nfunction fromDecimalCode(c) {\n  if ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */)) {\n    return c - 0x30;\n  }\n\n  return -1;\n}\n\nfunction simpleEscapeSequence(c) {\n  /* eslint-disable indent */\n  return (c === 0x30/* 0 */) ? '\\x00' :\n        (c === 0x61/* a */) ? '\\x07' :\n        (c === 0x62/* b */) ? '\\x08' :\n        (c === 0x74/* t */) ? '\\x09' :\n        (c === 0x09/* Tab */) ? '\\x09' :\n        (c === 0x6E/* n */) ? '\\x0A' :\n        (c === 0x76/* v */) ? '\\x0B' :\n        (c === 0x66/* f */) ? '\\x0C' :\n        (c === 0x72/* r */) ? '\\x0D' :\n        (c === 0x65/* e */) ? '\\x1B' :\n        (c === 0x20/* Space */) ? ' ' :\n        (c === 0x22/* \" */) ? '\\x22' :\n        (c === 0x2F/* / */) ? '/' :\n        (c === 0x5C/* \\ */) ? '\\x5C' :\n        (c === 0x4E/* N */) ? '\\x85' :\n        (c === 0x5F/* _ */) ? '\\xA0' :\n        (c === 0x4C/* L */) ? '\\u2028' :\n        (c === 0x50/* P */) ? '\\u2029' : '';\n}\n\nfunction charFromCodepoint(c) {\n  if (c <= 0xFFFF) {\n    return String.fromCharCode(c);\n  }\n  // Encode UTF-16 surrogate pair\n  // https://en.wikipedia.org/wiki/UTF-16#Code_points_U.2B010000_to_U.2B10FFFF\n  return String.fromCharCode(\n    ((c - 0x010000) >> 10) + 0xD800,\n    ((c - 0x010000) & 0x03FF) + 0xDC00\n  );\n}\n\nvar simpleEscapeCheck = new Array(256); // integer, for fast access\nvar simpleEscapeMap = new Array(256);\nfor (var i = 0; i < 256; i++) {\n  simpleEscapeCheck[i] = simpleEscapeSequence(i) ? 1 : 0;\n  simpleEscapeMap[i] = simpleEscapeSequence(i);\n}\n\n\nfunction State$1(input, options) {\n  this.input = input;\n\n  this.filename  = options['filename']  || null;\n  this.schema    = options['schema']    || _default;\n  this.onWarning = options['onWarning'] || null;\n  // (Hidden) Remove? makes the loader to expect YAML 1.1 documents\n  // if such documents have no explicit %YAML directive\n  this.legacy    = options['legacy']    || false;\n\n  this.json      = options['json']      || false;\n  this.listener  = options['listener']  || null;\n\n  this.implicitTypes = this.schema.compiledImplicit;\n  this.typeMap       = this.schema.compiledTypeMap;\n\n  this.length     = input.length;\n  this.position   = 0;\n  this.line       = 0;\n  this.lineStart  = 0;\n  this.lineIndent = 0;\n\n  // position of first leading tab in the current line,\n  // used to make sure there are no tabs in the indentation\n  this.firstTabInLine = -1;\n\n  this.documents = [];\n\n  /*\n  this.version;\n  this.checkLineBreaks;\n  this.tagMap;\n  this.anchorMap;\n  this.tag;\n  this.anchor;\n  this.kind;\n  this.result;*/\n\n}\n\n\nfunction generateError(state, message) {\n  var mark = {\n    name:     state.filename,\n    buffer:   state.input.slice(0, -1), // omit trailing \\0\n    position: state.position,\n    line:     state.line,\n    column:   state.position - state.lineStart\n  };\n\n  mark.snippet = snippet(mark);\n\n  return new exception(message, mark);\n}\n\nfunction throwError(state, message) {\n  throw generateError(state, message);\n}\n\nfunction throwWarning(state, message) {\n  if (state.onWarning) {\n    state.onWarning.call(null, generateError(state, message));\n  }\n}\n\n\nvar directiveHandlers = {\n\n  YAML: function handleYamlDirective(state, name, args) {\n\n    var match, major, minor;\n\n    if (state.version !== null) {\n      throwError(state, 'duplication of %YAML directive');\n    }\n\n    if (args.length !== 1) {\n      throwError(state, 'YAML directive accepts exactly one argument');\n    }\n\n    match = /^([0-9]+)\\.([0-9]+)$/.exec(args[0]);\n\n    if (match === null) {\n      throwError(state, 'ill-formed argument of the YAML directive');\n    }\n\n    major = parseInt(match[1], 10);\n    minor = parseInt(match[2], 10);\n\n    if (major !== 1) {\n      throwError(state, 'unacceptable YAML version of the document');\n    }\n\n    state.version = args[0];\n    state.checkLineBreaks = (minor < 2);\n\n    if (minor !== 1 && minor !== 2) {\n      throwWarning(state, 'unsupported YAML version of the document');\n    }\n  },\n\n  TAG: function handleTagDirective(state, name, args) {\n\n    var handle, prefix;\n\n    if (args.length !== 2) {\n      throwError(state, 'TAG directive accepts exactly two arguments');\n    }\n\n    handle = args[0];\n    prefix = args[1];\n\n    if (!PATTERN_TAG_HANDLE.test(handle)) {\n      throwError(state, 'ill-formed tag handle (first argument) of the TAG directive');\n    }\n\n    if (_hasOwnProperty$1.call(state.tagMap, handle)) {\n      throwError(state, 'there is a previously declared suffix for \"' + handle + '\" tag handle');\n    }\n\n    if (!PATTERN_TAG_URI.test(prefix)) {\n      throwError(state, 'ill-formed tag prefix (second argument) of the TAG directive');\n    }\n\n    try {\n      prefix = decodeURIComponent(prefix);\n    } catch (err) {\n      throwError(state, 'tag prefix is malformed: ' + prefix);\n    }\n\n    state.tagMap[handle] = prefix;\n  }\n};\n\n\nfunction captureSegment(state, start, end, checkJson) {\n  var _position, _length, _character, _result;\n\n  if (start < end) {\n    _result = state.input.slice(start, end);\n\n    if (checkJson) {\n      for (_position = 0, _length = _result.length; _position < _length; _position += 1) {\n        _character = _result.charCodeAt(_position);\n        if (!(_character === 0x09 ||\n              (0x20 <= _character && _character <= 0x10FFFF))) {\n          throwError(state, 'expected valid JSON character');\n        }\n      }\n    } else if (PATTERN_NON_PRINTABLE.test(_result)) {\n      throwError(state, 'the stream contains non-printable characters');\n    }\n\n    state.result += _result;\n  }\n}\n\nfunction mergeMappings(state, destination, source, overridableKeys) {\n  var sourceKeys, key, index, quantity;\n\n  if (!common.isObject(source)) {\n    throwError(state, 'cannot merge mappings; the provided source object is unacceptable');\n  }\n\n  sourceKeys = Object.keys(source);\n\n  for (index = 0, quantity = sourceKeys.length; index < quantity; index += 1) {\n    key = sourceKeys[index];\n\n    if (!_hasOwnProperty$1.call(destination, key)) {\n      destination[key] = source[key];\n      overridableKeys[key] = true;\n    }\n  }\n}\n\nfunction storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode,\n  startLine, startLineStart, startPos) {\n\n  var index, quantity;\n\n  // The output is a plain object here, so keys can only be strings.\n  // We need to convert keyNode to a string, but doing so can hang the process\n  // (deeply nested arrays that explode exponentially using aliases).\n  if (Array.isArray(keyNode)) {\n    keyNode = Array.prototype.slice.call(keyNode);\n\n    for (index = 0, quantity = keyNode.length; index < quantity; index += 1) {\n      if (Array.isArray(keyNode[index])) {\n        throwError(state, 'nested arrays are not supported inside keys');\n      }\n\n      if (typeof keyNode === 'object' && _class(keyNode[index]) === '[object Object]') {\n        keyNode[index] = '[object Object]';\n      }\n    }\n  }\n\n  // Avoid code execution in load() via toString property\n  // (still use its own toString for arrays, timestamps,\n  // and whatever user schema extensions happen to have @@toStringTag)\n  if (typeof keyNode === 'object' && _class(keyNode) === '[object Object]') {\n    keyNode = '[object Object]';\n  }\n\n\n  keyNode = String(keyNode);\n\n  if (_result === null) {\n    _result = {};\n  }\n\n  if (keyTag === 'tag:yaml.org,2002:merge') {\n    if (Array.isArray(valueNode)) {\n      for (index = 0, quantity = valueNode.length; index < quantity; index += 1) {\n        mergeMappings(state, _result, valueNode[index], overridableKeys);\n      }\n    } else {\n      mergeMappings(state, _result, valueNode, overridableKeys);\n    }\n  } else {\n    if (!state.json &&\n        !_hasOwnProperty$1.call(overridableKeys, keyNode) &&\n        _hasOwnProperty$1.call(_result, keyNode)) {\n      state.line = startLine || state.line;\n      state.lineStart = startLineStart || state.lineStart;\n      state.position = startPos || state.position;\n      throwError(state, 'duplicated mapping key');\n    }\n\n    // used for this specific key only because Object.defineProperty is slow\n    if (keyNode === '__proto__') {\n      Object.defineProperty(_result, keyNode, {\n        configurable: true,\n        enumerable: true,\n        writable: true,\n        value: valueNode\n      });\n    } else {\n      _result[keyNode] = valueNode;\n    }\n    delete overridableKeys[keyNode];\n  }\n\n  return _result;\n}\n\nfunction readLineBreak(state) {\n  var ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch === 0x0A/* LF */) {\n    state.position++;\n  } else if (ch === 0x0D/* CR */) {\n    state.position++;\n    if (state.input.charCodeAt(state.position) === 0x0A/* LF */) {\n      state.position++;\n    }\n  } else {\n    throwError(state, 'a line break is expected');\n  }\n\n  state.line += 1;\n  state.lineStart = state.position;\n  state.firstTabInLine = -1;\n}\n\nfunction skipSeparationSpace(state, allowComments, checkIndent) {\n  var lineBreaks = 0,\n      ch = state.input.charCodeAt(state.position);\n\n  while (ch !== 0) {\n    while (is_WHITE_SPACE(ch)) {\n      if (ch === 0x09/* Tab */ && state.firstTabInLine === -1) {\n        state.firstTabInLine = state.position;\n      }\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    if (allowComments && ch === 0x23/* # */) {\n      do {\n        ch = state.input.charCodeAt(++state.position);\n      } while (ch !== 0x0A/* LF */ && ch !== 0x0D/* CR */ && ch !== 0);\n    }\n\n    if (is_EOL(ch)) {\n      readLineBreak(state);\n\n      ch = state.input.charCodeAt(state.position);\n      lineBreaks++;\n      state.lineIndent = 0;\n\n      while (ch === 0x20/* Space */) {\n        state.lineIndent++;\n        ch = state.input.charCodeAt(++state.position);\n      }\n    } else {\n      break;\n    }\n  }\n\n  if (checkIndent !== -1 && lineBreaks !== 0 && state.lineIndent < checkIndent) {\n    throwWarning(state, 'deficient indentation');\n  }\n\n  return lineBreaks;\n}\n\nfunction testDocumentSeparator(state) {\n  var _position = state.position,\n      ch;\n\n  ch = state.input.charCodeAt(_position);\n\n  // Condition state.position === state.lineStart is tested\n  // in parent on each call, for efficiency. No needs to test here again.\n  if ((ch === 0x2D/* - */ || ch === 0x2E/* . */) &&\n      ch === state.input.charCodeAt(_position + 1) &&\n      ch === state.input.charCodeAt(_position + 2)) {\n\n    _position += 3;\n\n    ch = state.input.charCodeAt(_position);\n\n    if (ch === 0 || is_WS_OR_EOL(ch)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction writeFoldedLines(state, count) {\n  if (count === 1) {\n    state.result += ' ';\n  } else if (count > 1) {\n    state.result += common.repeat('\\n', count - 1);\n  }\n}\n\n\nfunction readPlainScalar(state, nodeIndent, withinFlowCollection) {\n  var preceding,\n      following,\n      captureStart,\n      captureEnd,\n      hasPendingContent,\n      _line,\n      _lineStart,\n      _lineIndent,\n      _kind = state.kind,\n      _result = state.result,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (is_WS_OR_EOL(ch)      ||\n      is_FLOW_INDICATOR(ch) ||\n      ch === 0x23/* # */    ||\n      ch === 0x26/* & */    ||\n      ch === 0x2A/* * */    ||\n      ch === 0x21/* ! */    ||\n      ch === 0x7C/* | */    ||\n      ch === 0x3E/* > */    ||\n      ch === 0x27/* ' */    ||\n      ch === 0x22/* \" */    ||\n      ch === 0x25/* % */    ||\n      ch === 0x40/* @ */    ||\n      ch === 0x60/* ` */) {\n    return false;\n  }\n\n  if (ch === 0x3F/* ? */ || ch === 0x2D/* - */) {\n    following = state.input.charCodeAt(state.position + 1);\n\n    if (is_WS_OR_EOL(following) ||\n        withinFlowCollection && is_FLOW_INDICATOR(following)) {\n      return false;\n    }\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n  captureStart = captureEnd = state.position;\n  hasPendingContent = false;\n\n  while (ch !== 0) {\n    if (ch === 0x3A/* : */) {\n      following = state.input.charCodeAt(state.position + 1);\n\n      if (is_WS_OR_EOL(following) ||\n          withinFlowCollection && is_FLOW_INDICATOR(following)) {\n        break;\n      }\n\n    } else if (ch === 0x23/* # */) {\n      preceding = state.input.charCodeAt(state.position - 1);\n\n      if (is_WS_OR_EOL(preceding)) {\n        break;\n      }\n\n    } else if ((state.position === state.lineStart && testDocumentSeparator(state)) ||\n               withinFlowCollection && is_FLOW_INDICATOR(ch)) {\n      break;\n\n    } else if (is_EOL(ch)) {\n      _line = state.line;\n      _lineStart = state.lineStart;\n      _lineIndent = state.lineIndent;\n      skipSeparationSpace(state, false, -1);\n\n      if (state.lineIndent >= nodeIndent) {\n        hasPendingContent = true;\n        ch = state.input.charCodeAt(state.position);\n        continue;\n      } else {\n        state.position = captureEnd;\n        state.line = _line;\n        state.lineStart = _lineStart;\n        state.lineIndent = _lineIndent;\n        break;\n      }\n    }\n\n    if (hasPendingContent) {\n      captureSegment(state, captureStart, captureEnd, false);\n      writeFoldedLines(state, state.line - _line);\n      captureStart = captureEnd = state.position;\n      hasPendingContent = false;\n    }\n\n    if (!is_WHITE_SPACE(ch)) {\n      captureEnd = state.position + 1;\n    }\n\n    ch = state.input.charCodeAt(++state.position);\n  }\n\n  captureSegment(state, captureStart, captureEnd, false);\n\n  if (state.result) {\n    return true;\n  }\n\n  state.kind = _kind;\n  state.result = _result;\n  return false;\n}\n\nfunction readSingleQuotedScalar(state, nodeIndent) {\n  var ch,\n      captureStart, captureEnd;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x27/* ' */) {\n    return false;\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n  state.position++;\n  captureStart = captureEnd = state.position;\n\n  while ((ch = state.input.charCodeAt(state.position)) !== 0) {\n    if (ch === 0x27/* ' */) {\n      captureSegment(state, captureStart, state.position, true);\n      ch = state.input.charCodeAt(++state.position);\n\n      if (ch === 0x27/* ' */) {\n        captureStart = state.position;\n        state.position++;\n        captureEnd = state.position;\n      } else {\n        return true;\n      }\n\n    } else if (is_EOL(ch)) {\n      captureSegment(state, captureStart, captureEnd, true);\n      writeFoldedLines(state, skipSeparationSpace(state, false, nodeIndent));\n      captureStart = captureEnd = state.position;\n\n    } else if (state.position === state.lineStart && testDocumentSeparator(state)) {\n      throwError(state, 'unexpected end of the document within a single quoted scalar');\n\n    } else {\n      state.position++;\n      captureEnd = state.position;\n    }\n  }\n\n  throwError(state, 'unexpected end of the stream within a single quoted scalar');\n}\n\nfunction readDoubleQuotedScalar(state, nodeIndent) {\n  var captureStart,\n      captureEnd,\n      hexLength,\n      hexResult,\n      tmp,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x22/* \" */) {\n    return false;\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n  state.position++;\n  captureStart = captureEnd = state.position;\n\n  while ((ch = state.input.charCodeAt(state.position)) !== 0) {\n    if (ch === 0x22/* \" */) {\n      captureSegment(state, captureStart, state.position, true);\n      state.position++;\n      return true;\n\n    } else if (ch === 0x5C/* \\ */) {\n      captureSegment(state, captureStart, state.position, true);\n      ch = state.input.charCodeAt(++state.position);\n\n      if (is_EOL(ch)) {\n        skipSeparationSpace(state, false, nodeIndent);\n\n        // TODO: rework to inline fn with no type cast?\n      } else if (ch < 256 && simpleEscapeCheck[ch]) {\n        state.result += simpleEscapeMap[ch];\n        state.position++;\n\n      } else if ((tmp = escapedHexLen(ch)) > 0) {\n        hexLength = tmp;\n        hexResult = 0;\n\n        for (; hexLength > 0; hexLength--) {\n          ch = state.input.charCodeAt(++state.position);\n\n          if ((tmp = fromHexCode(ch)) >= 0) {\n            hexResult = (hexResult << 4) + tmp;\n\n          } else {\n            throwError(state, 'expected hexadecimal character');\n          }\n        }\n\n        state.result += charFromCodepoint(hexResult);\n\n        state.position++;\n\n      } else {\n        throwError(state, 'unknown escape sequence');\n      }\n\n      captureStart = captureEnd = state.position;\n\n    } else if (is_EOL(ch)) {\n      captureSegment(state, captureStart, captureEnd, true);\n      writeFoldedLines(state, skipSeparationSpace(state, false, nodeIndent));\n      captureStart = captureEnd = state.position;\n\n    } else if (state.position === state.lineStart && testDocumentSeparator(state)) {\n      throwError(state, 'unexpected end of the document within a double quoted scalar');\n\n    } else {\n      state.position++;\n      captureEnd = state.position;\n    }\n  }\n\n  throwError(state, 'unexpected end of the stream within a double quoted scalar');\n}\n\nfunction readFlowCollection(state, nodeIndent) {\n  var readNext = true,\n      _line,\n      _lineStart,\n      _pos,\n      _tag     = state.tag,\n      _result,\n      _anchor  = state.anchor,\n      following,\n      terminator,\n      isPair,\n      isExplicitPair,\n      isMapping,\n      overridableKeys = Object.create(null),\n      keyNode,\n      keyTag,\n      valueNode,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch === 0x5B/* [ */) {\n    terminator = 0x5D;/* ] */\n    isMapping = false;\n    _result = [];\n  } else if (ch === 0x7B/* { */) {\n    terminator = 0x7D;/* } */\n    isMapping = true;\n    _result = {};\n  } else {\n    return false;\n  }\n\n  if (state.anchor !== null) {\n    state.anchorMap[state.anchor] = _result;\n  }\n\n  ch = state.input.charCodeAt(++state.position);\n\n  while (ch !== 0) {\n    skipSeparationSpace(state, true, nodeIndent);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if (ch === terminator) {\n      state.position++;\n      state.tag = _tag;\n      state.anchor = _anchor;\n      state.kind = isMapping ? 'mapping' : 'sequence';\n      state.result = _result;\n      return true;\n    } else if (!readNext) {\n      throwError(state, 'missed comma between flow collection entries');\n    } else if (ch === 0x2C/* , */) {\n      // \"flow collection entries can never be completely empty\", as per YAML 1.2, section 7.4\n      throwError(state, \"expected the node content, but found ','\");\n    }\n\n    keyTag = keyNode = valueNode = null;\n    isPair = isExplicitPair = false;\n\n    if (ch === 0x3F/* ? */) {\n      following = state.input.charCodeAt(state.position + 1);\n\n      if (is_WS_OR_EOL(following)) {\n        isPair = isExplicitPair = true;\n        state.position++;\n        skipSeparationSpace(state, true, nodeIndent);\n      }\n    }\n\n    _line = state.line; // Save the current line.\n    _lineStart = state.lineStart;\n    _pos = state.position;\n    composeNode(state, nodeIndent, CONTEXT_FLOW_IN, false, true);\n    keyTag = state.tag;\n    keyNode = state.result;\n    skipSeparationSpace(state, true, nodeIndent);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if ((isExplicitPair || state.line === _line) && ch === 0x3A/* : */) {\n      isPair = true;\n      ch = state.input.charCodeAt(++state.position);\n      skipSeparationSpace(state, true, nodeIndent);\n      composeNode(state, nodeIndent, CONTEXT_FLOW_IN, false, true);\n      valueNode = state.result;\n    }\n\n    if (isMapping) {\n      storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode, _line, _lineStart, _pos);\n    } else if (isPair) {\n      _result.push(storeMappingPair(state, null, overridableKeys, keyTag, keyNode, valueNode, _line, _lineStart, _pos));\n    } else {\n      _result.push(keyNode);\n    }\n\n    skipSeparationSpace(state, true, nodeIndent);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if (ch === 0x2C/* , */) {\n      readNext = true;\n      ch = state.input.charCodeAt(++state.position);\n    } else {\n      readNext = false;\n    }\n  }\n\n  throwError(state, 'unexpected end of the stream within a flow collection');\n}\n\nfunction readBlockScalar(state, nodeIndent) {\n  var captureStart,\n      folding,\n      chomping       = CHOMPING_CLIP,\n      didReadContent = false,\n      detectedIndent = false,\n      textIndent     = nodeIndent,\n      emptyLines     = 0,\n      atMoreIndented = false,\n      tmp,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch === 0x7C/* | */) {\n    folding = false;\n  } else if (ch === 0x3E/* > */) {\n    folding = true;\n  } else {\n    return false;\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n\n  while (ch !== 0) {\n    ch = state.input.charCodeAt(++state.position);\n\n    if (ch === 0x2B/* + */ || ch === 0x2D/* - */) {\n      if (CHOMPING_CLIP === chomping) {\n        chomping = (ch === 0x2B/* + */) ? CHOMPING_KEEP : CHOMPING_STRIP;\n      } else {\n        throwError(state, 'repeat of a chomping mode identifier');\n      }\n\n    } else if ((tmp = fromDecimalCode(ch)) >= 0) {\n      if (tmp === 0) {\n        throwError(state, 'bad explicit indentation width of a block scalar; it cannot be less than one');\n      } else if (!detectedIndent) {\n        textIndent = nodeIndent + tmp - 1;\n        detectedIndent = true;\n      } else {\n        throwError(state, 'repeat of an indentation width identifier');\n      }\n\n    } else {\n      break;\n    }\n  }\n\n  if (is_WHITE_SPACE(ch)) {\n    do { ch = state.input.charCodeAt(++state.position); }\n    while (is_WHITE_SPACE(ch));\n\n    if (ch === 0x23/* # */) {\n      do { ch = state.input.charCodeAt(++state.position); }\n      while (!is_EOL(ch) && (ch !== 0));\n    }\n  }\n\n  while (ch !== 0) {\n    readLineBreak(state);\n    state.lineIndent = 0;\n\n    ch = state.input.charCodeAt(state.position);\n\n    while ((!detectedIndent || state.lineIndent < textIndent) &&\n           (ch === 0x20/* Space */)) {\n      state.lineIndent++;\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    if (!detectedIndent && state.lineIndent > textIndent) {\n      textIndent = state.lineIndent;\n    }\n\n    if (is_EOL(ch)) {\n      emptyLines++;\n      continue;\n    }\n\n    // End of the scalar.\n    if (state.lineIndent < textIndent) {\n\n      // Perform the chomping.\n      if (chomping === CHOMPING_KEEP) {\n        state.result += common.repeat('\\n', didReadContent ? 1 + emptyLines : emptyLines);\n      } else if (chomping === CHOMPING_CLIP) {\n        if (didReadContent) { // i.e. only if the scalar is not empty.\n          state.result += '\\n';\n        }\n      }\n\n      // Break this `while` cycle and go to the funciton's epilogue.\n      break;\n    }\n\n    // Folded style: use fancy rules to handle line breaks.\n    if (folding) {\n\n      // Lines starting with white space characters (more-indented lines) are not folded.\n      if (is_WHITE_SPACE(ch)) {\n        atMoreIndented = true;\n        // except for the first content line (cf. Example 8.1)\n        state.result += common.repeat('\\n', didReadContent ? 1 + emptyLines : emptyLines);\n\n      // End of more-indented block.\n      } else if (atMoreIndented) {\n        atMoreIndented = false;\n        state.result += common.repeat('\\n', emptyLines + 1);\n\n      // Just one line break - perceive as the same line.\n      } else if (emptyLines === 0) {\n        if (didReadContent) { // i.e. only if we have already read some scalar content.\n          state.result += ' ';\n        }\n\n      // Several line breaks - perceive as different lines.\n      } else {\n        state.result += common.repeat('\\n', emptyLines);\n      }\n\n    // Literal style: just add exact number of line breaks between content lines.\n    } else {\n      // Keep all line breaks except the header line break.\n      state.result += common.repeat('\\n', didReadContent ? 1 + emptyLines : emptyLines);\n    }\n\n    didReadContent = true;\n    detectedIndent = true;\n    emptyLines = 0;\n    captureStart = state.position;\n\n    while (!is_EOL(ch) && (ch !== 0)) {\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    captureSegment(state, captureStart, state.position, false);\n  }\n\n  return true;\n}\n\nfunction readBlockSequence(state, nodeIndent) {\n  var _line,\n      _tag      = state.tag,\n      _anchor   = state.anchor,\n      _result   = [],\n      following,\n      detected  = false,\n      ch;\n\n  // there is a leading tab before this token, so it can't be a block sequence/mapping;\n  // it can still be flow sequence/mapping or a scalar\n  if (state.firstTabInLine !== -1) return false;\n\n  if (state.anchor !== null) {\n    state.anchorMap[state.anchor] = _result;\n  }\n\n  ch = state.input.charCodeAt(state.position);\n\n  while (ch !== 0) {\n    if (state.firstTabInLine !== -1) {\n      state.position = state.firstTabInLine;\n      throwError(state, 'tab characters must not be used in indentation');\n    }\n\n    if (ch !== 0x2D/* - */) {\n      break;\n    }\n\n    following = state.input.charCodeAt(state.position + 1);\n\n    if (!is_WS_OR_EOL(following)) {\n      break;\n    }\n\n    detected = true;\n    state.position++;\n\n    if (skipSeparationSpace(state, true, -1)) {\n      if (state.lineIndent <= nodeIndent) {\n        _result.push(null);\n        ch = state.input.charCodeAt(state.position);\n        continue;\n      }\n    }\n\n    _line = state.line;\n    composeNode(state, nodeIndent, CONTEXT_BLOCK_IN, false, true);\n    _result.push(state.result);\n    skipSeparationSpace(state, true, -1);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if ((state.line === _line || state.lineIndent > nodeIndent) && (ch !== 0)) {\n      throwError(state, 'bad indentation of a sequence entry');\n    } else if (state.lineIndent < nodeIndent) {\n      break;\n    }\n  }\n\n  if (detected) {\n    state.tag = _tag;\n    state.anchor = _anchor;\n    state.kind = 'sequence';\n    state.result = _result;\n    return true;\n  }\n  return false;\n}\n\nfunction readBlockMapping(state, nodeIndent, flowIndent) {\n  var following,\n      allowCompact,\n      _line,\n      _keyLine,\n      _keyLineStart,\n      _keyPos,\n      _tag          = state.tag,\n      _anchor       = state.anchor,\n      _result       = {},\n      overridableKeys = Object.create(null),\n      keyTag        = null,\n      keyNode       = null,\n      valueNode     = null,\n      atExplicitKey = false,\n      detected      = false,\n      ch;\n\n  // there is a leading tab before this token, so it can't be a block sequence/mapping;\n  // it can still be flow sequence/mapping or a scalar\n  if (state.firstTabInLine !== -1) return false;\n\n  if (state.anchor !== null) {\n    state.anchorMap[state.anchor] = _result;\n  }\n\n  ch = state.input.charCodeAt(state.position);\n\n  while (ch !== 0) {\n    if (!atExplicitKey && state.firstTabInLine !== -1) {\n      state.position = state.firstTabInLine;\n      throwError(state, 'tab characters must not be used in indentation');\n    }\n\n    following = state.input.charCodeAt(state.position + 1);\n    _line = state.line; // Save the current line.\n\n    //\n    // Explicit notation case. There are two separate blocks:\n    // first for the key (denoted by \"?\") and second for the value (denoted by \":\")\n    //\n    if ((ch === 0x3F/* ? */ || ch === 0x3A/* : */) && is_WS_OR_EOL(following)) {\n\n      if (ch === 0x3F/* ? */) {\n        if (atExplicitKey) {\n          storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null, _keyLine, _keyLineStart, _keyPos);\n          keyTag = keyNode = valueNode = null;\n        }\n\n        detected = true;\n        atExplicitKey = true;\n        allowCompact = true;\n\n      } else if (atExplicitKey) {\n        // i.e. 0x3A/* : */ === character after the explicit key.\n        atExplicitKey = false;\n        allowCompact = true;\n\n      } else {\n        throwError(state, 'incomplete explicit mapping pair; a key node is missed; or followed by a non-tabulated empty line');\n      }\n\n      state.position += 1;\n      ch = following;\n\n    //\n    // Implicit notation case. Flow-style node as the key first, then \":\", and the value.\n    //\n    } else {\n      _keyLine = state.line;\n      _keyLineStart = state.lineStart;\n      _keyPos = state.position;\n\n      if (!composeNode(state, flowIndent, CONTEXT_FLOW_OUT, false, true)) {\n        // Neither implicit nor explicit notation.\n        // Reading is done. Go to the epilogue.\n        break;\n      }\n\n      if (state.line === _line) {\n        ch = state.input.charCodeAt(state.position);\n\n        while (is_WHITE_SPACE(ch)) {\n          ch = state.input.charCodeAt(++state.position);\n        }\n\n        if (ch === 0x3A/* : */) {\n          ch = state.input.charCodeAt(++state.position);\n\n          if (!is_WS_OR_EOL(ch)) {\n            throwError(state, 'a whitespace character is expected after the key-value separator within a block mapping');\n          }\n\n          if (atExplicitKey) {\n            storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null, _keyLine, _keyLineStart, _keyPos);\n            keyTag = keyNode = valueNode = null;\n          }\n\n          detected = true;\n          atExplicitKey = false;\n          allowCompact = false;\n          keyTag = state.tag;\n          keyNode = state.result;\n\n        } else if (detected) {\n          throwError(state, 'can not read an implicit mapping pair; a colon is missed');\n\n        } else {\n          state.tag = _tag;\n          state.anchor = _anchor;\n          return true; // Keep the result of `composeNode`.\n        }\n\n      } else if (detected) {\n        throwError(state, 'can not read a block mapping entry; a multiline key may not be an implicit key');\n\n      } else {\n        state.tag = _tag;\n        state.anchor = _anchor;\n        return true; // Keep the result of `composeNode`.\n      }\n    }\n\n    //\n    // Common reading code for both explicit and implicit notations.\n    //\n    if (state.line === _line || state.lineIndent > nodeIndent) {\n      if (atExplicitKey) {\n        _keyLine = state.line;\n        _keyLineStart = state.lineStart;\n        _keyPos = state.position;\n      }\n\n      if (composeNode(state, nodeIndent, CONTEXT_BLOCK_OUT, true, allowCompact)) {\n        if (atExplicitKey) {\n          keyNode = state.result;\n        } else {\n          valueNode = state.result;\n        }\n      }\n\n      if (!atExplicitKey) {\n        storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode, _keyLine, _keyLineStart, _keyPos);\n        keyTag = keyNode = valueNode = null;\n      }\n\n      skipSeparationSpace(state, true, -1);\n      ch = state.input.charCodeAt(state.position);\n    }\n\n    if ((state.line === _line || state.lineIndent > nodeIndent) && (ch !== 0)) {\n      throwError(state, 'bad indentation of a mapping entry');\n    } else if (state.lineIndent < nodeIndent) {\n      break;\n    }\n  }\n\n  //\n  // Epilogue.\n  //\n\n  // Special case: last mapping's node contains only the key in explicit notation.\n  if (atExplicitKey) {\n    storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null, _keyLine, _keyLineStart, _keyPos);\n  }\n\n  // Expose the resulting mapping.\n  if (detected) {\n    state.tag = _tag;\n    state.anchor = _anchor;\n    state.kind = 'mapping';\n    state.result = _result;\n  }\n\n  return detected;\n}\n\nfunction readTagProperty(state) {\n  var _position,\n      isVerbatim = false,\n      isNamed    = false,\n      tagHandle,\n      tagName,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x21/* ! */) return false;\n\n  if (state.tag !== null) {\n    throwError(state, 'duplication of a tag property');\n  }\n\n  ch = state.input.charCodeAt(++state.position);\n\n  if (ch === 0x3C/* < */) {\n    isVerbatim = true;\n    ch = state.input.charCodeAt(++state.position);\n\n  } else if (ch === 0x21/* ! */) {\n    isNamed = true;\n    tagHandle = '!!';\n    ch = state.input.charCodeAt(++state.position);\n\n  } else {\n    tagHandle = '!';\n  }\n\n  _position = state.position;\n\n  if (isVerbatim) {\n    do { ch = state.input.charCodeAt(++state.position); }\n    while (ch !== 0 && ch !== 0x3E/* > */);\n\n    if (state.position < state.length) {\n      tagName = state.input.slice(_position, state.position);\n      ch = state.input.charCodeAt(++state.position);\n    } else {\n      throwError(state, 'unexpected end of the stream within a verbatim tag');\n    }\n  } else {\n    while (ch !== 0 && !is_WS_OR_EOL(ch)) {\n\n      if (ch === 0x21/* ! */) {\n        if (!isNamed) {\n          tagHandle = state.input.slice(_position - 1, state.position + 1);\n\n          if (!PATTERN_TAG_HANDLE.test(tagHandle)) {\n            throwError(state, 'named tag handle cannot contain such characters');\n          }\n\n          isNamed = true;\n          _position = state.position + 1;\n        } else {\n          throwError(state, 'tag suffix cannot contain exclamation marks');\n        }\n      }\n\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    tagName = state.input.slice(_position, state.position);\n\n    if (PATTERN_FLOW_INDICATORS.test(tagName)) {\n      throwError(state, 'tag suffix cannot contain flow indicator characters');\n    }\n  }\n\n  if (tagName && !PATTERN_TAG_URI.test(tagName)) {\n    throwError(state, 'tag name cannot contain such characters: ' + tagName);\n  }\n\n  try {\n    tagName = decodeURIComponent(tagName);\n  } catch (err) {\n    throwError(state, 'tag name is malformed: ' + tagName);\n  }\n\n  if (isVerbatim) {\n    state.tag = tagName;\n\n  } else if (_hasOwnProperty$1.call(state.tagMap, tagHandle)) {\n    state.tag = state.tagMap[tagHandle] + tagName;\n\n  } else if (tagHandle === '!') {\n    state.tag = '!' + tagName;\n\n  } else if (tagHandle === '!!') {\n    state.tag = 'tag:yaml.org,2002:' + tagName;\n\n  } else {\n    throwError(state, 'undeclared tag handle \"' + tagHandle + '\"');\n  }\n\n  return true;\n}\n\nfunction readAnchorProperty(state) {\n  var _position,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x26/* & */) return false;\n\n  if (state.anchor !== null) {\n    throwError(state, 'duplication of an anchor property');\n  }\n\n  ch = state.input.charCodeAt(++state.position);\n  _position = state.position;\n\n  while (ch !== 0 && !is_WS_OR_EOL(ch) && !is_FLOW_INDICATOR(ch)) {\n    ch = state.input.charCodeAt(++state.position);\n  }\n\n  if (state.position === _position) {\n    throwError(state, 'name of an anchor node must contain at least one character');\n  }\n\n  state.anchor = state.input.slice(_position, state.position);\n  return true;\n}\n\nfunction readAlias(state) {\n  var _position, alias,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x2A/* * */) return false;\n\n  ch = state.input.charCodeAt(++state.position);\n  _position = state.position;\n\n  while (ch !== 0 && !is_WS_OR_EOL(ch) && !is_FLOW_INDICATOR(ch)) {\n    ch = state.input.charCodeAt(++state.position);\n  }\n\n  if (state.position === _position) {\n    throwError(state, 'name of an alias node must contain at least one character');\n  }\n\n  alias = state.input.slice(_position, state.position);\n\n  if (!_hasOwnProperty$1.call(state.anchorMap, alias)) {\n    throwError(state, 'unidentified alias \"' + alias + '\"');\n  }\n\n  state.result = state.anchorMap[alias];\n  skipSeparationSpace(state, true, -1);\n  return true;\n}\n\nfunction composeNode(state, parentIndent, nodeContext, allowToSeek, allowCompact) {\n  var allowBlockStyles,\n      allowBlockScalars,\n      allowBlockCollections,\n      indentStatus = 1, // 1: this>parent, 0: this=parent, -1: this<parent\n      atNewLine  = false,\n      hasContent = false,\n      typeIndex,\n      typeQuantity,\n      typeList,\n      type,\n      flowIndent,\n      blockIndent;\n\n  if (state.listener !== null) {\n    state.listener('open', state);\n  }\n\n  state.tag    = null;\n  state.anchor = null;\n  state.kind   = null;\n  state.result = null;\n\n  allowBlockStyles = allowBlockScalars = allowBlockCollections =\n    CONTEXT_BLOCK_OUT === nodeContext ||\n    CONTEXT_BLOCK_IN  === nodeContext;\n\n  if (allowToSeek) {\n    if (skipSeparationSpace(state, true, -1)) {\n      atNewLine = true;\n\n      if (state.lineIndent > parentIndent) {\n        indentStatus = 1;\n      } else if (state.lineIndent === parentIndent) {\n        indentStatus = 0;\n      } else if (state.lineIndent < parentIndent) {\n        indentStatus = -1;\n      }\n    }\n  }\n\n  if (indentStatus === 1) {\n    while (readTagProperty(state) || readAnchorProperty(state)) {\n      if (skipSeparationSpace(state, true, -1)) {\n        atNewLine = true;\n        allowBlockCollections = allowBlockStyles;\n\n        if (state.lineIndent > parentIndent) {\n          indentStatus = 1;\n        } else if (state.lineIndent === parentIndent) {\n          indentStatus = 0;\n        } else if (state.lineIndent < parentIndent) {\n          indentStatus = -1;\n        }\n      } else {\n        allowBlockCollections = false;\n      }\n    }\n  }\n\n  if (allowBlockCollections) {\n    allowBlockCollections = atNewLine || allowCompact;\n  }\n\n  if (indentStatus === 1 || CONTEXT_BLOCK_OUT === nodeContext) {\n    if (CONTEXT_FLOW_IN === nodeContext || CONTEXT_FLOW_OUT === nodeContext) {\n      flowIndent = parentIndent;\n    } else {\n      flowIndent = parentIndent + 1;\n    }\n\n    blockIndent = state.position - state.lineStart;\n\n    if (indentStatus === 1) {\n      if (allowBlockCollections &&\n          (readBlockSequence(state, blockIndent) ||\n           readBlockMapping(state, blockIndent, flowIndent)) ||\n          readFlowCollection(state, flowIndent)) {\n        hasContent = true;\n      } else {\n        if ((allowBlockScalars && readBlockScalar(state, flowIndent)) ||\n            readSingleQuotedScalar(state, flowIndent) ||\n            readDoubleQuotedScalar(state, flowIndent)) {\n          hasContent = true;\n\n        } else if (readAlias(state)) {\n          hasContent = true;\n\n          if (state.tag !== null || state.anchor !== null) {\n            throwError(state, 'alias node should not have any properties');\n          }\n\n        } else if (readPlainScalar(state, flowIndent, CONTEXT_FLOW_IN === nodeContext)) {\n          hasContent = true;\n\n          if (state.tag === null) {\n            state.tag = '?';\n          }\n        }\n\n        if (state.anchor !== null) {\n          state.anchorMap[state.anchor] = state.result;\n        }\n      }\n    } else if (indentStatus === 0) {\n      // Special case: block sequences are allowed to have same indentation level as the parent.\n      // http://www.yaml.org/spec/1.2/spec.html#id2799784\n      hasContent = allowBlockCollections && readBlockSequence(state, blockIndent);\n    }\n  }\n\n  if (state.tag === null) {\n    if (state.anchor !== null) {\n      state.anchorMap[state.anchor] = state.result;\n    }\n\n  } else if (state.tag === '?') {\n    // Implicit resolving is not allowed for non-scalar types, and '?'\n    // non-specific tag is only automatically assigned to plain scalars.\n    //\n    // We only need to check kind conformity in case user explicitly assigns '?'\n    // tag, for example like this: \"!<?> [0]\"\n    //\n    if (state.result !== null && state.kind !== 'scalar') {\n      throwError(state, 'unacceptable node kind for !<?> tag; it should be \"scalar\", not \"' + state.kind + '\"');\n    }\n\n    for (typeIndex = 0, typeQuantity = state.implicitTypes.length; typeIndex < typeQuantity; typeIndex += 1) {\n      type = state.implicitTypes[typeIndex];\n\n      if (type.resolve(state.result)) { // `state.result` updated in resolver if matched\n        state.result = type.construct(state.result);\n        state.tag = type.tag;\n        if (state.anchor !== null) {\n          state.anchorMap[state.anchor] = state.result;\n        }\n        break;\n      }\n    }\n  } else if (state.tag !== '!') {\n    if (_hasOwnProperty$1.call(state.typeMap[state.kind || 'fallback'], state.tag)) {\n      type = state.typeMap[state.kind || 'fallback'][state.tag];\n    } else {\n      // looking for multi type\n      type = null;\n      typeList = state.typeMap.multi[state.kind || 'fallback'];\n\n      for (typeIndex = 0, typeQuantity = typeList.length; typeIndex < typeQuantity; typeIndex += 1) {\n        if (state.tag.slice(0, typeList[typeIndex].tag.length) === typeList[typeIndex].tag) {\n          type = typeList[typeIndex];\n          break;\n        }\n      }\n    }\n\n    if (!type) {\n      throwError(state, 'unknown tag !<' + state.tag + '>');\n    }\n\n    if (state.result !== null && type.kind !== state.kind) {\n      throwError(state, 'unacceptable node kind for !<' + state.tag + '> tag; it should be \"' + type.kind + '\", not \"' + state.kind + '\"');\n    }\n\n    if (!type.resolve(state.result, state.tag)) { // `state.result` updated in resolver if matched\n      throwError(state, 'cannot resolve a node with !<' + state.tag + '> explicit tag');\n    } else {\n      state.result = type.construct(state.result, state.tag);\n      if (state.anchor !== null) {\n        state.anchorMap[state.anchor] = state.result;\n      }\n    }\n  }\n\n  if (state.listener !== null) {\n    state.listener('close', state);\n  }\n  return state.tag !== null ||  state.anchor !== null || hasContent;\n}\n\nfunction readDocument(state) {\n  var documentStart = state.position,\n      _position,\n      directiveName,\n      directiveArgs,\n      hasDirectives = false,\n      ch;\n\n  state.version = null;\n  state.checkLineBreaks = state.legacy;\n  state.tagMap = Object.create(null);\n  state.anchorMap = Object.create(null);\n\n  while ((ch = state.input.charCodeAt(state.position)) !== 0) {\n    skipSeparationSpace(state, true, -1);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if (state.lineIndent > 0 || ch !== 0x25/* % */) {\n      break;\n    }\n\n    hasDirectives = true;\n    ch = state.input.charCodeAt(++state.position);\n    _position = state.position;\n\n    while (ch !== 0 && !is_WS_OR_EOL(ch)) {\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    directiveName = state.input.slice(_position, state.position);\n    directiveArgs = [];\n\n    if (directiveName.length < 1) {\n      throwError(state, 'directive name must not be less than one character in length');\n    }\n\n    while (ch !== 0) {\n      while (is_WHITE_SPACE(ch)) {\n        ch = state.input.charCodeAt(++state.position);\n      }\n\n      if (ch === 0x23/* # */) {\n        do { ch = state.input.charCodeAt(++state.position); }\n        while (ch !== 0 && !is_EOL(ch));\n        break;\n      }\n\n      if (is_EOL(ch)) break;\n\n      _position = state.position;\n\n      while (ch !== 0 && !is_WS_OR_EOL(ch)) {\n        ch = state.input.charCodeAt(++state.position);\n      }\n\n      directiveArgs.push(state.input.slice(_position, state.position));\n    }\n\n    if (ch !== 0) readLineBreak(state);\n\n    if (_hasOwnProperty$1.call(directiveHandlers, directiveName)) {\n      directiveHandlers[directiveName](state, directiveName, directiveArgs);\n    } else {\n      throwWarning(state, 'unknown document directive \"' + directiveName + '\"');\n    }\n  }\n\n  skipSeparationSpace(state, true, -1);\n\n  if (state.lineIndent === 0 &&\n      state.input.charCodeAt(state.position)     === 0x2D/* - */ &&\n      state.input.charCodeAt(state.position + 1) === 0x2D/* - */ &&\n      state.input.charCodeAt(state.position + 2) === 0x2D/* - */) {\n    state.position += 3;\n    skipSeparationSpace(state, true, -1);\n\n  } else if (hasDirectives) {\n    throwError(state, 'directives end mark is expected');\n  }\n\n  composeNode(state, state.lineIndent - 1, CONTEXT_BLOCK_OUT, false, true);\n  skipSeparationSpace(state, true, -1);\n\n  if (state.checkLineBreaks &&\n      PATTERN_NON_ASCII_LINE_BREAKS.test(state.input.slice(documentStart, state.position))) {\n    throwWarning(state, 'non-ASCII line breaks are interpreted as content');\n  }\n\n  state.documents.push(state.result);\n\n  if (state.position === state.lineStart && testDocumentSeparator(state)) {\n\n    if (state.input.charCodeAt(state.position) === 0x2E/* . */) {\n      state.position += 3;\n      skipSeparationSpace(state, true, -1);\n    }\n    return;\n  }\n\n  if (state.position < (state.length - 1)) {\n    throwError(state, 'end of the stream or a document separator is expected');\n  } else {\n    return;\n  }\n}\n\n\nfunction loadDocuments(input, options) {\n  input = String(input);\n  options = options || {};\n\n  if (input.length !== 0) {\n\n    // Add tailing `\\n` if not exists\n    if (input.charCodeAt(input.length - 1) !== 0x0A/* LF */ &&\n        input.charCodeAt(input.length - 1) !== 0x0D/* CR */) {\n      input += '\\n';\n    }\n\n    // Strip BOM\n    if (input.charCodeAt(0) === 0xFEFF) {\n      input = input.slice(1);\n    }\n  }\n\n  var state = new State$1(input, options);\n\n  var nullpos = input.indexOf('\\0');\n\n  if (nullpos !== -1) {\n    state.position = nullpos;\n    throwError(state, 'null byte is not allowed in input');\n  }\n\n  // Use 0 as string terminator. That significantly simplifies bounds check.\n  state.input += '\\0';\n\n  while (state.input.charCodeAt(state.position) === 0x20/* Space */) {\n    state.lineIndent += 1;\n    state.position += 1;\n  }\n\n  while (state.position < (state.length - 1)) {\n    readDocument(state);\n  }\n\n  return state.documents;\n}\n\n\nfunction loadAll$1(input, iterator, options) {\n  if (iterator !== null && typeof iterator === 'object' && typeof options === 'undefined') {\n    options = iterator;\n    iterator = null;\n  }\n\n  var documents = loadDocuments(input, options);\n\n  if (typeof iterator !== 'function') {\n    return documents;\n  }\n\n  for (var index = 0, length = documents.length; index < length; index += 1) {\n    iterator(documents[index]);\n  }\n}\n\n\nfunction load$1(input, options) {\n  var documents = loadDocuments(input, options);\n\n  if (documents.length === 0) {\n    /*eslint-disable no-undefined*/\n    return undefined;\n  } else if (documents.length === 1) {\n    return documents[0];\n  }\n  throw new exception('expected a single document in the stream, but found more');\n}\n\n\nvar loadAll_1 = loadAll$1;\nvar load_1    = load$1;\n\nvar loader = {\n\tloadAll: loadAll_1,\n\tload: load_1\n};\n\n/*eslint-disable no-use-before-define*/\n\n\n\n\n\nvar _toString       = Object.prototype.toString;\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar CHAR_BOM                  = 0xFEFF;\nvar CHAR_TAB                  = 0x09; /* Tab */\nvar CHAR_LINE_FEED            = 0x0A; /* LF */\nvar CHAR_CARRIAGE_RETURN      = 0x0D; /* CR */\nvar CHAR_SPACE                = 0x20; /* Space */\nvar CHAR_EXCLAMATION          = 0x21; /* ! */\nvar CHAR_DOUBLE_QUOTE         = 0x22; /* \" */\nvar CHAR_SHARP                = 0x23; /* # */\nvar CHAR_PERCENT              = 0x25; /* % */\nvar CHAR_AMPERSAND            = 0x26; /* & */\nvar CHAR_SINGLE_QUOTE         = 0x27; /* ' */\nvar CHAR_ASTERISK             = 0x2A; /* * */\nvar CHAR_COMMA                = 0x2C; /* , */\nvar CHAR_MINUS                = 0x2D; /* - */\nvar CHAR_COLON                = 0x3A; /* : */\nvar CHAR_EQUALS               = 0x3D; /* = */\nvar CHAR_GREATER_THAN         = 0x3E; /* > */\nvar CHAR_QUESTION             = 0x3F; /* ? */\nvar CHAR_COMMERCIAL_AT        = 0x40; /* @ */\nvar CHAR_LEFT_SQUARE_BRACKET  = 0x5B; /* [ */\nvar CHAR_RIGHT_SQUARE_BRACKET = 0x5D; /* ] */\nvar CHAR_GRAVE_ACCENT         = 0x60; /* ` */\nvar CHAR_LEFT_CURLY_BRACKET   = 0x7B; /* { */\nvar CHAR_VERTICAL_LINE        = 0x7C; /* | */\nvar CHAR_RIGHT_CURLY_BRACKET  = 0x7D; /* } */\n\nvar ESCAPE_SEQUENCES = {};\n\nESCAPE_SEQUENCES[0x00]   = '\\\\0';\nESCAPE_SEQUENCES[0x07]   = '\\\\a';\nESCAPE_SEQUENCES[0x08]   = '\\\\b';\nESCAPE_SEQUENCES[0x09]   = '\\\\t';\nESCAPE_SEQUENCES[0x0A]   = '\\\\n';\nESCAPE_SEQUENCES[0x0B]   = '\\\\v';\nESCAPE_SEQUENCES[0x0C]   = '\\\\f';\nESCAPE_SEQUENCES[0x0D]   = '\\\\r';\nESCAPE_SEQUENCES[0x1B]   = '\\\\e';\nESCAPE_SEQUENCES[0x22]   = '\\\\\"';\nESCAPE_SEQUENCES[0x5C]   = '\\\\\\\\';\nESCAPE_SEQUENCES[0x85]   = '\\\\N';\nESCAPE_SEQUENCES[0xA0]   = '\\\\_';\nESCAPE_SEQUENCES[0x2028] = '\\\\L';\nESCAPE_SEQUENCES[0x2029] = '\\\\P';\n\nvar DEPRECATED_BOOLEANS_SYNTAX = [\n  'y', 'Y', 'yes', 'Yes', 'YES', 'on', 'On', 'ON',\n  'n', 'N', 'no', 'No', 'NO', 'off', 'Off', 'OFF'\n];\n\nvar DEPRECATED_BASE60_SYNTAX = /^[-+]?[0-9_]+(?::[0-9_]+)+(?:\\.[0-9_]*)?$/;\n\nfunction compileStyleMap(schema, map) {\n  var result, keys, index, length, tag, style, type;\n\n  if (map === null) return {};\n\n  result = {};\n  keys = Object.keys(map);\n\n  for (index = 0, length = keys.length; index < length; index += 1) {\n    tag = keys[index];\n    style = String(map[tag]);\n\n    if (tag.slice(0, 2) === '!!') {\n      tag = 'tag:yaml.org,2002:' + tag.slice(2);\n    }\n    type = schema.compiledTypeMap['fallback'][tag];\n\n    if (type && _hasOwnProperty.call(type.styleAliases, style)) {\n      style = type.styleAliases[style];\n    }\n\n    result[tag] = style;\n  }\n\n  return result;\n}\n\nfunction encodeHex(character) {\n  var string, handle, length;\n\n  string = character.toString(16).toUpperCase();\n\n  if (character <= 0xFF) {\n    handle = 'x';\n    length = 2;\n  } else if (character <= 0xFFFF) {\n    handle = 'u';\n    length = 4;\n  } else if (character <= 0xFFFFFFFF) {\n    handle = 'U';\n    length = 8;\n  } else {\n    throw new exception('code point within a string may not be greater than 0xFFFFFFFF');\n  }\n\n  return '\\\\' + handle + common.repeat('0', length - string.length) + string;\n}\n\n\nvar QUOTING_TYPE_SINGLE = 1,\n    QUOTING_TYPE_DOUBLE = 2;\n\nfunction State(options) {\n  this.schema        = options['schema'] || _default;\n  this.indent        = Math.max(1, (options['indent'] || 2));\n  this.noArrayIndent = options['noArrayIndent'] || false;\n  this.skipInvalid   = options['skipInvalid'] || false;\n  this.flowLevel     = (common.isNothing(options['flowLevel']) ? -1 : options['flowLevel']);\n  this.styleMap      = compileStyleMap(this.schema, options['styles'] || null);\n  this.sortKeys      = options['sortKeys'] || false;\n  this.lineWidth     = options['lineWidth'] || 80;\n  this.noRefs        = options['noRefs'] || false;\n  this.noCompatMode  = options['noCompatMode'] || false;\n  this.condenseFlow  = options['condenseFlow'] || false;\n  this.quotingType   = options['quotingType'] === '\"' ? QUOTING_TYPE_DOUBLE : QUOTING_TYPE_SINGLE;\n  this.forceQuotes   = options['forceQuotes'] || false;\n  this.replacer      = typeof options['replacer'] === 'function' ? options['replacer'] : null;\n\n  this.implicitTypes = this.schema.compiledImplicit;\n  this.explicitTypes = this.schema.compiledExplicit;\n\n  this.tag = null;\n  this.result = '';\n\n  this.duplicates = [];\n  this.usedDuplicates = null;\n}\n\n// Indents every line in a string. Empty lines (\\n only) are not indented.\nfunction indentString(string, spaces) {\n  var ind = common.repeat(' ', spaces),\n      position = 0,\n      next = -1,\n      result = '',\n      line,\n      length = string.length;\n\n  while (position < length) {\n    next = string.indexOf('\\n', position);\n    if (next === -1) {\n      line = string.slice(position);\n      position = length;\n    } else {\n      line = string.slice(position, next + 1);\n      position = next + 1;\n    }\n\n    if (line.length && line !== '\\n') result += ind;\n\n    result += line;\n  }\n\n  return result;\n}\n\nfunction generateNextLine(state, level) {\n  return '\\n' + common.repeat(' ', state.indent * level);\n}\n\nfunction testImplicitResolving(state, str) {\n  var index, length, type;\n\n  for (index = 0, length = state.implicitTypes.length; index < length; index += 1) {\n    type = state.implicitTypes[index];\n\n    if (type.resolve(str)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\n// [33] s-white ::= s-space | s-tab\nfunction isWhitespace(c) {\n  return c === CHAR_SPACE || c === CHAR_TAB;\n}\n\n// Returns true if the character can be printed without escaping.\n// From YAML 1.2: \"any allowed characters known to be non-printable\n// should also be escaped. [However,] This isn’t mandatory\"\n// Derived from nb-char - \\t - #x85 - #xA0 - #x2028 - #x2029.\nfunction isPrintable(c) {\n  return  (0x00020 <= c && c <= 0x00007E)\n      || ((0x000A1 <= c && c <= 0x00D7FF) && c !== 0x2028 && c !== 0x2029)\n      || ((0x0E000 <= c && c <= 0x00FFFD) && c !== CHAR_BOM)\n      ||  (0x10000 <= c && c <= 0x10FFFF);\n}\n\n// [34] ns-char ::= nb-char - s-white\n// [27] nb-char ::= c-printable - b-char - c-byte-order-mark\n// [26] b-char  ::= b-line-feed | b-carriage-return\n// Including s-white (for some reason, examples doesn't match specs in this aspect)\n// ns-char ::= c-printable - b-line-feed - b-carriage-return - c-byte-order-mark\nfunction isNsCharOrWhitespace(c) {\n  return isPrintable(c)\n    && c !== CHAR_BOM\n    // - b-char\n    && c !== CHAR_CARRIAGE_RETURN\n    && c !== CHAR_LINE_FEED;\n}\n\n// [127]  ns-plain-safe(c) ::= c = flow-out  ⇒ ns-plain-safe-out\n//                             c = flow-in   ⇒ ns-plain-safe-in\n//                             c = block-key ⇒ ns-plain-safe-out\n//                             c = flow-key  ⇒ ns-plain-safe-in\n// [128] ns-plain-safe-out ::= ns-char\n// [129]  ns-plain-safe-in ::= ns-char - c-flow-indicator\n// [130]  ns-plain-char(c) ::=  ( ns-plain-safe(c) - “:” - “#” )\n//                            | ( /* An ns-char preceding */ “#” )\n//                            | ( “:” /* Followed by an ns-plain-safe(c) */ )\nfunction isPlainSafe(c, prev, inblock) {\n  var cIsNsCharOrWhitespace = isNsCharOrWhitespace(c);\n  var cIsNsChar = cIsNsCharOrWhitespace && !isWhitespace(c);\n  return (\n    // ns-plain-safe\n    inblock ? // c = flow-in\n      cIsNsCharOrWhitespace\n      : cIsNsCharOrWhitespace\n        // - c-flow-indicator\n        && c !== CHAR_COMMA\n        && c !== CHAR_LEFT_SQUARE_BRACKET\n        && c !== CHAR_RIGHT_SQUARE_BRACKET\n        && c !== CHAR_LEFT_CURLY_BRACKET\n        && c !== CHAR_RIGHT_CURLY_BRACKET\n  )\n    // ns-plain-char\n    && c !== CHAR_SHARP // false on '#'\n    && !(prev === CHAR_COLON && !cIsNsChar) // false on ': '\n    || (isNsCharOrWhitespace(prev) && !isWhitespace(prev) && c === CHAR_SHARP) // change to true on '[^ ]#'\n    || (prev === CHAR_COLON && cIsNsChar); // change to true on ':[^ ]'\n}\n\n// Simplified test for values allowed as the first character in plain style.\nfunction isPlainSafeFirst(c) {\n  // Uses a subset of ns-char - c-indicator\n  // where ns-char = nb-char - s-white.\n  // No support of ( ( “?” | “:” | “-” ) /* Followed by an ns-plain-safe(c)) */ ) part\n  return isPrintable(c) && c !== CHAR_BOM\n    && !isWhitespace(c) // - s-white\n    // - (c-indicator ::=\n    // “-” | “?” | “:” | “,” | “[” | “]” | “{” | “}”\n    && c !== CHAR_MINUS\n    && c !== CHAR_QUESTION\n    && c !== CHAR_COLON\n    && c !== CHAR_COMMA\n    && c !== CHAR_LEFT_SQUARE_BRACKET\n    && c !== CHAR_RIGHT_SQUARE_BRACKET\n    && c !== CHAR_LEFT_CURLY_BRACKET\n    && c !== CHAR_RIGHT_CURLY_BRACKET\n    // | “#” | “&” | “*” | “!” | “|” | “=” | “>” | “'” | “\"”\n    && c !== CHAR_SHARP\n    && c !== CHAR_AMPERSAND\n    && c !== CHAR_ASTERISK\n    && c !== CHAR_EXCLAMATION\n    && c !== CHAR_VERTICAL_LINE\n    && c !== CHAR_EQUALS\n    && c !== CHAR_GREATER_THAN\n    && c !== CHAR_SINGLE_QUOTE\n    && c !== CHAR_DOUBLE_QUOTE\n    // | “%” | “@” | “`”)\n    && c !== CHAR_PERCENT\n    && c !== CHAR_COMMERCIAL_AT\n    && c !== CHAR_GRAVE_ACCENT;\n}\n\n// Simplified test for values allowed as the last character in plain style.\nfunction isPlainSafeLast(c) {\n  // just not whitespace or colon, it will be checked to be plain character later\n  return !isWhitespace(c) && c !== CHAR_COLON;\n}\n\n// Same as 'string'.codePointAt(pos), but works in older browsers.\nfunction codePointAt(string, pos) {\n  var first = string.charCodeAt(pos), second;\n  if (first >= 0xD800 && first <= 0xDBFF && pos + 1 < string.length) {\n    second = string.charCodeAt(pos + 1);\n    if (second >= 0xDC00 && second <= 0xDFFF) {\n      // https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n      return (first - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n    }\n  }\n  return first;\n}\n\n// Determines whether block indentation indicator is required.\nfunction needIndentIndicator(string) {\n  var leadingSpaceRe = /^\\n* /;\n  return leadingSpaceRe.test(string);\n}\n\nvar STYLE_PLAIN   = 1,\n    STYLE_SINGLE  = 2,\n    STYLE_LITERAL = 3,\n    STYLE_FOLDED  = 4,\n    STYLE_DOUBLE  = 5;\n\n// Determines which scalar styles are possible and returns the preferred style.\n// lineWidth = -1 => no limit.\n// Pre-conditions: str.length > 0.\n// Post-conditions:\n//    STYLE_PLAIN or STYLE_SINGLE => no \\n are in the string.\n//    STYLE_LITERAL => no lines are suitable for folding (or lineWidth is -1).\n//    STYLE_FOLDED => a line > lineWidth and can be folded (and lineWidth != -1).\nfunction chooseScalarStyle(string, singleLineOnly, indentPerLevel, lineWidth,\n  testAmbiguousType, quotingType, forceQuotes, inblock) {\n\n  var i;\n  var char = 0;\n  var prevChar = null;\n  var hasLineBreak = false;\n  var hasFoldableLine = false; // only checked if shouldTrackWidth\n  var shouldTrackWidth = lineWidth !== -1;\n  var previousLineBreak = -1; // count the first line correctly\n  var plain = isPlainSafeFirst(codePointAt(string, 0))\n          && isPlainSafeLast(codePointAt(string, string.length - 1));\n\n  if (singleLineOnly || forceQuotes) {\n    // Case: no block styles.\n    // Check for disallowed characters to rule out plain and single.\n    for (i = 0; i < string.length; char >= 0x10000 ? i += 2 : i++) {\n      char = codePointAt(string, i);\n      if (!isPrintable(char)) {\n        return STYLE_DOUBLE;\n      }\n      plain = plain && isPlainSafe(char, prevChar, inblock);\n      prevChar = char;\n    }\n  } else {\n    // Case: block styles permitted.\n    for (i = 0; i < string.length; char >= 0x10000 ? i += 2 : i++) {\n      char = codePointAt(string, i);\n      if (char === CHAR_LINE_FEED) {\n        hasLineBreak = true;\n        // Check if any line can be folded.\n        if (shouldTrackWidth) {\n          hasFoldableLine = hasFoldableLine ||\n            // Foldable line = too long, and not more-indented.\n            (i - previousLineBreak - 1 > lineWidth &&\n             string[previousLineBreak + 1] !== ' ');\n          previousLineBreak = i;\n        }\n      } else if (!isPrintable(char)) {\n        return STYLE_DOUBLE;\n      }\n      plain = plain && isPlainSafe(char, prevChar, inblock);\n      prevChar = char;\n    }\n    // in case the end is missing a \\n\n    hasFoldableLine = hasFoldableLine || (shouldTrackWidth &&\n      (i - previousLineBreak - 1 > lineWidth &&\n       string[previousLineBreak + 1] !== ' '));\n  }\n  // Although every style can represent \\n without escaping, prefer block styles\n  // for multiline, since they're more readable and they don't add empty lines.\n  // Also prefer folding a super-long line.\n  if (!hasLineBreak && !hasFoldableLine) {\n    // Strings interpretable as another type have to be quoted;\n    // e.g. the string 'true' vs. the boolean true.\n    if (plain && !forceQuotes && !testAmbiguousType(string)) {\n      return STYLE_PLAIN;\n    }\n    return quotingType === QUOTING_TYPE_DOUBLE ? STYLE_DOUBLE : STYLE_SINGLE;\n  }\n  // Edge case: block indentation indicator can only have one digit.\n  if (indentPerLevel > 9 && needIndentIndicator(string)) {\n    return STYLE_DOUBLE;\n  }\n  // At this point we know block styles are valid.\n  // Prefer literal style unless we want to fold.\n  if (!forceQuotes) {\n    return hasFoldableLine ? STYLE_FOLDED : STYLE_LITERAL;\n  }\n  return quotingType === QUOTING_TYPE_DOUBLE ? STYLE_DOUBLE : STYLE_SINGLE;\n}\n\n// Note: line breaking/folding is implemented for only the folded style.\n// NB. We drop the last trailing newline (if any) of a returned block scalar\n//  since the dumper adds its own newline. This always works:\n//    • No ending newline => unaffected; already using strip \"-\" chomping.\n//    • Ending newline    => removed then restored.\n//  Importantly, this keeps the \"+\" chomp indicator from gaining an extra line.\nfunction writeScalar(state, string, level, iskey, inblock) {\n  state.dump = (function () {\n    if (string.length === 0) {\n      return state.quotingType === QUOTING_TYPE_DOUBLE ? '\"\"' : \"''\";\n    }\n    if (!state.noCompatMode) {\n      if (DEPRECATED_BOOLEANS_SYNTAX.indexOf(string) !== -1 || DEPRECATED_BASE60_SYNTAX.test(string)) {\n        return state.quotingType === QUOTING_TYPE_DOUBLE ? ('\"' + string + '\"') : (\"'\" + string + \"'\");\n      }\n    }\n\n    var indent = state.indent * Math.max(1, level); // no 0-indent scalars\n    // As indentation gets deeper, let the width decrease monotonically\n    // to the lower bound min(state.lineWidth, 40).\n    // Note that this implies\n    //  state.lineWidth ≤ 40 + state.indent: width is fixed at the lower bound.\n    //  state.lineWidth > 40 + state.indent: width decreases until the lower bound.\n    // This behaves better than a constant minimum width which disallows narrower options,\n    // or an indent threshold which causes the width to suddenly increase.\n    var lineWidth = state.lineWidth === -1\n      ? -1 : Math.max(Math.min(state.lineWidth, 40), state.lineWidth - indent);\n\n    // Without knowing if keys are implicit/explicit, assume implicit for safety.\n    var singleLineOnly = iskey\n      // No block styles in flow mode.\n      || (state.flowLevel > -1 && level >= state.flowLevel);\n    function testAmbiguity(string) {\n      return testImplicitResolving(state, string);\n    }\n\n    switch (chooseScalarStyle(string, singleLineOnly, state.indent, lineWidth,\n      testAmbiguity, state.quotingType, state.forceQuotes && !iskey, inblock)) {\n\n      case STYLE_PLAIN:\n        return string;\n      case STYLE_SINGLE:\n        return \"'\" + string.replace(/'/g, \"''\") + \"'\";\n      case STYLE_LITERAL:\n        return '|' + blockHeader(string, state.indent)\n          + dropEndingNewline(indentString(string, indent));\n      case STYLE_FOLDED:\n        return '>' + blockHeader(string, state.indent)\n          + dropEndingNewline(indentString(foldString(string, lineWidth), indent));\n      case STYLE_DOUBLE:\n        return '\"' + escapeString(string) + '\"';\n      default:\n        throw new exception('impossible error: invalid scalar style');\n    }\n  }());\n}\n\n// Pre-conditions: string is valid for a block scalar, 1 <= indentPerLevel <= 9.\nfunction blockHeader(string, indentPerLevel) {\n  var indentIndicator = needIndentIndicator(string) ? String(indentPerLevel) : '';\n\n  // note the special case: the string '\\n' counts as a \"trailing\" empty line.\n  var clip =          string[string.length - 1] === '\\n';\n  var keep = clip && (string[string.length - 2] === '\\n' || string === '\\n');\n  var chomp = keep ? '+' : (clip ? '' : '-');\n\n  return indentIndicator + chomp + '\\n';\n}\n\n// (See the note for writeScalar.)\nfunction dropEndingNewline(string) {\n  return string[string.length - 1] === '\\n' ? string.slice(0, -1) : string;\n}\n\n// Note: a long line without a suitable break point will exceed the width limit.\n// Pre-conditions: every char in str isPrintable, str.length > 0, width > 0.\nfunction foldString(string, width) {\n  // In folded style, $k$ consecutive newlines output as $k+1$ newlines—\n  // unless they're before or after a more-indented line, or at the very\n  // beginning or end, in which case $k$ maps to $k$.\n  // Therefore, parse each chunk as newline(s) followed by a content line.\n  var lineRe = /(\\n+)([^\\n]*)/g;\n\n  // first line (possibly an empty line)\n  var result = (function () {\n    var nextLF = string.indexOf('\\n');\n    nextLF = nextLF !== -1 ? nextLF : string.length;\n    lineRe.lastIndex = nextLF;\n    return foldLine(string.slice(0, nextLF), width);\n  }());\n  // If we haven't reached the first content line yet, don't add an extra \\n.\n  var prevMoreIndented = string[0] === '\\n' || string[0] === ' ';\n  var moreIndented;\n\n  // rest of the lines\n  var match;\n  while ((match = lineRe.exec(string))) {\n    var prefix = match[1], line = match[2];\n    moreIndented = (line[0] === ' ');\n    result += prefix\n      + (!prevMoreIndented && !moreIndented && line !== ''\n        ? '\\n' : '')\n      + foldLine(line, width);\n    prevMoreIndented = moreIndented;\n  }\n\n  return result;\n}\n\n// Greedy line breaking.\n// Picks the longest line under the limit each time,\n// otherwise settles for the shortest line over the limit.\n// NB. More-indented lines *cannot* be folded, as that would add an extra \\n.\nfunction foldLine(line, width) {\n  if (line === '' || line[0] === ' ') return line;\n\n  // Since a more-indented line adds a \\n, breaks can't be followed by a space.\n  var breakRe = / [^ ]/g; // note: the match index will always be <= length-2.\n  var match;\n  // start is an inclusive index. end, curr, and next are exclusive.\n  var start = 0, end, curr = 0, next = 0;\n  var result = '';\n\n  // Invariants: 0 <= start <= length-1.\n  //   0 <= curr <= next <= max(0, length-2). curr - start <= width.\n  // Inside the loop:\n  //   A match implies length >= 2, so curr and next are <= length-2.\n  while ((match = breakRe.exec(line))) {\n    next = match.index;\n    // maintain invariant: curr - start <= width\n    if (next - start > width) {\n      end = (curr > start) ? curr : next; // derive end <= length-2\n      result += '\\n' + line.slice(start, end);\n      // skip the space that was output as \\n\n      start = end + 1;                    // derive start <= length-1\n    }\n    curr = next;\n  }\n\n  // By the invariants, start <= length-1, so there is something left over.\n  // It is either the whole string or a part starting from non-whitespace.\n  result += '\\n';\n  // Insert a break if the remainder is too long and there is a break available.\n  if (line.length - start > width && curr > start) {\n    result += line.slice(start, curr) + '\\n' + line.slice(curr + 1);\n  } else {\n    result += line.slice(start);\n  }\n\n  return result.slice(1); // drop extra \\n joiner\n}\n\n// Escapes a double-quoted string.\nfunction escapeString(string) {\n  var result = '';\n  var char = 0;\n  var escapeSeq;\n\n  for (var i = 0; i < string.length; char >= 0x10000 ? i += 2 : i++) {\n    char = codePointAt(string, i);\n    escapeSeq = ESCAPE_SEQUENCES[char];\n\n    if (!escapeSeq && isPrintable(char)) {\n      result += string[i];\n      if (char >= 0x10000) result += string[i + 1];\n    } else {\n      result += escapeSeq || encodeHex(char);\n    }\n  }\n\n  return result;\n}\n\nfunction writeFlowSequence(state, level, object) {\n  var _result = '',\n      _tag    = state.tag,\n      index,\n      length,\n      value;\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    value = object[index];\n\n    if (state.replacer) {\n      value = state.replacer.call(object, String(index), value);\n    }\n\n    // Write only valid elements, put null instead of invalid elements.\n    if (writeNode(state, level, value, false, false) ||\n        (typeof value === 'undefined' &&\n         writeNode(state, level, null, false, false))) {\n\n      if (_result !== '') _result += ',' + (!state.condenseFlow ? ' ' : '');\n      _result += state.dump;\n    }\n  }\n\n  state.tag = _tag;\n  state.dump = '[' + _result + ']';\n}\n\nfunction writeBlockSequence(state, level, object, compact) {\n  var _result = '',\n      _tag    = state.tag,\n      index,\n      length,\n      value;\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    value = object[index];\n\n    if (state.replacer) {\n      value = state.replacer.call(object, String(index), value);\n    }\n\n    // Write only valid elements, put null instead of invalid elements.\n    if (writeNode(state, level + 1, value, true, true, false, true) ||\n        (typeof value === 'undefined' &&\n         writeNode(state, level + 1, null, true, true, false, true))) {\n\n      if (!compact || _result !== '') {\n        _result += generateNextLine(state, level);\n      }\n\n      if (state.dump && CHAR_LINE_FEED === state.dump.charCodeAt(0)) {\n        _result += '-';\n      } else {\n        _result += '- ';\n      }\n\n      _result += state.dump;\n    }\n  }\n\n  state.tag = _tag;\n  state.dump = _result || '[]'; // Empty sequence if no valid values.\n}\n\nfunction writeFlowMapping(state, level, object) {\n  var _result       = '',\n      _tag          = state.tag,\n      objectKeyList = Object.keys(object),\n      index,\n      length,\n      objectKey,\n      objectValue,\n      pairBuffer;\n\n  for (index = 0, length = objectKeyList.length; index < length; index += 1) {\n\n    pairBuffer = '';\n    if (_result !== '') pairBuffer += ', ';\n\n    if (state.condenseFlow) pairBuffer += '\"';\n\n    objectKey = objectKeyList[index];\n    objectValue = object[objectKey];\n\n    if (state.replacer) {\n      objectValue = state.replacer.call(object, objectKey, objectValue);\n    }\n\n    if (!writeNode(state, level, objectKey, false, false)) {\n      continue; // Skip this pair because of invalid key;\n    }\n\n    if (state.dump.length > 1024) pairBuffer += '? ';\n\n    pairBuffer += state.dump + (state.condenseFlow ? '\"' : '') + ':' + (state.condenseFlow ? '' : ' ');\n\n    if (!writeNode(state, level, objectValue, false, false)) {\n      continue; // Skip this pair because of invalid value.\n    }\n\n    pairBuffer += state.dump;\n\n    // Both key and value are valid.\n    _result += pairBuffer;\n  }\n\n  state.tag = _tag;\n  state.dump = '{' + _result + '}';\n}\n\nfunction writeBlockMapping(state, level, object, compact) {\n  var _result       = '',\n      _tag          = state.tag,\n      objectKeyList = Object.keys(object),\n      index,\n      length,\n      objectKey,\n      objectValue,\n      explicitPair,\n      pairBuffer;\n\n  // Allow sorting keys so that the output file is deterministic\n  if (state.sortKeys === true) {\n    // Default sorting\n    objectKeyList.sort();\n  } else if (typeof state.sortKeys === 'function') {\n    // Custom sort function\n    objectKeyList.sort(state.sortKeys);\n  } else if (state.sortKeys) {\n    // Something is wrong\n    throw new exception('sortKeys must be a boolean or a function');\n  }\n\n  for (index = 0, length = objectKeyList.length; index < length; index += 1) {\n    pairBuffer = '';\n\n    if (!compact || _result !== '') {\n      pairBuffer += generateNextLine(state, level);\n    }\n\n    objectKey = objectKeyList[index];\n    objectValue = object[objectKey];\n\n    if (state.replacer) {\n      objectValue = state.replacer.call(object, objectKey, objectValue);\n    }\n\n    if (!writeNode(state, level + 1, objectKey, true, true, true)) {\n      continue; // Skip this pair because of invalid key.\n    }\n\n    explicitPair = (state.tag !== null && state.tag !== '?') ||\n                   (state.dump && state.dump.length > 1024);\n\n    if (explicitPair) {\n      if (state.dump && CHAR_LINE_FEED === state.dump.charCodeAt(0)) {\n        pairBuffer += '?';\n      } else {\n        pairBuffer += '? ';\n      }\n    }\n\n    pairBuffer += state.dump;\n\n    if (explicitPair) {\n      pairBuffer += generateNextLine(state, level);\n    }\n\n    if (!writeNode(state, level + 1, objectValue, true, explicitPair)) {\n      continue; // Skip this pair because of invalid value.\n    }\n\n    if (state.dump && CHAR_LINE_FEED === state.dump.charCodeAt(0)) {\n      pairBuffer += ':';\n    } else {\n      pairBuffer += ': ';\n    }\n\n    pairBuffer += state.dump;\n\n    // Both key and value are valid.\n    _result += pairBuffer;\n  }\n\n  state.tag = _tag;\n  state.dump = _result || '{}'; // Empty mapping if no valid pairs.\n}\n\nfunction detectType(state, object, explicit) {\n  var _result, typeList, index, length, type, style;\n\n  typeList = explicit ? state.explicitTypes : state.implicitTypes;\n\n  for (index = 0, length = typeList.length; index < length; index += 1) {\n    type = typeList[index];\n\n    if ((type.instanceOf  || type.predicate) &&\n        (!type.instanceOf || ((typeof object === 'object') && (object instanceof type.instanceOf))) &&\n        (!type.predicate  || type.predicate(object))) {\n\n      if (explicit) {\n        if (type.multi && type.representName) {\n          state.tag = type.representName(object);\n        } else {\n          state.tag = type.tag;\n        }\n      } else {\n        state.tag = '?';\n      }\n\n      if (type.represent) {\n        style = state.styleMap[type.tag] || type.defaultStyle;\n\n        if (_toString.call(type.represent) === '[object Function]') {\n          _result = type.represent(object, style);\n        } else if (_hasOwnProperty.call(type.represent, style)) {\n          _result = type.represent[style](object, style);\n        } else {\n          throw new exception('!<' + type.tag + '> tag resolver accepts not \"' + style + '\" style');\n        }\n\n        state.dump = _result;\n      }\n\n      return true;\n    }\n  }\n\n  return false;\n}\n\n// Serializes `object` and writes it to global `result`.\n// Returns true on success, or false on invalid object.\n//\nfunction writeNode(state, level, object, block, compact, iskey, isblockseq) {\n  state.tag = null;\n  state.dump = object;\n\n  if (!detectType(state, object, false)) {\n    detectType(state, object, true);\n  }\n\n  var type = _toString.call(state.dump);\n  var inblock = block;\n  var tagStr;\n\n  if (block) {\n    block = (state.flowLevel < 0 || state.flowLevel > level);\n  }\n\n  var objectOrArray = type === '[object Object]' || type === '[object Array]',\n      duplicateIndex,\n      duplicate;\n\n  if (objectOrArray) {\n    duplicateIndex = state.duplicates.indexOf(object);\n    duplicate = duplicateIndex !== -1;\n  }\n\n  if ((state.tag !== null && state.tag !== '?') || duplicate || (state.indent !== 2 && level > 0)) {\n    compact = false;\n  }\n\n  if (duplicate && state.usedDuplicates[duplicateIndex]) {\n    state.dump = '*ref_' + duplicateIndex;\n  } else {\n    if (objectOrArray && duplicate && !state.usedDuplicates[duplicateIndex]) {\n      state.usedDuplicates[duplicateIndex] = true;\n    }\n    if (type === '[object Object]') {\n      if (block && (Object.keys(state.dump).length !== 0)) {\n        writeBlockMapping(state, level, state.dump, compact);\n        if (duplicate) {\n          state.dump = '&ref_' + duplicateIndex + state.dump;\n        }\n      } else {\n        writeFlowMapping(state, level, state.dump);\n        if (duplicate) {\n          state.dump = '&ref_' + duplicateIndex + ' ' + state.dump;\n        }\n      }\n    } else if (type === '[object Array]') {\n      if (block && (state.dump.length !== 0)) {\n        if (state.noArrayIndent && !isblockseq && level > 0) {\n          writeBlockSequence(state, level - 1, state.dump, compact);\n        } else {\n          writeBlockSequence(state, level, state.dump, compact);\n        }\n        if (duplicate) {\n          state.dump = '&ref_' + duplicateIndex + state.dump;\n        }\n      } else {\n        writeFlowSequence(state, level, state.dump);\n        if (duplicate) {\n          state.dump = '&ref_' + duplicateIndex + ' ' + state.dump;\n        }\n      }\n    } else if (type === '[object String]') {\n      if (state.tag !== '?') {\n        writeScalar(state, state.dump, level, iskey, inblock);\n      }\n    } else if (type === '[object Undefined]') {\n      return false;\n    } else {\n      if (state.skipInvalid) return false;\n      throw new exception('unacceptable kind of an object to dump ' + type);\n    }\n\n    if (state.tag !== null && state.tag !== '?') {\n      // Need to encode all characters except those allowed by the spec:\n      //\n      // [35] ns-dec-digit    ::=  [#x30-#x39] /* 0-9 */\n      // [36] ns-hex-digit    ::=  ns-dec-digit\n      //                         | [#x41-#x46] /* A-F */ | [#x61-#x66] /* a-f */\n      // [37] ns-ascii-letter ::=  [#x41-#x5A] /* A-Z */ | [#x61-#x7A] /* a-z */\n      // [38] ns-word-char    ::=  ns-dec-digit | ns-ascii-letter | “-”\n      // [39] ns-uri-char     ::=  “%” ns-hex-digit ns-hex-digit | ns-word-char | “#”\n      //                         | “;” | “/” | “?” | “:” | “@” | “&” | “=” | “+” | “$” | “,”\n      //                         | “_” | “.” | “!” | “~” | “*” | “'” | “(” | “)” | “[” | “]”\n      //\n      // Also need to encode '!' because it has special meaning (end of tag prefix).\n      //\n      tagStr = encodeURI(\n        state.tag[0] === '!' ? state.tag.slice(1) : state.tag\n      ).replace(/!/g, '%21');\n\n      if (state.tag[0] === '!') {\n        tagStr = '!' + tagStr;\n      } else if (tagStr.slice(0, 18) === 'tag:yaml.org,2002:') {\n        tagStr = '!!' + tagStr.slice(18);\n      } else {\n        tagStr = '!<' + tagStr + '>';\n      }\n\n      state.dump = tagStr + ' ' + state.dump;\n    }\n  }\n\n  return true;\n}\n\nfunction getDuplicateReferences(object, state) {\n  var objects = [],\n      duplicatesIndexes = [],\n      index,\n      length;\n\n  inspectNode(object, objects, duplicatesIndexes);\n\n  for (index = 0, length = duplicatesIndexes.length; index < length; index += 1) {\n    state.duplicates.push(objects[duplicatesIndexes[index]]);\n  }\n  state.usedDuplicates = new Array(length);\n}\n\nfunction inspectNode(object, objects, duplicatesIndexes) {\n  var objectKeyList,\n      index,\n      length;\n\n  if (object !== null && typeof object === 'object') {\n    index = objects.indexOf(object);\n    if (index !== -1) {\n      if (duplicatesIndexes.indexOf(index) === -1) {\n        duplicatesIndexes.push(index);\n      }\n    } else {\n      objects.push(object);\n\n      if (Array.isArray(object)) {\n        for (index = 0, length = object.length; index < length; index += 1) {\n          inspectNode(object[index], objects, duplicatesIndexes);\n        }\n      } else {\n        objectKeyList = Object.keys(object);\n\n        for (index = 0, length = objectKeyList.length; index < length; index += 1) {\n          inspectNode(object[objectKeyList[index]], objects, duplicatesIndexes);\n        }\n      }\n    }\n  }\n}\n\nfunction dump$1(input, options) {\n  options = options || {};\n\n  var state = new State(options);\n\n  if (!state.noRefs) getDuplicateReferences(input, state);\n\n  var value = input;\n\n  if (state.replacer) {\n    value = state.replacer.call({ '': value }, '', value);\n  }\n\n  if (writeNode(state, 0, value, true, true)) return state.dump + '\\n';\n\n  return '';\n}\n\nvar dump_1 = dump$1;\n\nvar dumper = {\n\tdump: dump_1\n};\n\nfunction renamed(from, to) {\n  return function () {\n    throw new Error('Function yaml.' + from + ' is removed in js-yaml 4. ' +\n      'Use yaml.' + to + ' instead, which is now safe by default.');\n  };\n}\n\n\nvar Type                = type;\nvar Schema              = schema;\nvar FAILSAFE_SCHEMA     = failsafe;\nvar JSON_SCHEMA         = json;\nvar CORE_SCHEMA         = core;\nvar DEFAULT_SCHEMA      = _default;\nvar load                = loader.load;\nvar loadAll             = loader.loadAll;\nvar dump                = dumper.dump;\nvar YAMLException       = exception;\n\n// Re-export all types in case user wants to create custom schema\nvar types = {\n  binary:    binary,\n  float:     float,\n  map:       map,\n  null:      _null,\n  pairs:     pairs,\n  set:       set,\n  timestamp: timestamp,\n  bool:      bool,\n  int:       int,\n  merge:     merge,\n  omap:      omap,\n  seq:       seq,\n  str:       str\n};\n\n// Removed functions from JS-YAML 3.0.x\nvar safeLoad            = renamed('safeLoad', 'load');\nvar safeLoadAll         = renamed('safeLoadAll', 'loadAll');\nvar safeDump            = renamed('safeDump', 'dump');\n\nvar jsYaml = {\n\tType: Type,\n\tSchema: Schema,\n\tFAILSAFE_SCHEMA: FAILSAFE_SCHEMA,\n\tJSON_SCHEMA: JSON_SCHEMA,\n\tCORE_SCHEMA: CORE_SCHEMA,\n\tDEFAULT_SCHEMA: DEFAULT_SCHEMA,\n\tload: load,\n\tloadAll: loadAll,\n\tdump: dump,\n\tYAMLException: YAMLException,\n\ttypes: types,\n\tsafeLoad: safeLoad,\n\tsafeLoadAll: safeLoadAll,\n\tsafeDump: safeDump\n};\n\nexport default jsYaml;\nexport { CORE_SCHEMA, DEFAULT_SCHEMA, FAILSAFE_SCHEMA, JSON_SCHEMA, Schema, Type, YAMLException, dump, load, loadAll, safeDump, safeLoad, safeLoadAll, types };\n","import type {CodeKeywordDefinition, AnySchemaObject, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, getProperty, Name} from \"../../compile/codegen\"\nimport {DiscrError, DiscrErrorObj} from \"../discriminator/types\"\nimport {resolveRef, SchemaEnv} from \"../../compile\"\nimport MissingRefError from \"../../compile/ref_error\"\nimport {schemaHasRulesButRef} from \"../../compile/util\"\n\nexport type DiscriminatorError = DiscrErrorObj<DiscrError.Tag> | DiscrErrorObj<DiscrError.Mapping>\n\nconst error: KeywordErrorDefinition = {\n  message: ({params: {discrError, tagName}}) =>\n    discrError === DiscrError.Tag\n      ? `tag \"${tagName}\" must be string`\n      : `value of tag \"${tagName}\" must be in oneOf`,\n  params: ({params: {discrError, tag, tagName}}) =>\n    _`{error: ${discrError}, tag: ${tagName}, tagValue: ${tag}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"discriminator\",\n  type: \"object\",\n  schemaType: \"object\",\n  error,\n  code(cxt: KeywordCxt) {\n    const {gen, data, schema, parentSchema, it} = cxt\n    const {oneOf} = parentSchema\n    if (!it.opts.discriminator) {\n      throw new Error(\"discriminator: requires discriminator option\")\n    }\n    const tagName = schema.propertyName\n    if (typeof tagName != \"string\") throw new Error(\"discriminator: requires propertyName\")\n    if (schema.mapping) throw new Error(\"discriminator: mapping is not supported\")\n    if (!oneOf) throw new Error(\"discriminator: requires oneOf keyword\")\n    const valid = gen.let(\"valid\", false)\n    const tag = gen.const(\"tag\", _`${data}${getProperty(tagName)}`)\n    gen.if(\n      _`typeof ${tag} == \"string\"`,\n      () => validateMapping(),\n      () => cxt.error(false, {discrError: DiscrError.Tag, tag, tagName})\n    )\n    cxt.ok(valid)\n\n    function validateMapping(): void {\n      const mapping = getMapping()\n      gen.if(false)\n      for (const tagValue in mapping) {\n        gen.elseIf(_`${tag} === ${tagValue}`)\n        gen.assign(valid, applyTagSchema(mapping[tagValue]))\n      }\n      gen.else()\n      cxt.error(false, {discrError: DiscrError.Mapping, tag, tagName})\n      gen.endIf()\n    }\n\n    function applyTagSchema(schemaProp?: number): Name {\n      const _valid = gen.name(\"valid\")\n      const schCxt = cxt.subschema({keyword: \"oneOf\", schemaProp}, _valid)\n      cxt.mergeEvaluated(schCxt, Name)\n      return _valid\n    }\n\n    function getMapping(): {[T in string]?: number} {\n      const oneOfMapping: {[T in string]?: number} = {}\n      const topRequired = hasRequired(parentSchema)\n      let tagRequired = true\n      for (let i = 0; i < oneOf.length; i++) {\n        let sch = oneOf[i]\n        if (sch?.$ref && !schemaHasRulesButRef(sch, it.self.RULES)) {\n          const ref = sch.$ref\n          sch = resolveRef.call(it.self, it.schemaEnv.root, it.baseId, ref)\n          if (sch instanceof SchemaEnv) sch = sch.schema\n          if (sch === undefined) throw new MissingRefError(it.opts.uriResolver, it.baseId, ref)\n        }\n        const propSch = sch?.properties?.[tagName]\n        if (typeof propSch != \"object\") {\n          throw new Error(\n            `discriminator: oneOf subschemas (or referenced schemas) must have \"properties/${tagName}\"`\n          )\n        }\n        tagRequired = tagRequired && (topRequired || hasRequired(sch))\n        addMappings(propSch, i)\n      }\n      if (!tagRequired) throw new Error(`discriminator: \"${tagName}\" must be required`)\n      return oneOfMapping\n\n      function hasRequired({required}: AnySchemaObject): boolean {\n        return Array.isArray(required) && required.includes(tagName)\n      }\n\n      function addMappings(sch: AnySchemaObject, i: number): void {\n        if (sch.const) {\n          addMapping(sch.const, i)\n        } else if (sch.enum) {\n          for (const tagValue of sch.enum) {\n            addMapping(tagValue, i)\n          }\n        } else {\n          throw new Error(`discriminator: \"properties/${tagName}\" must have \"const\" or \"enum\"`)\n        }\n      }\n\n      function addMapping(tagValue: unknown, i: number): void {\n        if (typeof tagValue != \"string\" || tagValue in oneOfMapping) {\n          throw new Error(`discriminator: \"${tagName}\" values must be unique strings`)\n        }\n        oneOfMapping[tagValue] = i\n      }\n    }\n  },\n}\n\nexport default def\n","import type {CodeKeywordDefinition} from \"../../types\"\nimport {validateTuple} from \"./items\"\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"prefixItems\",\n  type: \"array\",\n  schemaType: [\"array\"],\n  before: \"uniqueItems\",\n  code: (cxt) => validateTuple(cxt, \"items\"),\n}\n\nexport default def\n","import type {AnySchema} from \"../../types\"\nimport type {SchemaObjCxt} from \"..\"\nimport {_, str, getProperty, Code, Name} from \"../codegen\"\nimport {escapeFragment, getErrorPath, Type} from \"../util\"\nimport type {JSONType} from \"../rules\"\n\nexport interface SubschemaContext {\n  // TODO use Optional? align with SchemCxt property types\n  schema: AnySchema\n  schemaPath: Code\n  errSchemaPath: string\n  topSchemaRef?: Code\n  errorPath?: Code\n  dataLevel?: number\n  dataTypes?: JSONType[]\n  data?: Name\n  parentData?: Name\n  parentDataProperty?: Code | number\n  dataNames?: Name[]\n  dataPathArr?: (Code | number)[]\n  propertyName?: Name\n  jtdDiscriminator?: string\n  jtdMetadata?: boolean\n  compositeRule?: true\n  createErrors?: boolean\n  allErrors?: boolean\n}\n\nexport type SubschemaArgs = Partial<{\n  keyword: string\n  schemaProp: string | number\n  schema: AnySchema\n  schemaPath: Code\n  errSchemaPath: string\n  topSchemaRef: Code\n  data: Name | Code\n  dataProp: Code | string | number\n  dataTypes: JSONType[]\n  definedProperties: Set<string>\n  propertyName: Name\n  dataPropType: Type\n  jtdDiscriminator: string\n  jtdMetadata: boolean\n  compositeRule: true\n  createErrors: boolean\n  allErrors: boolean\n}>\n\nexport function getSubschema(\n  it: SchemaObjCxt,\n  {keyword, schemaProp, schema, schemaPath, errSchemaPath, topSchemaRef}: SubschemaArgs\n): SubschemaContext {\n  if (keyword !== undefined && schema !== undefined) {\n    throw new Error('both \"keyword\" and \"schema\" passed, only one allowed')\n  }\n\n  if (keyword !== undefined) {\n    const sch = it.schema[keyword]\n    return schemaProp === undefined\n      ? {\n          schema: sch,\n          schemaPath: _`${it.schemaPath}${getProperty(keyword)}`,\n          errSchemaPath: `${it.errSchemaPath}/${keyword}`,\n        }\n      : {\n          schema: sch[schemaProp],\n          schemaPath: _`${it.schemaPath}${getProperty(keyword)}${getProperty(schemaProp)}`,\n          errSchemaPath: `${it.errSchemaPath}/${keyword}/${escapeFragment(schemaProp)}`,\n        }\n  }\n\n  if (schema !== undefined) {\n    if (schemaPath === undefined || errSchemaPath === undefined || topSchemaRef === undefined) {\n      throw new Error('\"schemaPath\", \"errSchemaPath\" and \"topSchemaRef\" are required with \"schema\"')\n    }\n    return {\n      schema,\n      schemaPath,\n      topSchemaRef,\n      errSchemaPath,\n    }\n  }\n\n  throw new Error('either \"keyword\" or \"schema\" must be passed')\n}\n\nexport function extendSubschemaData(\n  subschema: SubschemaContext,\n  it: SchemaObjCxt,\n  {dataProp, dataPropType: dpType, data, dataTypes, propertyName}: SubschemaArgs\n): void {\n  if (data !== undefined && dataProp !== undefined) {\n    throw new Error('both \"data\" and \"dataProp\" passed, only one allowed')\n  }\n\n  const {gen} = it\n\n  if (dataProp !== undefined) {\n    const {errorPath, dataPathArr, opts} = it\n    const nextData = gen.let(\"data\", _`${it.data}${getProperty(dataProp)}`, true)\n    dataContextProps(nextData)\n    subschema.errorPath = str`${errorPath}${getErrorPath(dataProp, dpType, opts.jsPropertySyntax)}`\n    subschema.parentDataProperty = _`${dataProp}`\n    subschema.dataPathArr = [...dataPathArr, subschema.parentDataProperty]\n  }\n\n  if (data !== undefined) {\n    const nextData = data instanceof Name ? data : gen.let(\"data\", data, true) // replaceable if used once?\n    dataContextProps(nextData)\n    if (propertyName !== undefined) subschema.propertyName = propertyName\n    // TODO something is possibly wrong here with not changing parentDataProperty and not appending dataPathArr\n  }\n\n  if (dataTypes) subschema.dataTypes = dataTypes\n\n  function dataContextProps(_nextData: Name): void {\n    subschema.data = _nextData\n    subschema.dataLevel = it.dataLevel + 1\n    subschema.dataTypes = []\n    it.definedProperties = new Set<string>()\n    subschema.parentData = it.data\n    subschema.dataNames = [...it.dataNames, _nextData]\n  }\n}\n\nexport function extendSubschemaMode(\n  subschema: SubschemaContext,\n  {jtdDiscriminator, jtdMetadata, compositeRule, createErrors, allErrors}: SubschemaArgs\n): void {\n  if (compositeRule !== undefined) subschema.compositeRule = compositeRule\n  if (createErrors !== undefined) subschema.createErrors = createErrors\n  if (allErrors !== undefined) subschema.allErrors = allErrors\n  subschema.jtdDiscriminator = jtdDiscriminator // not inherited\n  subschema.jtdMetadata = jtdMetadata // not inherited\n}\n","// https://github.com/ajv-validator/ajv/issues/889\nimport * as equal from \"fast-deep-equal\"\n\ntype Equal = typeof equal & {code: string}\n;(equal as Equal).code = 'require(\"ajv/dist/runtime/equal\").default'\n\nexport default equal as Equal\n","import {_, nil, Code, Name} from \"./code\"\n\ninterface NameGroup {\n  prefix: string\n  index: number\n}\n\nexport interface NameValue {\n  ref: ValueReference // this is the reference to any value that can be referred to from generated code via `globals` var in the closure\n  key?: unknown // any key to identify a global to avoid duplicates, if not passed ref is used\n  code?: Code // this is the code creating the value needed for standalone code wit_out closure - can be a primitive value, function or import (`require`)\n}\n\nexport type ValueReference = unknown // possibly make CodeGen parameterized type on this type\n\nclass ValueError extends Error {\n  readonly value?: NameValue\n  constructor(name: ValueScopeName) {\n    super(`CodeGen: \"code\" for ${name} not defined`)\n    this.value = name.value\n  }\n}\n\ninterface ScopeOptions {\n  prefixes?: Set<string>\n  parent?: Scope\n}\n\ninterface ValueScopeOptions extends ScopeOptions {\n  scope: ScopeStore\n  es5?: boolean\n  lines?: boolean\n}\n\nexport type ScopeStore = Record<string, ValueReference[] | undefined>\n\ntype ScopeValues = {\n  [Prefix in string]?: Map<unknown, ValueScopeName>\n}\n\nexport type ScopeValueSets = {\n  [Prefix in string]?: Set<ValueScopeName>\n}\n\nexport enum UsedValueState {\n  Started,\n  Completed,\n}\n\nexport type UsedScopeValues = {\n  [Prefix in string]?: Map<ValueScopeName, UsedValueState | undefined>\n}\n\nexport const varKinds = {\n  const: new Name(\"const\"),\n  let: new Name(\"let\"),\n  var: new Name(\"var\"),\n}\n\nexport class Scope {\n  protected readonly _names: {[Prefix in string]?: NameGroup} = {}\n  protected readonly _prefixes?: Set<string>\n  protected readonly _parent?: Scope\n\n  constructor({prefixes, parent}: ScopeOptions = {}) {\n    this._prefixes = prefixes\n    this._parent = parent\n  }\n\n  toName(nameOrPrefix: Name | string): Name {\n    return nameOrPrefix instanceof Name ? nameOrPrefix : this.name(nameOrPrefix)\n  }\n\n  name(prefix: string): Name {\n    return new Name(this._newName(prefix))\n  }\n\n  protected _newName(prefix: string): string {\n    const ng = this._names[prefix] || this._nameGroup(prefix)\n    return `${prefix}${ng.index++}`\n  }\n\n  private _nameGroup(prefix: string): NameGroup {\n    if (this._parent?._prefixes?.has(prefix) || (this._prefixes && !this._prefixes.has(prefix))) {\n      throw new Error(`CodeGen: prefix \"${prefix}\" is not allowed in this scope`)\n    }\n    return (this._names[prefix] = {prefix, index: 0})\n  }\n}\n\ninterface ScopePath {\n  property: string\n  itemIndex: number\n}\n\nexport class ValueScopeName extends Name {\n  readonly prefix: string\n  value?: NameValue\n  scopePath?: Code\n\n  constructor(prefix: string, nameStr: string) {\n    super(nameStr)\n    this.prefix = prefix\n  }\n\n  setValue(value: NameValue, {property, itemIndex}: ScopePath): void {\n    this.value = value\n    this.scopePath = _`.${new Name(property)}[${itemIndex}]`\n  }\n}\n\ninterface VSOptions extends ValueScopeOptions {\n  _n: Code\n}\n\nconst line = _`\\n`\n\nexport class ValueScope extends Scope {\n  protected readonly _values: ScopeValues = {}\n  protected readonly _scope: ScopeStore\n  readonly opts: VSOptions\n\n  constructor(opts: ValueScopeOptions) {\n    super(opts)\n    this._scope = opts.scope\n    this.opts = {...opts, _n: opts.lines ? line : nil}\n  }\n\n  get(): ScopeStore {\n    return this._scope\n  }\n\n  name(prefix: string): ValueScopeName {\n    return new ValueScopeName(prefix, this._newName(prefix))\n  }\n\n  value(nameOrPrefix: ValueScopeName | string, value: NameValue): ValueScopeName {\n    if (value.ref === undefined) throw new Error(\"CodeGen: ref must be passed in value\")\n    const name = this.toName(nameOrPrefix) as ValueScopeName\n    const {prefix} = name\n    const valueKey = value.key ?? value.ref\n    let vs = this._values[prefix]\n    if (vs) {\n      const _name = vs.get(valueKey)\n      if (_name) return _name\n    } else {\n      vs = this._values[prefix] = new Map()\n    }\n    vs.set(valueKey, name)\n\n    const s = this._scope[prefix] || (this._scope[prefix] = [])\n    const itemIndex = s.length\n    s[itemIndex] = value.ref\n    name.setValue(value, {property: prefix, itemIndex})\n    return name\n  }\n\n  getValue(prefix: string, keyOrRef: unknown): ValueScopeName | undefined {\n    const vs = this._values[prefix]\n    if (!vs) return\n    return vs.get(keyOrRef)\n  }\n\n  scopeRefs(scopeName: Name, values: ScopeValues | ScopeValueSets = this._values): Code {\n    return this._reduceValues(values, (name: ValueScopeName) => {\n      if (name.scopePath === undefined) throw new Error(`CodeGen: name \"${name}\" has no value`)\n      return _`${scopeName}${name.scopePath}`\n    })\n  }\n\n  scopeCode(\n    values: ScopeValues | ScopeValueSets = this._values,\n    usedValues?: UsedScopeValues,\n    getCode?: (n: ValueScopeName) => Code | undefined\n  ): Code {\n    return this._reduceValues(\n      values,\n      (name: ValueScopeName) => {\n        if (name.value === undefined) throw new Error(`CodeGen: name \"${name}\" has no value`)\n        return name.value.code\n      },\n      usedValues,\n      getCode\n    )\n  }\n\n  private _reduceValues(\n    values: ScopeValues | ScopeValueSets,\n    valueCode: (n: ValueScopeName) => Code | undefined,\n    usedValues: UsedScopeValues = {},\n    getCode?: (n: ValueScopeName) => Code | undefined\n  ): Code {\n    let code: Code = nil\n    for (const prefix in values) {\n      const vs = values[prefix]\n      if (!vs) continue\n      const nameSet = (usedValues[prefix] = usedValues[prefix] || new Map())\n      vs.forEach((name: ValueScopeName) => {\n        if (nameSet.has(name)) return\n        nameSet.set(name, UsedValueState.Started)\n        let c = valueCode(name)\n        if (c) {\n          const def = this.opts.es5 ? varKinds.var : varKinds.const\n          code = _`${code}${def} ${name} = ${c};${this.opts._n}`\n        } else if ((c = getCode?.(name))) {\n          code = _`${code}${c}${this.opts._n}`\n        } else {\n          throw new ValueError(name)\n        }\n        nameSet.set(name, UsedValueState.Completed)\n      })\n    }\n    return code\n  }\n}\n","import type {CodeKeywordDefinition, AnySchema, AnySchemaObject} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_} from \"../../compile/codegen\"\nimport {alwaysValidSchema, mergeEvaluated, checkStrictMode} from \"../../compile/util\"\nimport {validateArray} from \"../code\"\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"items\",\n  type: \"array\",\n  schemaType: [\"object\", \"array\", \"boolean\"],\n  before: \"uniqueItems\",\n  code(cxt: KeywordCxt) {\n    const {schema, it} = cxt\n    if (Array.isArray(schema)) return validateTuple(cxt, \"additionalItems\", schema)\n    it.items = true\n    if (alwaysValidSchema(it, schema)) return\n    cxt.ok(validateArray(cxt))\n  },\n}\n\nexport function validateTuple(\n  cxt: KeywordCxt,\n  extraItems: string,\n  schArr: AnySchema[] = cxt.schema\n): void {\n  const {gen, parentSchema, data, keyword, it} = cxt\n  checkStrictTuple(parentSchema)\n  if (it.opts.unevaluated && schArr.length && it.items !== true) {\n    it.items = mergeEvaluated.items(gen, schArr.length, it.items)\n  }\n  const valid = gen.name(\"valid\")\n  const len = gen.const(\"len\", _`${data}.length`)\n  schArr.forEach((sch: AnySchema, i: number) => {\n    if (alwaysValidSchema(it, sch)) return\n    gen.if(_`${len} > ${i}`, () =>\n      cxt.subschema(\n        {\n          keyword,\n          schemaProp: i,\n          dataProp: i,\n        },\n        valid\n      )\n    )\n    cxt.ok(valid)\n  })\n\n  function checkStrictTuple(sch: AnySchemaObject): void {\n    const {opts, errSchemaPath} = it\n    const l = schArr.length\n    const fullTuple = l === sch.minItems && (l === sch.maxItems || sch[extraItems] === false)\n    if (opts.strictTuples && !fullTuple) {\n      const msg = `\"${keyword}\" is ${l}-tuple, but minItems or maxItems/${extraItems} are not specified or different at path \"${errSchemaPath}\"`\n      checkStrictMode(it, msg, opts.strictTuples)\n    }\n  }\n}\n\nexport default def\n","import type {CodeKeywordDefinition, ErrorNoParams, AnySchema} from \"../../types\"\nimport {validateUnion} from \"../code\"\n\nexport type AnyOfError = ErrorNoParams<\"anyOf\", AnySchema[]>\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"anyOf\",\n  schemaType: \"array\",\n  trackErrors: true,\n  code: validateUnion,\n  error: {message: \"must match a schema in anyOf\"},\n}\n\nexport default def\n","import type {CodeKeywordDefinition, ErrorObject, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str} from \"../../compile/codegen\"\n\nexport type MultipleOfError = ErrorObject<\n  \"multipleOf\",\n  {multipleOf: number},\n  number | {$data: string}\n>\n\nconst error: KeywordErrorDefinition = {\n  message: ({schemaCode}) => str`must be multiple of ${schemaCode}`,\n  params: ({schemaCode}) => _`{multipleOf: ${schemaCode}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"multipleOf\",\n  type: \"number\",\n  schemaType: \"number\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {gen, data, schemaCode, it} = cxt\n    // const bdt = bad$DataType(schemaCode, <string>def.schemaType, $data)\n    const prec = it.opts.multipleOfPrecision\n    const res = gen.let(\"res\")\n    const invalid = prec\n      ? _`Math.abs(Math.round(${res}) - ${res}) > 1e-${prec}`\n      : _`${res} !== parseInt(${res})`\n    cxt.fail$data(_`(${schemaCode} === 0 || (${res} = ${data}/${schemaCode}, ${invalid}))`)\n  },\n}\n\nexport default def\n","import type {AddedKeywordDefinition} from \"../types\"\n\nconst _jsonTypes = [\"string\", \"number\", \"integer\", \"boolean\", \"null\", \"object\", \"array\"] as const\n\nexport type JSONType = (typeof _jsonTypes)[number]\n\nconst jsonTypes: Set<string> = new Set(_jsonTypes)\n\nexport function isJSONType(x: unknown): x is JSONType {\n  return typeof x == \"string\" && jsonTypes.has(x)\n}\n\ntype ValidationTypes = {\n  [K in JSONType]: boolean | RuleGroup | undefined\n}\n\nexport interface ValidationRules {\n  rules: RuleGroup[]\n  post: RuleGroup\n  all: {[Key in string]?: boolean | Rule} // rules that have to be validated\n  keywords: {[Key in string]?: boolean} // all known keywords (superset of \"all\")\n  types: ValidationTypes\n}\n\nexport interface RuleGroup {\n  type?: JSONType\n  rules: Rule[]\n}\n\n// This interface wraps KeywordDefinition because definition can have multiple keywords\nexport interface Rule {\n  keyword: string\n  definition: AddedKeywordDefinition\n}\n\nexport function getRules(): ValidationRules {\n  const groups: Record<\"number\" | \"string\" | \"array\" | \"object\", RuleGroup> = {\n    number: {type: \"number\", rules: []},\n    string: {type: \"string\", rules: []},\n    array: {type: \"array\", rules: []},\n    object: {type: \"object\", rules: []},\n  }\n  return {\n    types: {...groups, integer: true, boolean: true, null: true},\n    rules: [{rules: []}, groups.number, groups.string, groups.array, groups.object],\n    post: {rules: []},\n    all: {},\n    keywords: {},\n  }\n}\n","import type {CodeKeywordDefinition, ErrorObject, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, or, Name, Code} from \"../../compile/codegen\"\nimport {useFunc} from \"../../compile/util\"\nimport equal from \"../../runtime/equal\"\n\nexport type EnumError = ErrorObject<\"enum\", {allowedValues: any[]}, any[] | {$data: string}>\n\nconst error: KeywordErrorDefinition = {\n  message: \"must be equal to one of the allowed values\",\n  params: ({schemaCode}) => _`{allowedValues: ${schemaCode}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"enum\",\n  schemaType: \"array\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {gen, data, $data, schema, schemaCode, it} = cxt\n    if (!$data && schema.length === 0) throw new Error(\"enum must have non-empty array\")\n    const useLoop = schema.length >= it.opts.loopEnum\n    let eql: Name | undefined\n    const getEql = (): Name => (eql ??= useFunc(gen, equal))\n\n    let valid: Code\n    if (useLoop || $data) {\n      valid = gen.let(\"valid\")\n      cxt.block$data(valid, loopEnum)\n    } else {\n      /* istanbul ignore if */\n      if (!Array.isArray(schema)) throw new Error(\"ajv implementation error\")\n      const vSchema = gen.const(\"vSchema\", schemaCode)\n      valid = or(...schema.map((_x: unknown, i: number) => equalCode(vSchema, i)))\n    }\n    cxt.pass(valid)\n\n    function loopEnum(): void {\n      gen.assign(valid, false)\n      gen.forOf(\"v\", schemaCode as Code, (v) =>\n        gen.if(_`${getEql()}(${data}, ${v})`, () => gen.assign(valid, true).break())\n      )\n    }\n\n    function equalCode(vSchema: Name, i: number): Code {\n      const sch = schema[i]\n      return typeof sch === \"object\" && sch !== null\n        ? _`${getEql()}(${data}, ${vSchema}[${i}])`\n        : _`${data} === ${sch}`\n    }\n  },\n}\n\nexport default def\n","'use strict';\n\nvar traverse = module.exports = function (schema, opts, cb) {\n  // Legacy support for v0.3.1 and earlier.\n  if (typeof opts == 'function') {\n    cb = opts;\n    opts = {};\n  }\n\n  cb = opts.cb || cb;\n  var pre = (typeof cb == 'function') ? cb : cb.pre || function() {};\n  var post = cb.post || function() {};\n\n  _traverse(opts, pre, post, schema, '', schema);\n};\n\n\ntraverse.keywords = {\n  additionalItems: true,\n  items: true,\n  contains: true,\n  additionalProperties: true,\n  propertyNames: true,\n  not: true,\n  if: true,\n  then: true,\n  else: true\n};\n\ntraverse.arrayKeywords = {\n  items: true,\n  allOf: true,\n  anyOf: true,\n  oneOf: true\n};\n\ntraverse.propsKeywords = {\n  $defs: true,\n  definitions: true,\n  properties: true,\n  patternProperties: true,\n  dependencies: true\n};\n\ntraverse.skipKeywords = {\n  default: true,\n  enum: true,\n  const: true,\n  required: true,\n  maximum: true,\n  minimum: true,\n  exclusiveMaximum: true,\n  exclusiveMinimum: true,\n  multipleOf: true,\n  maxLength: true,\n  minLength: true,\n  pattern: true,\n  format: true,\n  maxItems: true,\n  minItems: true,\n  uniqueItems: true,\n  maxProperties: true,\n  minProperties: true\n};\n\n\nfunction _traverse(opts, pre, post, schema, jsonPtr, rootSchema, parentJsonPtr, parentKeyword, parentSchema, keyIndex) {\n  if (schema && typeof schema == 'object' && !Array.isArray(schema)) {\n    pre(schema, jsonPtr, rootSchema, parentJsonPtr, parentKeyword, parentSchema, keyIndex);\n    for (var key in schema) {\n      var sch = schema[key];\n      if (Array.isArray(sch)) {\n        if (key in traverse.arrayKeywords) {\n          for (var i=0; i<sch.length; i++)\n            _traverse(opts, pre, post, sch[i], jsonPtr + '/' + key + '/' + i, rootSchema, jsonPtr, key, schema, i);\n        }\n      } else if (key in traverse.propsKeywords) {\n        if (sch && typeof sch == 'object') {\n          for (var prop in sch)\n            _traverse(opts, pre, post, sch[prop], jsonPtr + '/' + key + '/' + escapeJsonPtr(prop), rootSchema, jsonPtr, key, schema, prop);\n        }\n      } else if (key in traverse.keywords || (opts.allKeys && !(key in traverse.skipKeywords))) {\n        _traverse(opts, pre, post, sch, jsonPtr + '/' + key, rootSchema, jsonPtr, key, schema);\n      }\n    }\n    post(schema, jsonPtr, rootSchema, parentJsonPtr, parentKeyword, parentSchema, keyIndex);\n  }\n}\n\n\nfunction escapeJsonPtr(str) {\n  return str.replace(/~/g, '~0').replace(/\\//g, '~1');\n}\n","import type {CodeKeywordDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {allSchemaProperties, usePattern} from \"../code\"\nimport {_, not, Name} from \"../../compile/codegen\"\nimport {alwaysValidSchema, checkStrictMode} from \"../../compile/util\"\nimport {evaluatedPropsToName, Type} from \"../../compile/util\"\nimport {AnySchema} from \"../../types\"\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"patternProperties\",\n  type: \"object\",\n  schemaType: \"object\",\n  code(cxt: KeywordCxt) {\n    const {gen, schema, data, parentSchema, it} = cxt\n    const {opts} = it\n    const patterns = allSchemaProperties(schema)\n    const alwaysValidPatterns = patterns.filter((p) =>\n      alwaysValidSchema(it, schema[p] as AnySchema)\n    )\n\n    if (\n      patterns.length === 0 ||\n      (alwaysValidPatterns.length === patterns.length &&\n        (!it.opts.unevaluated || it.props === true))\n    ) {\n      return\n    }\n\n    const checkProperties =\n      opts.strictSchema && !opts.allowMatchingProperties && parentSchema.properties\n    const valid = gen.name(\"valid\")\n    if (it.props !== true && !(it.props instanceof Name)) {\n      it.props = evaluatedPropsToName(gen, it.props)\n    }\n    const {props} = it\n    validatePatternProperties()\n\n    function validatePatternProperties(): void {\n      for (const pat of patterns) {\n        if (checkProperties) checkMatchingProperties(pat)\n        if (it.allErrors) {\n          validateProperties(pat)\n        } else {\n          gen.var(valid, true) // TODO var\n          validateProperties(pat)\n          gen.if(valid)\n        }\n      }\n    }\n\n    function checkMatchingProperties(pat: string): void {\n      for (const prop in checkProperties) {\n        if (new RegExp(pat).test(prop)) {\n          checkStrictMode(\n            it,\n            `property ${prop} matches pattern ${pat} (use allowMatchingProperties)`\n          )\n        }\n      }\n    }\n\n    function validateProperties(pat: string): void {\n      gen.forIn(\"key\", data, (key) => {\n        gen.if(_`${usePattern(cxt, pat)}.test(${key})`, () => {\n          const alwaysValid = alwaysValidPatterns.includes(pat)\n          if (!alwaysValid) {\n            cxt.subschema(\n              {\n                keyword: \"patternProperties\",\n                schemaProp: pat,\n                dataProp: key,\n                dataPropType: Type.Str,\n              },\n              valid\n            )\n          }\n\n          if (it.opts.unevaluated && props !== true) {\n            gen.assign(_`${props}[${key}]`, true)\n          } else if (!alwaysValid && !it.allErrors) {\n            // can short-circuit if `unevaluatedProperties` is not supported (opts.next === false)\n            // or if all properties were evaluated (props === true)\n            gen.if(not(valid), () => gen.break())\n          }\n        })\n      })\n    }\n  },\n}\n\nexport default def\n","import type {\n  CodeKeywordDefinition,\n  KeywordErrorDefinition,\n  ErrorObject,\n  AnySchema,\n} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str} from \"../../compile/codegen\"\nimport {alwaysValidSchema} from \"../../compile/util\"\nimport {validateArray} from \"../code\"\nimport {validateAdditionalItems} from \"./additionalItems\"\n\nexport type ItemsError = ErrorObject<\"items\", {limit: number}, AnySchema>\n\nconst error: KeywordErrorDefinition = {\n  message: ({params: {len}}) => str`must NOT have more than ${len} items`,\n  params: ({params: {len}}) => _`{limit: ${len}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"items\",\n  type: \"array\",\n  schemaType: [\"object\", \"boolean\"],\n  before: \"uniqueItems\",\n  error,\n  code(cxt: KeywordCxt) {\n    const {schema, parentSchema, it} = cxt\n    const {prefixItems} = parentSchema\n    it.items = true\n    if (alwaysValidSchema(it, schema)) return\n    if (prefixItems) validateAdditionalItems(cxt, prefixItems)\n    else cxt.ok(validateArray(cxt))\n  },\n}\n\nexport default def\n","import type {AnySchema, SchemaMap} from \"../types\"\nimport type {SchemaCxt} from \"../compile\"\nimport type {KeywordCxt} from \"../compile/validate\"\nimport {CodeGen, _, and, or, not, nil, strConcat, getProperty, Code, Name} from \"../compile/codegen\"\nimport {alwaysValidSchema, Type} from \"../compile/util\"\nimport N from \"../compile/names\"\nimport {useFunc} from \"../compile/util\"\nexport function checkReportMissingProp(cxt: KeywordCxt, prop: string): void {\n  const {gen, data, it} = cxt\n  gen.if(noPropertyInData(gen, data, prop, it.opts.ownProperties), () => {\n    cxt.setParams({missingProperty: _`${prop}`}, true)\n    cxt.error()\n  })\n}\n\nexport function checkMissingProp(\n  {gen, data, it: {opts}}: KeywordCxt,\n  properties: string[],\n  missing: Name\n): Code {\n  return or(\n    ...properties.map((prop) =>\n      and(noPropertyInData(gen, data, prop, opts.ownProperties), _`${missing} = ${prop}`)\n    )\n  )\n}\n\nexport function reportMissingProp(cxt: KeywordCxt, missing: Name): void {\n  cxt.setParams({missingProperty: missing}, true)\n  cxt.error()\n}\n\nexport function hasPropFunc(gen: CodeGen): Name {\n  return gen.scopeValue(\"func\", {\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    ref: Object.prototype.hasOwnProperty,\n    code: _`Object.prototype.hasOwnProperty`,\n  })\n}\n\nexport function isOwnProperty(gen: CodeGen, data: Name, property: Name | string): Code {\n  return _`${hasPropFunc(gen)}.call(${data}, ${property})`\n}\n\nexport function propertyInData(\n  gen: CodeGen,\n  data: Name,\n  property: Name | string,\n  ownProperties?: boolean\n): Code {\n  const cond = _`${data}${getProperty(property)} !== undefined`\n  return ownProperties ? _`${cond} && ${isOwnProperty(gen, data, property)}` : cond\n}\n\nexport function noPropertyInData(\n  gen: CodeGen,\n  data: Name,\n  property: Name | string,\n  ownProperties?: boolean\n): Code {\n  const cond = _`${data}${getProperty(property)} === undefined`\n  return ownProperties ? or(cond, not(isOwnProperty(gen, data, property))) : cond\n}\n\nexport function allSchemaProperties(schemaMap?: SchemaMap): string[] {\n  return schemaMap ? Object.keys(schemaMap).filter((p) => p !== \"__proto__\") : []\n}\n\nexport function schemaProperties(it: SchemaCxt, schemaMap: SchemaMap): string[] {\n  return allSchemaProperties(schemaMap).filter(\n    (p) => !alwaysValidSchema(it, schemaMap[p] as AnySchema)\n  )\n}\n\nexport function callValidateCode(\n  {schemaCode, data, it: {gen, topSchemaRef, schemaPath, errorPath}, it}: KeywordCxt,\n  func: Code,\n  context: Code,\n  passSchema?: boolean\n): Code {\n  const dataAndSchema = passSchema ? _`${schemaCode}, ${data}, ${topSchemaRef}${schemaPath}` : data\n  const valCxt: [Name, Code | number][] = [\n    [N.instancePath, strConcat(N.instancePath, errorPath)],\n    [N.parentData, it.parentData],\n    [N.parentDataProperty, it.parentDataProperty],\n    [N.rootData, N.rootData],\n  ]\n  if (it.opts.dynamicRef) valCxt.push([N.dynamicAnchors, N.dynamicAnchors])\n  const args = _`${dataAndSchema}, ${gen.object(...valCxt)}`\n  return context !== nil ? _`${func}.call(${context}, ${args})` : _`${func}(${args})`\n}\n\nconst newRegExp = _`new RegExp`\n\nexport function usePattern({gen, it: {opts}}: KeywordCxt, pattern: string): Name {\n  const u = opts.unicodeRegExp ? \"u\" : \"\"\n  const {regExp} = opts.code\n  const rx = regExp(pattern, u)\n\n  return gen.scopeValue(\"pattern\", {\n    key: rx.toString(),\n    ref: rx,\n    code: _`${regExp.code === \"new RegExp\" ? newRegExp : useFunc(gen, regExp)}(${pattern}, ${u})`,\n  })\n}\n\nexport function validateArray(cxt: KeywordCxt): Name {\n  const {gen, data, keyword, it} = cxt\n  const valid = gen.name(\"valid\")\n  if (it.allErrors) {\n    const validArr = gen.let(\"valid\", true)\n    validateItems(() => gen.assign(validArr, false))\n    return validArr\n  }\n  gen.var(valid, true)\n  validateItems(() => gen.break())\n  return valid\n\n  function validateItems(notValid: () => void): void {\n    const len = gen.const(\"len\", _`${data}.length`)\n    gen.forRange(\"i\", 0, len, (i) => {\n      cxt.subschema(\n        {\n          keyword,\n          dataProp: i,\n          dataPropType: Type.Num,\n        },\n        valid\n      )\n      gen.if(not(valid), notValid)\n    })\n  }\n}\n\nexport function validateUnion(cxt: KeywordCxt): void {\n  const {gen, schema, keyword, it} = cxt\n  /* istanbul ignore if */\n  if (!Array.isArray(schema)) throw new Error(\"ajv implementation error\")\n  const alwaysValid = schema.some((sch: AnySchema) => alwaysValidSchema(it, sch))\n  if (alwaysValid && !it.opts.unevaluated) return\n\n  const valid = gen.let(\"valid\", false)\n  const schValid = gen.name(\"_valid\")\n\n  gen.block(() =>\n    schema.forEach((_sch: AnySchema, i: number) => {\n      const schCxt = cxt.subschema(\n        {\n          keyword,\n          schemaProp: i,\n          compositeRule: true,\n        },\n        schValid\n      )\n      gen.assign(valid, _`${valid} || ${schValid}`)\n      const merged = cxt.mergeValidEvaluated(schCxt, schValid)\n      // can short-circuit if `unevaluatedProperties/Items` not supported (opts.unevaluated !== true)\n      // or if all properties and items were evaluated (it.props === true && it.items === true)\n      if (!merged) gen.if(not(valid))\n    })\n  )\n\n  cxt.result(\n    valid,\n    () => cxt.reset(),\n    () => cxt.error(true)\n  )\n}\n","import type {CodeKeywordDefinition, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str, operators} from \"../../compile/codegen\"\n\nconst error: KeywordErrorDefinition = {\n  message({keyword, schemaCode}) {\n    const comp = keyword === \"maxItems\" ? \"more\" : \"fewer\"\n    return str`must NOT have ${comp} than ${schemaCode} items`\n  },\n  params: ({schemaCode}) => _`{limit: ${schemaCode}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: [\"maxItems\", \"minItems\"],\n  type: \"array\",\n  schemaType: \"number\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {keyword, data, schemaCode} = cxt\n    const op = keyword === \"maxItems\" ? operators.GT : operators.LT\n    cxt.fail$data(_`${data}.length ${op} ${schemaCode}`)\n  },\n}\n\nexport default def\n","/* eslint-disable no-bitwise */\n\nconst decodeCache = {}\n\nfunction getDecodeCache (exclude) {\n  let cache = decodeCache[exclude]\n  if (cache) { return cache }\n\n  cache = decodeCache[exclude] = []\n\n  for (let i = 0; i < 128; i++) {\n    const ch = String.fromCharCode(i)\n    cache.push(ch)\n  }\n\n  for (let i = 0; i < exclude.length; i++) {\n    const ch = exclude.charCodeAt(i)\n    cache[ch] = '%' + ('0' + ch.toString(16).toUpperCase()).slice(-2)\n  }\n\n  return cache\n}\n\n// Decode percent-encoded string.\n//\nfunction decode (string, exclude) {\n  if (typeof exclude !== 'string') {\n    exclude = decode.defaultChars\n  }\n\n  const cache = getDecodeCache(exclude)\n\n  return string.replace(/(%[a-f0-9]{2})+/gi, function (seq) {\n    let result = ''\n\n    for (let i = 0, l = seq.length; i < l; i += 3) {\n      const b1 = parseInt(seq.slice(i + 1, i + 3), 16)\n\n      if (b1 < 0x80) {\n        result += cache[b1]\n        continue\n      }\n\n      if ((b1 & 0xE0) === 0xC0 && (i + 3 < l)) {\n        // 110xxxxx 10xxxxxx\n        const b2 = parseInt(seq.slice(i + 4, i + 6), 16)\n\n        if ((b2 & 0xC0) === 0x80) {\n          const chr = ((b1 << 6) & 0x7C0) | (b2 & 0x3F)\n\n          if (chr < 0x80) {\n            result += '\\ufffd\\ufffd'\n          } else {\n            result += String.fromCharCode(chr)\n          }\n\n          i += 3\n          continue\n        }\n      }\n\n      if ((b1 & 0xF0) === 0xE0 && (i + 6 < l)) {\n        // 1110xxxx 10xxxxxx 10xxxxxx\n        const b2 = parseInt(seq.slice(i + 4, i + 6), 16)\n        const b3 = parseInt(seq.slice(i + 7, i + 9), 16)\n\n        if ((b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80) {\n          const chr = ((b1 << 12) & 0xF000) | ((b2 << 6) & 0xFC0) | (b3 & 0x3F)\n\n          if (chr < 0x800 || (chr >= 0xD800 && chr <= 0xDFFF)) {\n            result += '\\ufffd\\ufffd\\ufffd'\n          } else {\n            result += String.fromCharCode(chr)\n          }\n\n          i += 6\n          continue\n        }\n      }\n\n      if ((b1 & 0xF8) === 0xF0 && (i + 9 < l)) {\n        // 111110xx 10xxxxxx 10xxxxxx 10xxxxxx\n        const b2 = parseInt(seq.slice(i + 4, i + 6), 16)\n        const b3 = parseInt(seq.slice(i + 7, i + 9), 16)\n        const b4 = parseInt(seq.slice(i + 10, i + 12), 16)\n\n        if ((b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80 && (b4 & 0xC0) === 0x80) {\n          let chr = ((b1 << 18) & 0x1C0000) | ((b2 << 12) & 0x3F000) | ((b3 << 6) & 0xFC0) | (b4 & 0x3F)\n\n          if (chr < 0x10000 || chr > 0x10FFFF) {\n            result += '\\ufffd\\ufffd\\ufffd\\ufffd'\n          } else {\n            chr -= 0x10000\n            result += String.fromCharCode(0xD800 + (chr >> 10), 0xDC00 + (chr & 0x3FF))\n          }\n\n          i += 9\n          continue\n        }\n      }\n\n      result += '\\ufffd'\n    }\n\n    return result\n  })\n}\n\ndecode.defaultChars = ';/?:@&=+$,#'\ndecode.componentChars = ''\n\nexport default decode\n","const encodeCache = {}\n\n// Create a lookup array where anything but characters in `chars` string\n// and alphanumeric chars is percent-encoded.\n//\nfunction getEncodeCache (exclude) {\n  let cache = encodeCache[exclude]\n  if (cache) { return cache }\n\n  cache = encodeCache[exclude] = []\n\n  for (let i = 0; i < 128; i++) {\n    const ch = String.fromCharCode(i)\n\n    if (/^[0-9a-z]$/i.test(ch)) {\n      // always allow unencoded alphanumeric characters\n      cache.push(ch)\n    } else {\n      cache.push('%' + ('0' + i.toString(16).toUpperCase()).slice(-2))\n    }\n  }\n\n  for (let i = 0; i < exclude.length; i++) {\n    cache[exclude.charCodeAt(i)] = exclude[i]\n  }\n\n  return cache\n}\n\n// Encode unsafe characters with percent-encoding, skipping already\n// encoded sequences.\n//\n//  - string       - string to encode\n//  - exclude      - list of characters to ignore (in addition to a-zA-Z0-9)\n//  - keepEscaped  - don't encode '%' in a correct escape sequence (default: true)\n//\nfunction encode (string, exclude, keepEscaped) {\n  if (typeof exclude !== 'string') {\n    // encode(string, keepEscaped)\n    keepEscaped = exclude\n    exclude = encode.defaultChars\n  }\n\n  if (typeof keepEscaped === 'undefined') {\n    keepEscaped = true\n  }\n\n  const cache = getEncodeCache(exclude)\n  let result = ''\n\n  for (let i = 0, l = string.length; i < l; i++) {\n    const code = string.charCodeAt(i)\n\n    if (keepEscaped && code === 0x25 /* % */ && i + 2 < l) {\n      if (/^[0-9a-f]{2}$/i.test(string.slice(i + 1, i + 3))) {\n        result += string.slice(i, i + 3)\n        i += 2\n        continue\n      }\n    }\n\n    if (code < 128) {\n      result += cache[code]\n      continue\n    }\n\n    if (code >= 0xD800 && code <= 0xDFFF) {\n      if (code >= 0xD800 && code <= 0xDBFF && i + 1 < l) {\n        const nextCode = string.charCodeAt(i + 1)\n        if (nextCode >= 0xDC00 && nextCode <= 0xDFFF) {\n          result += encodeURIComponent(string[i] + string[i + 1])\n          i++\n          continue\n        }\n      }\n      result += '%EF%BF%BD'\n      continue\n    }\n\n    result += encodeURIComponent(string[i])\n  }\n\n  return result\n}\n\nencode.defaultChars = \";/?:@&=+$,-_.!~*'()#\"\nencode.componentChars = \"-_.!~*'()\"\n\nexport default encode\n","export default function format (url) {\n  let result = ''\n\n  result += url.protocol || ''\n  result += url.slashes ? '//' : ''\n  result += url.auth ? url.auth + '@' : ''\n\n  if (url.hostname && url.hostname.indexOf(':') !== -1) {\n    // ipv6 address\n    result += '[' + url.hostname + ']'\n  } else {\n    result += url.hostname || ''\n  }\n\n  result += url.port ? ':' + url.port : ''\n  result += url.pathname || ''\n  result += url.search || ''\n  result += url.hash || ''\n\n  return result\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n//\n// Changes from joyent/node:\n//\n// 1. No leading slash in paths,\n//    e.g. in `url.parse('http://foo?bar')` pathname is ``, not `/`\n//\n// 2. Backslashes are not replaced with slashes,\n//    so `http:\\\\example.org\\` is treated like a relative path\n//\n// 3. Trailing colon is treated like a part of the path,\n//    i.e. in `http://example.org:foo` pathname is `:foo`\n//\n// 4. Nothing is URL-encoded in the resulting object,\n//    (in joyent/node some chars in auth and paths are encoded)\n//\n// 5. `url.parse()` does not have `parseQueryString` argument\n//\n// 6. Removed extraneous result properties: `host`, `path`, `query`, etc.,\n//    which can be constructed using other parts of the url.\n//\n\nfunction Url () {\n  this.protocol = null\n  this.slashes = null\n  this.auth = null\n  this.port = null\n  this.hostname = null\n  this.hash = null\n  this.search = null\n  this.pathname = null\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n// define these here so at least they only have to be\n// compiled once on the first module load.\nconst protocolPattern = /^([a-z0-9.+-]+:)/i\nconst portPattern = /:[0-9]*$/\n\n// Special case for a simple path URL\n/* eslint-disable-next-line no-useless-escape */\nconst simplePathPattern = /^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/\n\n// RFC 2396: characters reserved for delimiting URLs.\n// We actually just auto-escape these.\nconst delims = ['<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t']\n\n// RFC 2396: characters not allowed for various reasons.\nconst unwise = ['{', '}', '|', '\\\\', '^', '`'].concat(delims)\n\n// Allowed by RFCs, but cause of XSS attacks.  Always escape these.\nconst autoEscape = ['\\''].concat(unwise)\n// Characters that are never ever allowed in a hostname.\n// Note that any invalid chars are also handled, but these\n// are the ones that are *expected* to be seen, so we fast-path\n// them.\nconst nonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape)\nconst hostEndingChars = ['/', '?', '#']\nconst hostnameMaxLen = 255\nconst hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/\nconst hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/\n// protocols that can allow \"unsafe\" and \"unwise\" chars.\n// protocols that never have a hostname.\nconst hostlessProtocol = {\n  javascript: true,\n  'javascript:': true\n}\n// protocols that always contain a // bit.\nconst slashedProtocol = {\n  http: true,\n  https: true,\n  ftp: true,\n  gopher: true,\n  file: true,\n  'http:': true,\n  'https:': true,\n  'ftp:': true,\n  'gopher:': true,\n  'file:': true\n}\n\nfunction urlParse (url, slashesDenoteHost) {\n  if (url && url instanceof Url) return url\n\n  const u = new Url()\n  u.parse(url, slashesDenoteHost)\n  return u\n}\n\nUrl.prototype.parse = function (url, slashesDenoteHost) {\n  let lowerProto, hec, slashes\n  let rest = url\n\n  // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n  rest = rest.trim()\n\n  if (!slashesDenoteHost && url.split('#').length === 1) {\n    // Try fast path regexp\n    const simplePath = simplePathPattern.exec(rest)\n    if (simplePath) {\n      this.pathname = simplePath[1]\n      if (simplePath[2]) {\n        this.search = simplePath[2]\n      }\n      return this\n    }\n  }\n\n  let proto = protocolPattern.exec(rest)\n  if (proto) {\n    proto = proto[0]\n    lowerProto = proto.toLowerCase()\n    this.protocol = proto\n    rest = rest.substr(proto.length)\n  }\n\n  // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n  /* eslint-disable-next-line no-useless-escape */\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    slashes = rest.substr(0, 2) === '//'\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2)\n      this.slashes = true\n    }\n  }\n\n  if (!hostlessProtocol[proto] &&\n      (slashes || (proto && !slashedProtocol[proto]))) {\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n\n    // find the first instance of any hostEndingChars\n    let hostEnd = -1\n    for (let i = 0; i < hostEndingChars.length; i++) {\n      hec = rest.indexOf(hostEndingChars[i])\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) {\n        hostEnd = hec\n      }\n    }\n\n    // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n    let auth, atSign\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@')\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd)\n    }\n\n    // Now we have a portion which is definitely the auth.\n    // Pull that off.\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign)\n      rest = rest.slice(atSign + 1)\n      this.auth = auth\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1\n    for (let i = 0; i < nonHostChars.length; i++) {\n      hec = rest.indexOf(nonHostChars[i])\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) {\n        hostEnd = hec\n      }\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1) {\n      hostEnd = rest.length\n    }\n\n    if (rest[hostEnd - 1] === ':') { hostEnd-- }\n    const host = rest.slice(0, hostEnd)\n    rest = rest.slice(hostEnd)\n\n    // pull out port.\n    this.parseHost(host)\n\n    // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n    this.hostname = this.hostname || ''\n\n    // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n    const ipv6Hostname = this.hostname[0] === '[' &&\n        this.hostname[this.hostname.length - 1] === ']'\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      const hostparts = this.hostname.split(/\\./)\n      for (let i = 0, l = hostparts.length; i < l; i++) {\n        const part = hostparts[i]\n        if (!part) { continue }\n        if (!part.match(hostnamePartPattern)) {\n          let newpart = ''\n          for (let j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x'\n            } else {\n              newpart += part[j]\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            const validParts = hostparts.slice(0, i)\n            const notHost = hostparts.slice(i + 1)\n            const bit = part.match(hostnamePartStart)\n            if (bit) {\n              validParts.push(bit[1])\n              notHost.unshift(bit[2])\n            }\n            if (notHost.length) {\n              rest = notHost.join('.') + rest\n            }\n            this.hostname = validParts.join('.')\n            break\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = ''\n    }\n\n    // strip [ and ] from the hostname\n    // the host field still retains them, though\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2)\n    }\n  }\n\n  // chop off from the tail first.\n  const hash = rest.indexOf('#')\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash)\n    rest = rest.slice(0, hash)\n  }\n  const qm = rest.indexOf('?')\n  if (qm !== -1) {\n    this.search = rest.substr(qm)\n    rest = rest.slice(0, qm)\n  }\n  if (rest) { this.pathname = rest }\n  if (slashedProtocol[lowerProto] &&\n      this.hostname && !this.pathname) {\n    this.pathname = ''\n  }\n\n  return this\n}\n\nUrl.prototype.parseHost = function (host) {\n  let port = portPattern.exec(host)\n  if (port) {\n    port = port[0]\n    if (port !== ':') {\n      this.port = port.substr(1)\n    }\n    host = host.substr(0, host.length - port.length)\n  }\n  if (host) { this.hostname = host }\n}\n\nexport default urlParse\n","export default /[!-#%-\\*,-\\/:;\\?@\\[-\\]_\\{\\}\\xA1\\xA7\\xAB\\xB6\\xB7\\xBB\\xBF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061D-\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C77\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1B7D\\u1B7E\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4F\\u2E52-\\u2E5D\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]|\\uD800[\\uDD00-\\uDD02\\uDF9F\\uDFD0]|\\uD801\\uDD6F|\\uD802[\\uDC57\\uDD1F\\uDD3F\\uDE50-\\uDE58\\uDE7F\\uDEF0-\\uDEF6\\uDF39-\\uDF3F\\uDF99-\\uDF9C]|\\uD803[\\uDEAD\\uDF55-\\uDF59\\uDF86-\\uDF89]|\\uD804[\\uDC47-\\uDC4D\\uDCBB\\uDCBC\\uDCBE-\\uDCC1\\uDD40-\\uDD43\\uDD74\\uDD75\\uDDC5-\\uDDC8\\uDDCD\\uDDDB\\uDDDD-\\uDDDF\\uDE38-\\uDE3D\\uDEA9]|\\uD805[\\uDC4B-\\uDC4F\\uDC5A\\uDC5B\\uDC5D\\uDCC6\\uDDC1-\\uDDD7\\uDE41-\\uDE43\\uDE60-\\uDE6C\\uDEB9\\uDF3C-\\uDF3E]|\\uD806[\\uDC3B\\uDD44-\\uDD46\\uDDE2\\uDE3F-\\uDE46\\uDE9A-\\uDE9C\\uDE9E-\\uDEA2\\uDF00-\\uDF09]|\\uD807[\\uDC41-\\uDC45\\uDC70\\uDC71\\uDEF7\\uDEF8\\uDF43-\\uDF4F\\uDFFF]|\\uD809[\\uDC70-\\uDC74]|\\uD80B[\\uDFF1\\uDFF2]|\\uD81A[\\uDE6E\\uDE6F\\uDEF5\\uDF37-\\uDF3B\\uDF44]|\\uD81B[\\uDE97-\\uDE9A\\uDFE2]|\\uD82F\\uDC9F|\\uD836[\\uDE87-\\uDE8B]|\\uD83A[\\uDD5E\\uDD5F]/","export default /[\\$\\+<->\\^`\\|~\\xA2-\\xA6\\xA8\\xA9\\xAC\\xAE-\\xB1\\xB4\\xB8\\xD7\\xF7\\u02C2-\\u02C5\\u02D2-\\u02DF\\u02E5-\\u02EB\\u02ED\\u02EF-\\u02FF\\u0375\\u0384\\u0385\\u03F6\\u0482\\u058D-\\u058F\\u0606-\\u0608\\u060B\\u060E\\u060F\\u06DE\\u06E9\\u06FD\\u06FE\\u07F6\\u07FE\\u07FF\\u0888\\u09F2\\u09F3\\u09FA\\u09FB\\u0AF1\\u0B70\\u0BF3-\\u0BFA\\u0C7F\\u0D4F\\u0D79\\u0E3F\\u0F01-\\u0F03\\u0F13\\u0F15-\\u0F17\\u0F1A-\\u0F1F\\u0F34\\u0F36\\u0F38\\u0FBE-\\u0FC5\\u0FC7-\\u0FCC\\u0FCE\\u0FCF\\u0FD5-\\u0FD8\\u109E\\u109F\\u1390-\\u1399\\u166D\\u17DB\\u1940\\u19DE-\\u19FF\\u1B61-\\u1B6A\\u1B74-\\u1B7C\\u1FBD\\u1FBF-\\u1FC1\\u1FCD-\\u1FCF\\u1FDD-\\u1FDF\\u1FED-\\u1FEF\\u1FFD\\u1FFE\\u2044\\u2052\\u207A-\\u207C\\u208A-\\u208C\\u20A0-\\u20C0\\u2100\\u2101\\u2103-\\u2106\\u2108\\u2109\\u2114\\u2116-\\u2118\\u211E-\\u2123\\u2125\\u2127\\u2129\\u212E\\u213A\\u213B\\u2140-\\u2144\\u214A-\\u214D\\u214F\\u218A\\u218B\\u2190-\\u2307\\u230C-\\u2328\\u232B-\\u2426\\u2440-\\u244A\\u249C-\\u24E9\\u2500-\\u2767\\u2794-\\u27C4\\u27C7-\\u27E5\\u27F0-\\u2982\\u2999-\\u29D7\\u29DC-\\u29FB\\u29FE-\\u2B73\\u2B76-\\u2B95\\u2B97-\\u2BFF\\u2CE5-\\u2CEA\\u2E50\\u2E51\\u2E80-\\u2E99\\u2E9B-\\u2EF3\\u2F00-\\u2FD5\\u2FF0-\\u2FFF\\u3004\\u3012\\u3013\\u3020\\u3036\\u3037\\u303E\\u303F\\u309B\\u309C\\u3190\\u3191\\u3196-\\u319F\\u31C0-\\u31E3\\u31EF\\u3200-\\u321E\\u322A-\\u3247\\u3250\\u3260-\\u327F\\u328A-\\u32B0\\u32C0-\\u33FF\\u4DC0-\\u4DFF\\uA490-\\uA4C6\\uA700-\\uA716\\uA720\\uA721\\uA789\\uA78A\\uA828-\\uA82B\\uA836-\\uA839\\uAA77-\\uAA79\\uAB5B\\uAB6A\\uAB6B\\uFB29\\uFBB2-\\uFBC2\\uFD40-\\uFD4F\\uFDCF\\uFDFC-\\uFDFF\\uFE62\\uFE64-\\uFE66\\uFE69\\uFF04\\uFF0B\\uFF1C-\\uFF1E\\uFF3E\\uFF40\\uFF5C\\uFF5E\\uFFE0-\\uFFE6\\uFFE8-\\uFFEE\\uFFFC\\uFFFD]|\\uD800[\\uDD37-\\uDD3F\\uDD79-\\uDD89\\uDD8C-\\uDD8E\\uDD90-\\uDD9C\\uDDA0\\uDDD0-\\uDDFC]|\\uD802[\\uDC77\\uDC78\\uDEC8]|\\uD805\\uDF3F|\\uD807[\\uDFD5-\\uDFF1]|\\uD81A[\\uDF3C-\\uDF3F\\uDF45]|\\uD82F\\uDC9C|\\uD833[\\uDF50-\\uDFC3]|\\uD834[\\uDC00-\\uDCF5\\uDD00-\\uDD26\\uDD29-\\uDD64\\uDD6A-\\uDD6C\\uDD83\\uDD84\\uDD8C-\\uDDA9\\uDDAE-\\uDDEA\\uDE00-\\uDE41\\uDE45\\uDF00-\\uDF56]|\\uD835[\\uDEC1\\uDEDB\\uDEFB\\uDF15\\uDF35\\uDF4F\\uDF6F\\uDF89\\uDFA9\\uDFC3]|\\uD836[\\uDC00-\\uDDFF\\uDE37-\\uDE3A\\uDE6D-\\uDE74\\uDE76-\\uDE83\\uDE85\\uDE86]|\\uD838[\\uDD4F\\uDEFF]|\\uD83B[\\uDCAC\\uDCB0\\uDD2E\\uDEF0\\uDEF1]|\\uD83C[\\uDC00-\\uDC2B\\uDC30-\\uDC93\\uDCA0-\\uDCAE\\uDCB1-\\uDCBF\\uDCC1-\\uDCCF\\uDCD1-\\uDCF5\\uDD0D-\\uDDAD\\uDDE6-\\uDE02\\uDE10-\\uDE3B\\uDE40-\\uDE48\\uDE50\\uDE51\\uDE60-\\uDE65\\uDF00-\\uDFFF]|\\uD83D[\\uDC00-\\uDED7\\uDEDC-\\uDEEC\\uDEF0-\\uDEFC\\uDF00-\\uDF76\\uDF7B-\\uDFD9\\uDFE0-\\uDFEB\\uDFF0]|\\uD83E[\\uDC00-\\uDC0B\\uDC10-\\uDC47\\uDC50-\\uDC59\\uDC60-\\uDC87\\uDC90-\\uDCAD\\uDCB0\\uDCB1\\uDD00-\\uDE53\\uDE60-\\uDE6D\\uDE70-\\uDE7C\\uDE80-\\uDE88\\uDE90-\\uDEBD\\uDEBF-\\uDEC5\\uDECE-\\uDEDB\\uDEE0-\\uDEE8\\uDEF0-\\uDEF8\\uDF00-\\uDF92\\uDF94-\\uDFCA]/","export default /[\\0-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/","export default /[\\0-\\x1F\\x7F-\\x9F]/","export default /[\\xAD\\u0600-\\u0605\\u061C\\u06DD\\u070F\\u0890\\u0891\\u08E2\\u180E\\u200B-\\u200F\\u202A-\\u202E\\u2060-\\u2064\\u2066-\\u206F\\uFEFF\\uFFF9-\\uFFFB]|\\uD804[\\uDCBD\\uDCCD]|\\uD80D[\\uDC30-\\uDC3F]|\\uD82F[\\uDCA0-\\uDCA3]|\\uD834[\\uDD73-\\uDD7A]|\\uDB40[\\uDC01\\uDC20-\\uDC7F]/","export default /[ \\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000]/",null,null,null,null,null,null,null,"// Utilities\n//\n\nimport * as mdurl from 'mdurl'\nimport * as ucmicro from 'uc.micro'\nimport { decodeHTML } from 'entities'\n\nfunction _class (obj) { return Object.prototype.toString.call(obj) }\n\nfunction isString (obj) { return _class(obj) === '[object String]' }\n\nconst _hasOwnProperty = Object.prototype.hasOwnProperty\n\nfunction has (object, key) {\n  return _hasOwnProperty.call(object, key)\n}\n\n// Merge objects\n//\nfunction assign (obj /* from1, from2, from3, ... */) {\n  const sources = Array.prototype.slice.call(arguments, 1)\n\n  sources.forEach(function (source) {\n    if (!source) { return }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be object')\n    }\n\n    Object.keys(source).forEach(function (key) {\n      obj[key] = source[key]\n    })\n  })\n\n  return obj\n}\n\n// Remove element from array and put another array at those position.\n// Useful for some operations with tokens\nfunction arrayReplaceAt (src, pos, newElements) {\n  return [].concat(src.slice(0, pos), newElements, src.slice(pos + 1))\n}\n\nfunction isValidEntityCode (c) {\n  /* eslint no-bitwise:0 */\n  // broken sequence\n  if (c >= 0xD800 && c <= 0xDFFF) { return false }\n  // never used\n  if (c >= 0xFDD0 && c <= 0xFDEF) { return false }\n  if ((c & 0xFFFF) === 0xFFFF || (c & 0xFFFF) === 0xFFFE) { return false }\n  // control codes\n  if (c >= 0x00 && c <= 0x08) { return false }\n  if (c === 0x0B) { return false }\n  if (c >= 0x0E && c <= 0x1F) { return false }\n  if (c >= 0x7F && c <= 0x9F) { return false }\n  // out of range\n  if (c > 0x10FFFF) { return false }\n  return true\n}\n\nfunction fromCodePoint (c) {\n  /* eslint no-bitwise:0 */\n  if (c > 0xffff) {\n    c -= 0x10000\n    const surrogate1 = 0xd800 + (c >> 10)\n    const surrogate2 = 0xdc00 + (c & 0x3ff)\n\n    return String.fromCharCode(surrogate1, surrogate2)\n  }\n  return String.fromCharCode(c)\n}\n\nconst UNESCAPE_MD_RE  = /\\\\([!\"#$%&'()*+,\\-./:;<=>?@[\\\\\\]^_`{|}~])/g\nconst ENTITY_RE       = /&([a-z#][a-z0-9]{1,31});/gi\nconst UNESCAPE_ALL_RE = new RegExp(UNESCAPE_MD_RE.source + '|' + ENTITY_RE.source, 'gi')\n\nconst DIGITAL_ENTITY_TEST_RE = /^#((?:x[a-f0-9]{1,8}|[0-9]{1,8}))$/i\n\nfunction replaceEntityPattern (match, name) {\n  if (name.charCodeAt(0) === 0x23/* # */ && DIGITAL_ENTITY_TEST_RE.test(name)) {\n    const code = name[1].toLowerCase() === 'x'\n      ? parseInt(name.slice(2), 16)\n      : parseInt(name.slice(1), 10)\n\n    if (isValidEntityCode(code)) {\n      return fromCodePoint(code)\n    }\n\n    return match\n  }\n\n  const decoded = decodeHTML(match)\n  if (decoded !== match) {\n    return decoded\n  }\n\n  return match\n}\n\n/* function replaceEntities(str) {\n  if (str.indexOf('&') < 0) { return str; }\n\n  return str.replace(ENTITY_RE, replaceEntityPattern);\n} */\n\nfunction unescapeMd (str) {\n  if (str.indexOf('\\\\') < 0) { return str }\n  return str.replace(UNESCAPE_MD_RE, '$1')\n}\n\nfunction unescapeAll (str) {\n  if (str.indexOf('\\\\') < 0 && str.indexOf('&') < 0) { return str }\n\n  return str.replace(UNESCAPE_ALL_RE, function (match, escaped, entity) {\n    if (escaped) { return escaped }\n    return replaceEntityPattern(match, entity)\n  })\n}\n\nconst HTML_ESCAPE_TEST_RE = /[&<>\"]/\nconst HTML_ESCAPE_REPLACE_RE = /[&<>\"]/g\nconst HTML_REPLACEMENTS = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;'\n}\n\nfunction replaceUnsafeChar (ch) {\n  return HTML_REPLACEMENTS[ch]\n}\n\nfunction escapeHtml (str) {\n  if (HTML_ESCAPE_TEST_RE.test(str)) {\n    return str.replace(HTML_ESCAPE_REPLACE_RE, replaceUnsafeChar)\n  }\n  return str\n}\n\nconst REGEXP_ESCAPE_RE = /[.?*+^$[\\]\\\\(){}|-]/g\n\nfunction escapeRE (str) {\n  return str.replace(REGEXP_ESCAPE_RE, '\\\\$&')\n}\n\nfunction isSpace (code) {\n  switch (code) {\n    case 0x09:\n    case 0x20:\n      return true\n  }\n  return false\n}\n\n// Zs (unicode class) || [\\t\\f\\v\\r\\n]\nfunction isWhiteSpace (code) {\n  if (code >= 0x2000 && code <= 0x200A) { return true }\n  switch (code) {\n    case 0x09: // \\t\n    case 0x0A: // \\n\n    case 0x0B: // \\v\n    case 0x0C: // \\f\n    case 0x0D: // \\r\n    case 0x20:\n    case 0xA0:\n    case 0x1680:\n    case 0x202F:\n    case 0x205F:\n    case 0x3000:\n      return true\n  }\n  return false\n}\n\n/* eslint-disable max-len */\n\n// Currently without astral characters support.\nfunction isPunctChar (ch) {\n  return ucmicro.P.test(ch) || ucmicro.S.test(ch)\n}\n\n// Markdown ASCII punctuation characters.\n//\n// !, \", #, $, %, &, ', (, ), *, +, ,, -, ., /, :, ;, <, =, >, ?, @, [, \\, ], ^, _, `, {, |, }, or ~\n// http://spec.commonmark.org/0.15/#ascii-punctuation-character\n//\n// Don't confuse with unicode punctuation !!! It lacks some chars in ascii range.\n//\nfunction isMdAsciiPunct (ch) {\n  switch (ch) {\n    case 0x21/* ! */:\n    case 0x22/* \" */:\n    case 0x23/* # */:\n    case 0x24/* $ */:\n    case 0x25/* % */:\n    case 0x26/* & */:\n    case 0x27/* ' */:\n    case 0x28/* ( */:\n    case 0x29/* ) */:\n    case 0x2A/* * */:\n    case 0x2B/* + */:\n    case 0x2C/* , */:\n    case 0x2D/* - */:\n    case 0x2E/* . */:\n    case 0x2F/* / */:\n    case 0x3A/* : */:\n    case 0x3B/* ; */:\n    case 0x3C/* < */:\n    case 0x3D/* = */:\n    case 0x3E/* > */:\n    case 0x3F/* ? */:\n    case 0x40/* @ */:\n    case 0x5B/* [ */:\n    case 0x5C/* \\ */:\n    case 0x5D/* ] */:\n    case 0x5E/* ^ */:\n    case 0x5F/* _ */:\n    case 0x60/* ` */:\n    case 0x7B/* { */:\n    case 0x7C/* | */:\n    case 0x7D/* } */:\n    case 0x7E/* ~ */:\n      return true\n    default:\n      return false\n  }\n}\n\n// Hepler to unify [reference labels].\n//\nfunction normalizeReference (str) {\n  // Trim and collapse whitespace\n  //\n  str = str.trim().replace(/\\s+/g, ' ')\n\n  // In node v10 'ẞ'.toLowerCase() === 'Ṿ', which is presumed to be a bug\n  // fixed in v12 (couldn't find any details).\n  //\n  // So treat this one as a special case\n  // (remove this when node v10 is no longer supported).\n  //\n  if ('ẞ'.toLowerCase() === 'Ṿ') {\n    str = str.replace(/ẞ/g, 'ß')\n  }\n\n  // .toLowerCase().toUpperCase() should get rid of all differences\n  // between letter variants.\n  //\n  // Simple .toLowerCase() doesn't normalize 125 code points correctly,\n  // and .toUpperCase doesn't normalize 6 of them (list of exceptions:\n  // İ, ϴ, ẞ, Ω, K, Å - those are already uppercased, but have differently\n  // uppercased versions).\n  //\n  // Here's an example showing how it happens. Lets take greek letter omega:\n  // uppercase U+0398 (Θ), U+03f4 (ϴ) and lowercase U+03b8 (θ), U+03d1 (ϑ)\n  //\n  // Unicode entries:\n  // 0398;GREEK CAPITAL LETTER THETA;Lu;0;L;;;;;N;;;;03B8;\n  // 03B8;GREEK SMALL LETTER THETA;Ll;0;L;;;;;N;;;0398;;0398\n  // 03D1;GREEK THETA SYMBOL;Ll;0;L;<compat> 03B8;;;;N;GREEK SMALL LETTER SCRIPT THETA;;0398;;0398\n  // 03F4;GREEK CAPITAL THETA SYMBOL;Lu;0;L;<compat> 0398;;;;N;;;;03B8;\n  //\n  // Case-insensitive comparison should treat all of them as equivalent.\n  //\n  // But .toLowerCase() doesn't change ϑ (it's already lowercase),\n  // and .toUpperCase() doesn't change ϴ (already uppercase).\n  //\n  // Applying first lower then upper case normalizes any character:\n  // '\\u0398\\u03f4\\u03b8\\u03d1'.toLowerCase().toUpperCase() === '\\u0398\\u0398\\u0398\\u0398'\n  //\n  // Note: this is equivalent to unicode case folding; unicode normalization\n  // is a different step that is not required here.\n  //\n  // Final result should be uppercased, because it's later stored in an object\n  // (this avoid a conflict with Object.prototype members,\n  // most notably, `__proto__`)\n  //\n  return str.toLowerCase().toUpperCase()\n}\n\n// Re-export libraries commonly used in both markdown-it and its plugins,\n// so plugins won't have to depend on them explicitly, which reduces their\n// bundled size (e.g. a browser build).\n//\nconst lib = { mdurl, ucmicro }\n\nexport {\n  lib,\n  assign,\n  isString,\n  has,\n  unescapeMd,\n  unescapeAll,\n  isValidEntityCode,\n  fromCodePoint,\n  escapeHtml,\n  arrayReplaceAt,\n  isSpace,\n  isWhiteSpace,\n  isMdAsciiPunct,\n  isPunctChar,\n  escapeRE,\n  normalizeReference\n}\n","// Parse link label\n//\n// this function assumes that first character (\"[\") already matches;\n// returns the end of the label\n//\n\nexport default function parseLinkLabel (state, start, disableNested) {\n  let level, found, marker, prevPos\n\n  const max = state.posMax\n  const oldPos = state.pos\n\n  state.pos = start + 1\n  level = 1\n\n  while (state.pos < max) {\n    marker = state.src.charCodeAt(state.pos)\n    if (marker === 0x5D /* ] */) {\n      level--\n      if (level === 0) {\n        found = true\n        break\n      }\n    }\n\n    prevPos = state.pos\n    state.md.inline.skipToken(state)\n    if (marker === 0x5B /* [ */) {\n      if (prevPos === state.pos - 1) {\n        // increase level if we find text `[`, which is not a part of any token\n        level++\n      } else if (disableNested) {\n        state.pos = oldPos\n        return -1\n      }\n    }\n  }\n\n  let labelEnd = -1\n\n  if (found) {\n    labelEnd = state.pos\n  }\n\n  // restore old state\n  state.pos = oldPos\n\n  return labelEnd\n}\n","// Parse link destination\n//\n\nimport { unescapeAll } from '../common/utils.mjs'\n\nexport default function parseLinkDestination (str, start, max) {\n  let code\n  let pos = start\n\n  const result = {\n    ok: false,\n    pos: 0,\n    str: ''\n  }\n\n  if (str.charCodeAt(pos) === 0x3C /* < */) {\n    pos++\n    while (pos < max) {\n      code = str.charCodeAt(pos)\n      if (code === 0x0A /* \\n */) { return result }\n      if (code === 0x3C /* < */) { return result }\n      if (code === 0x3E /* > */) {\n        result.pos = pos + 1\n        result.str = unescapeAll(str.slice(start + 1, pos))\n        result.ok = true\n        return result\n      }\n      if (code === 0x5C /* \\ */ && pos + 1 < max) {\n        pos += 2\n        continue\n      }\n\n      pos++\n    }\n\n    // no closing '>'\n    return result\n  }\n\n  // this should be ... } else { ... branch\n\n  let level = 0\n  while (pos < max) {\n    code = str.charCodeAt(pos)\n\n    if (code === 0x20) { break }\n\n    // ascii control characters\n    if (code < 0x20 || code === 0x7F) { break }\n\n    if (code === 0x5C /* \\ */ && pos + 1 < max) {\n      if (str.charCodeAt(pos + 1) === 0x20) { break }\n      pos += 2\n      continue\n    }\n\n    if (code === 0x28 /* ( */) {\n      level++\n      if (level > 32) { return result }\n    }\n\n    if (code === 0x29 /* ) */) {\n      if (level === 0) { break }\n      level--\n    }\n\n    pos++\n  }\n\n  if (start === pos) { return result }\n  if (level !== 0) { return result }\n\n  result.str = unescapeAll(str.slice(start, pos))\n  result.pos = pos\n  result.ok = true\n  return result\n}\n","// Parse link title\n//\n\nimport { unescapeAll } from '../common/utils.mjs'\n\n// Parse link title within `str` in [start, max] range,\n// or continue previous parsing if `prev_state` is defined (equal to result of last execution).\n//\nexport default function parseLinkTitle (str, start, max, prev_state) {\n  let code\n  let pos = start\n\n  const state = {\n    // if `true`, this is a valid link title\n    ok: false,\n    // if `true`, this link can be continued on the next line\n    can_continue: false,\n    // if `ok`, it's the position of the first character after the closing marker\n    pos: 0,\n    // if `ok`, it's the unescaped title\n    str: '',\n    // expected closing marker character code\n    marker: 0\n  }\n\n  if (prev_state) {\n    // this is a continuation of a previous parseLinkTitle call on the next line,\n    // used in reference links only\n    state.str = prev_state.str\n    state.marker = prev_state.marker\n  } else {\n    if (pos >= max) { return state }\n\n    let marker = str.charCodeAt(pos)\n    if (marker !== 0x22 /* \" */ && marker !== 0x27 /* ' */ && marker !== 0x28 /* ( */) { return state }\n\n    start++\n    pos++\n\n    // if opening marker is \"(\", switch it to closing marker \")\"\n    if (marker === 0x28) { marker = 0x29 }\n\n    state.marker = marker\n  }\n\n  while (pos < max) {\n    code = str.charCodeAt(pos)\n    if (code === state.marker) {\n      state.pos = pos + 1\n      state.str += unescapeAll(str.slice(start, pos))\n      state.ok = true\n      return state\n    } else if (code === 0x28 /* ( */ && state.marker === 0x29 /* ) */) {\n      return state\n    } else if (code === 0x5C /* \\ */ && pos + 1 < max) {\n      pos++\n    }\n\n    pos++\n  }\n\n  // no closing marker found, but this link title may continue on the next line (for references)\n  state.can_continue = true\n  state.str += unescapeAll(str.slice(start, pos))\n  return state\n}\n","/**\n * class Renderer\n *\n * Generates HTML from parsed token stream. Each instance has independent\n * copy of rules. Those can be rewritten with ease. Also, you can add new\n * rules if you create plugin and adds new token types.\n **/\n\nimport { assign, unescapeAll, escapeHtml } from './common/utils.mjs'\n\nconst default_rules = {}\n\ndefault_rules.code_inline = function (tokens, idx, options, env, slf) {\n  const token = tokens[idx]\n\n  return  '<code' + slf.renderAttrs(token) + '>' +\n          escapeHtml(token.content) +\n          '</code>'\n}\n\ndefault_rules.code_block = function (tokens, idx, options, env, slf) {\n  const token = tokens[idx]\n\n  return  '<pre' + slf.renderAttrs(token) + '><code>' +\n          escapeHtml(tokens[idx].content) +\n          '</code></pre>\\n'\n}\n\ndefault_rules.fence = function (tokens, idx, options, env, slf) {\n  const token = tokens[idx]\n  const info = token.info ? unescapeAll(token.info).trim() : ''\n  let langName = ''\n  let langAttrs = ''\n\n  if (info) {\n    const arr = info.split(/(\\s+)/g)\n    langName = arr[0]\n    langAttrs = arr.slice(2).join('')\n  }\n\n  let highlighted\n  if (options.highlight) {\n    highlighted = options.highlight(token.content, langName, langAttrs) || escapeHtml(token.content)\n  } else {\n    highlighted = escapeHtml(token.content)\n  }\n\n  if (highlighted.indexOf('<pre') === 0) {\n    return highlighted + '\\n'\n  }\n\n  // If language exists, inject class gently, without modifying original token.\n  // May be, one day we will add .deepClone() for token and simplify this part, but\n  // now we prefer to keep things local.\n  if (info) {\n    const i = token.attrIndex('class')\n    const tmpAttrs = token.attrs ? token.attrs.slice() : []\n\n    if (i < 0) {\n      tmpAttrs.push(['class', options.langPrefix + langName])\n    } else {\n      tmpAttrs[i] = tmpAttrs[i].slice()\n      tmpAttrs[i][1] += ' ' + options.langPrefix + langName\n    }\n\n    // Fake token just to render attributes\n    const tmpToken = {\n      attrs: tmpAttrs\n    }\n\n    return `<pre><code${slf.renderAttrs(tmpToken)}>${highlighted}</code></pre>\\n`\n  }\n\n  return `<pre><code${slf.renderAttrs(token)}>${highlighted}</code></pre>\\n`\n}\n\ndefault_rules.image = function (tokens, idx, options, env, slf) {\n  const token = tokens[idx]\n\n  // \"alt\" attr MUST be set, even if empty. Because it's mandatory and\n  // should be placed on proper position for tests.\n  //\n  // Replace content with actual value\n\n  token.attrs[token.attrIndex('alt')][1] =\n    slf.renderInlineAsText(token.children, options, env)\n\n  return slf.renderToken(tokens, idx, options)\n}\n\ndefault_rules.hardbreak = function (tokens, idx, options /*, env */) {\n  return options.xhtmlOut ? '<br />\\n' : '<br>\\n'\n}\ndefault_rules.softbreak = function (tokens, idx, options /*, env */) {\n  return options.breaks ? (options.xhtmlOut ? '<br />\\n' : '<br>\\n') : '\\n'\n}\n\ndefault_rules.text = function (tokens, idx /*, options, env */) {\n  return escapeHtml(tokens[idx].content)\n}\n\ndefault_rules.html_block = function (tokens, idx /*, options, env */) {\n  return tokens[idx].content\n}\ndefault_rules.html_inline = function (tokens, idx /*, options, env */) {\n  return tokens[idx].content\n}\n\n/**\n * new Renderer()\n *\n * Creates new [[Renderer]] instance and fill [[Renderer#rules]] with defaults.\n **/\nfunction Renderer () {\n  /**\n   * Renderer#rules -> Object\n   *\n   * Contains render rules for tokens. Can be updated and extended.\n   *\n   * ##### Example\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   *\n   * md.renderer.rules.strong_open  = function () { return '<b>'; };\n   * md.renderer.rules.strong_close = function () { return '</b>'; };\n   *\n   * var result = md.renderInline(...);\n   * ```\n   *\n   * Each rule is called as independent static function with fixed signature:\n   *\n   * ```javascript\n   * function my_token_render(tokens, idx, options, env, renderer) {\n   *   // ...\n   *   return renderedHTML;\n   * }\n   * ```\n   *\n   * See [source code](https://github.com/markdown-it/markdown-it/blob/master/lib/renderer.mjs)\n   * for more details and examples.\n   **/\n  this.rules = assign({}, default_rules)\n}\n\n/**\n * Renderer.renderAttrs(token) -> String\n *\n * Render token attributes to string.\n **/\nRenderer.prototype.renderAttrs = function renderAttrs (token) {\n  let i, l, result\n\n  if (!token.attrs) { return '' }\n\n  result = ''\n\n  for (i = 0, l = token.attrs.length; i < l; i++) {\n    result += ' ' + escapeHtml(token.attrs[i][0]) + '=\"' + escapeHtml(token.attrs[i][1]) + '\"'\n  }\n\n  return result\n}\n\n/**\n * Renderer.renderToken(tokens, idx, options) -> String\n * - tokens (Array): list of tokens\n * - idx (Numbed): token index to render\n * - options (Object): params of parser instance\n *\n * Default token renderer. Can be overriden by custom function\n * in [[Renderer#rules]].\n **/\nRenderer.prototype.renderToken = function renderToken (tokens, idx, options) {\n  const token = tokens[idx]\n  let result = ''\n\n  // Tight list paragraphs\n  if (token.hidden) {\n    return ''\n  }\n\n  // Insert a newline between hidden paragraph and subsequent opening\n  // block-level tag.\n  //\n  // For example, here we should insert a newline before blockquote:\n  //  - a\n  //    >\n  //\n  if (token.block && token.nesting !== -1 && idx && tokens[idx - 1].hidden) {\n    result += '\\n'\n  }\n\n  // Add token name, e.g. `<img`\n  result += (token.nesting === -1 ? '</' : '<') + token.tag\n\n  // Encode attributes, e.g. `<img src=\"foo\"`\n  result += this.renderAttrs(token)\n\n  // Add a slash for self-closing tags, e.g. `<img src=\"foo\" /`\n  if (token.nesting === 0 && options.xhtmlOut) {\n    result += ' /'\n  }\n\n  // Check if we need to add a newline after this tag\n  let needLf = false\n  if (token.block) {\n    needLf = true\n\n    if (token.nesting === 1) {\n      if (idx + 1 < tokens.length) {\n        const nextToken = tokens[idx + 1]\n\n        if (nextToken.type === 'inline' || nextToken.hidden) {\n          // Block-level tag containing an inline tag.\n          //\n          needLf = false\n        } else if (nextToken.nesting === -1 && nextToken.tag === token.tag) {\n          // Opening tag + closing tag of the same type. E.g. `<li></li>`.\n          //\n          needLf = false\n        }\n      }\n    }\n  }\n\n  result += needLf ? '>\\n' : '>'\n\n  return result\n}\n\n/**\n * Renderer.renderInline(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to render\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * The same as [[Renderer.render]], but for single token of `inline` type.\n **/\nRenderer.prototype.renderInline = function (tokens, options, env) {\n  let result = ''\n  const rules = this.rules\n\n  for (let i = 0, len = tokens.length; i < len; i++) {\n    const type = tokens[i].type\n\n    if (typeof rules[type] !== 'undefined') {\n      result += rules[type](tokens, i, options, env, this)\n    } else {\n      result += this.renderToken(tokens, i, options)\n    }\n  }\n\n  return result\n}\n\n/** internal\n * Renderer.renderInlineAsText(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to render\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * Special kludge for image `alt` attributes to conform CommonMark spec.\n * Don't try to use it! Spec requires to show `alt` content with stripped markup,\n * instead of simple escaping.\n **/\nRenderer.prototype.renderInlineAsText = function (tokens, options, env) {\n  let result = ''\n\n  for (let i = 0, len = tokens.length; i < len; i++) {\n    switch (tokens[i].type) {\n      case 'text':\n        result += tokens[i].content\n        break\n      case 'image':\n        result += this.renderInlineAsText(tokens[i].children, options, env)\n        break\n      case 'html_inline':\n      case 'html_block':\n        result += tokens[i].content\n        break\n      case 'softbreak':\n      case 'hardbreak':\n        result += '\\n'\n        break\n      default:\n        // all other tokens are skipped\n    }\n  }\n\n  return result\n}\n\n/**\n * Renderer.render(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to render\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * Takes token stream and generates HTML. Probably, you will never need to call\n * this method directly.\n **/\nRenderer.prototype.render = function (tokens, options, env) {\n  let result = ''\n  const rules = this.rules\n\n  for (let i = 0, len = tokens.length; i < len; i++) {\n    const type = tokens[i].type\n\n    if (type === 'inline') {\n      result += this.renderInline(tokens[i].children, options, env)\n    } else if (typeof rules[type] !== 'undefined') {\n      result += rules[type](tokens, i, options, env, this)\n    } else {\n      result += this.renderToken(tokens, i, options, env)\n    }\n  }\n\n  return result\n}\n\nexport default Renderer\n","/**\n * class Ruler\n *\n * Helper class, used by [[MarkdownIt#core]], [[MarkdownIt#block]] and\n * [[MarkdownIt#inline]] to manage sequences of functions (rules):\n *\n * - keep rules in defined order\n * - assign the name to each rule\n * - enable/disable rules\n * - add/replace rules\n * - allow assign rules to additional named chains (in the same)\n * - cacheing lists of active rules\n *\n * You will not need use this class directly until write plugins. For simple\n * rules control use [[MarkdownIt.disable]], [[MarkdownIt.enable]] and\n * [[MarkdownIt.use]].\n **/\n\n/**\n * new Ruler()\n **/\nfunction Ruler () {\n  // List of added rules. Each element is:\n  //\n  // {\n  //   name: XXX,\n  //   enabled: Boolean,\n  //   fn: Function(),\n  //   alt: [ name2, name3 ]\n  // }\n  //\n  this.__rules__ = []\n\n  // Cached rule chains.\n  //\n  // First level - chain name, '' for default.\n  // Second level - diginal anchor for fast filtering by charcodes.\n  //\n  this.__cache__ = null\n}\n\n// Helper methods, should not be used directly\n\n// Find rule index by name\n//\nRuler.prototype.__find__ = function (name) {\n  for (let i = 0; i < this.__rules__.length; i++) {\n    if (this.__rules__[i].name === name) {\n      return i\n    }\n  }\n  return -1\n}\n\n// Build rules lookup cache\n//\nRuler.prototype.__compile__ = function () {\n  const self = this\n  const chains = ['']\n\n  // collect unique names\n  self.__rules__.forEach(function (rule) {\n    if (!rule.enabled) { return }\n\n    rule.alt.forEach(function (altName) {\n      if (chains.indexOf(altName) < 0) {\n        chains.push(altName)\n      }\n    })\n  })\n\n  self.__cache__ = {}\n\n  chains.forEach(function (chain) {\n    self.__cache__[chain] = []\n    self.__rules__.forEach(function (rule) {\n      if (!rule.enabled) { return }\n\n      if (chain && rule.alt.indexOf(chain) < 0) { return }\n\n      self.__cache__[chain].push(rule.fn)\n    })\n  })\n}\n\n/**\n * Ruler.at(name, fn [, options])\n * - name (String): rule name to replace.\n * - fn (Function): new rule function.\n * - options (Object): new rule options (not mandatory).\n *\n * Replace rule by name with new function & options. Throws error if name not\n * found.\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * Replace existing typographer replacement rule with new one:\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.core.ruler.at('replacements', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.at = function (name, fn, options) {\n  const index = this.__find__(name)\n  const opt = options || {}\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + name) }\n\n  this.__rules__[index].fn = fn\n  this.__rules__[index].alt = opt.alt || []\n  this.__cache__ = null\n}\n\n/**\n * Ruler.before(beforeName, ruleName, fn [, options])\n * - beforeName (String): new rule will be added before this one.\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Add new rule to chain before one with given name. See also\n * [[Ruler.after]], [[Ruler.push]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.block.ruler.before('paragraph', 'my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.before = function (beforeName, ruleName, fn, options) {\n  const index = this.__find__(beforeName)\n  const opt = options || {}\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + beforeName) }\n\n  this.__rules__.splice(index, 0, {\n    name: ruleName,\n    enabled: true,\n    fn,\n    alt: opt.alt || []\n  })\n\n  this.__cache__ = null\n}\n\n/**\n * Ruler.after(afterName, ruleName, fn [, options])\n * - afterName (String): new rule will be added after this one.\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Add new rule to chain after one with given name. See also\n * [[Ruler.before]], [[Ruler.push]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.inline.ruler.after('text', 'my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.after = function (afterName, ruleName, fn, options) {\n  const index = this.__find__(afterName)\n  const opt = options || {}\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + afterName) }\n\n  this.__rules__.splice(index + 1, 0, {\n    name: ruleName,\n    enabled: true,\n    fn,\n    alt: opt.alt || []\n  })\n\n  this.__cache__ = null\n}\n\n/**\n * Ruler.push(ruleName, fn [, options])\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Push new rule to the end of chain. See also\n * [[Ruler.before]], [[Ruler.after]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.core.ruler.push('my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.push = function (ruleName, fn, options) {\n  const opt = options || {}\n\n  this.__rules__.push({\n    name: ruleName,\n    enabled: true,\n    fn,\n    alt: opt.alt || []\n  })\n\n  this.__cache__ = null\n}\n\n/**\n * Ruler.enable(list [, ignoreInvalid]) -> Array\n * - list (String|Array): list of rule names to enable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable rules with given names. If any rule name not found - throw Error.\n * Errors can be disabled by second param.\n *\n * Returns list of found rule names (if no exception happened).\n *\n * See also [[Ruler.disable]], [[Ruler.enableOnly]].\n **/\nRuler.prototype.enable = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [list] }\n\n  const result = []\n\n  // Search by name and enable\n  list.forEach(function (name) {\n    const idx = this.__find__(name)\n\n    if (idx < 0) {\n      if (ignoreInvalid) { return }\n      throw new Error('Rules manager: invalid rule name ' + name)\n    }\n    this.__rules__[idx].enabled = true\n    result.push(name)\n  }, this)\n\n  this.__cache__ = null\n  return result\n}\n\n/**\n * Ruler.enableOnly(list [, ignoreInvalid])\n * - list (String|Array): list of rule names to enable (whitelist).\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable rules with given names, and disable everything else. If any rule name\n * not found - throw Error. Errors can be disabled by second param.\n *\n * See also [[Ruler.disable]], [[Ruler.enable]].\n **/\nRuler.prototype.enableOnly = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [list] }\n\n  this.__rules__.forEach(function (rule) { rule.enabled = false })\n\n  this.enable(list, ignoreInvalid)\n}\n\n/**\n * Ruler.disable(list [, ignoreInvalid]) -> Array\n * - list (String|Array): list of rule names to disable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Disable rules with given names. If any rule name not found - throw Error.\n * Errors can be disabled by second param.\n *\n * Returns list of found rule names (if no exception happened).\n *\n * See also [[Ruler.enable]], [[Ruler.enableOnly]].\n **/\nRuler.prototype.disable = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [list] }\n\n  const result = []\n\n  // Search by name and disable\n  list.forEach(function (name) {\n    const idx = this.__find__(name)\n\n    if (idx < 0) {\n      if (ignoreInvalid) { return }\n      throw new Error('Rules manager: invalid rule name ' + name)\n    }\n    this.__rules__[idx].enabled = false\n    result.push(name)\n  }, this)\n\n  this.__cache__ = null\n  return result\n}\n\n/**\n * Ruler.getRules(chainName) -> Array\n *\n * Return array of active functions (rules) for given chain name. It analyzes\n * rules configuration, compiles caches if not exists and returns result.\n *\n * Default chain name is `''` (empty string). It can't be skipped. That's\n * done intentionally, to keep signature monomorphic for high speed.\n **/\nRuler.prototype.getRules = function (chainName) {\n  if (this.__cache__ === null) {\n    this.__compile__()\n  }\n\n  // Chain can be empty, if rules disabled. But we still have to return Array.\n  return this.__cache__[chainName] || []\n}\n\nexport default Ruler\n","// Token class\n\n/**\n * class Token\n **/\n\n/**\n * new Token(type, tag, nesting)\n *\n * Create new token and fill passed properties.\n **/\nfunction Token (type, tag, nesting) {\n  /**\n   * Token#type -> String\n   *\n   * Type of the token (string, e.g. \"paragraph_open\")\n   **/\n  this.type     = type\n\n  /**\n   * Token#tag -> String\n   *\n   * html tag name, e.g. \"p\"\n   **/\n  this.tag      = tag\n\n  /**\n   * Token#attrs -> Array\n   *\n   * Html attributes. Format: `[ [ name1, value1 ], [ name2, value2 ] ]`\n   **/\n  this.attrs    = null\n\n  /**\n   * Token#map -> Array\n   *\n   * Source map info. Format: `[ line_begin, line_end ]`\n   **/\n  this.map      = null\n\n  /**\n   * Token#nesting -> Number\n   *\n   * Level change (number in {-1, 0, 1} set), where:\n   *\n   * -  `1` means the tag is opening\n   * -  `0` means the tag is self-closing\n   * - `-1` means the tag is closing\n   **/\n  this.nesting  = nesting\n\n  /**\n   * Token#level -> Number\n   *\n   * nesting level, the same as `state.level`\n   **/\n  this.level    = 0\n\n  /**\n   * Token#children -> Array\n   *\n   * An array of child nodes (inline and img tokens)\n   **/\n  this.children = null\n\n  /**\n   * Token#content -> String\n   *\n   * In a case of self-closing tag (code, html, fence, etc.),\n   * it has contents of this tag.\n   **/\n  this.content  = ''\n\n  /**\n   * Token#markup -> String\n   *\n   * '*' or '_' for emphasis, fence string for fence, etc.\n   **/\n  this.markup   = ''\n\n  /**\n   * Token#info -> String\n   *\n   * Additional information:\n   *\n   * - Info string for \"fence\" tokens\n   * - The value \"auto\" for autolink \"link_open\" and \"link_close\" tokens\n   * - The string value of the item marker for ordered-list \"list_item_open\" tokens\n   **/\n  this.info     = ''\n\n  /**\n   * Token#meta -> Object\n   *\n   * A place for plugins to store an arbitrary data\n   **/\n  this.meta     = null\n\n  /**\n   * Token#block -> Boolean\n   *\n   * True for block-level tokens, false for inline tokens.\n   * Used in renderer to calculate line breaks\n   **/\n  this.block    = false\n\n  /**\n   * Token#hidden -> Boolean\n   *\n   * If it's true, ignore this element when rendering. Used for tight lists\n   * to hide paragraphs.\n   **/\n  this.hidden   = false\n}\n\n/**\n * Token.attrIndex(name) -> Number\n *\n * Search attribute index by name.\n **/\nToken.prototype.attrIndex = function attrIndex (name) {\n  if (!this.attrs) { return -1 }\n\n  const attrs = this.attrs\n\n  for (let i = 0, len = attrs.length; i < len; i++) {\n    if (attrs[i][0] === name) { return i }\n  }\n  return -1\n}\n\n/**\n * Token.attrPush(attrData)\n *\n * Add `[ name, value ]` attribute to list. Init attrs if necessary\n **/\nToken.prototype.attrPush = function attrPush (attrData) {\n  if (this.attrs) {\n    this.attrs.push(attrData)\n  } else {\n    this.attrs = [attrData]\n  }\n}\n\n/**\n * Token.attrSet(name, value)\n *\n * Set `name` attribute to `value`. Override old value if exists.\n **/\nToken.prototype.attrSet = function attrSet (name, value) {\n  const idx = this.attrIndex(name)\n  const attrData = [name, value]\n\n  if (idx < 0) {\n    this.attrPush(attrData)\n  } else {\n    this.attrs[idx] = attrData\n  }\n}\n\n/**\n * Token.attrGet(name)\n *\n * Get the value of attribute `name`, or null if it does not exist.\n **/\nToken.prototype.attrGet = function attrGet (name) {\n  const idx = this.attrIndex(name)\n  let value = null\n  if (idx >= 0) {\n    value = this.attrs[idx][1]\n  }\n  return value\n}\n\n/**\n * Token.attrJoin(name, value)\n *\n * Join value to existing attribute via space. Or create new attribute if not\n * exists. Useful to operate with token classes.\n **/\nToken.prototype.attrJoin = function attrJoin (name, value) {\n  const idx = this.attrIndex(name)\n\n  if (idx < 0) {\n    this.attrPush([name, value])\n  } else {\n    this.attrs[idx][1] = this.attrs[idx][1] + ' ' + value\n  }\n}\n\nexport default Token\n","// Core state object\n//\n\nimport Token from '../token.mjs'\n\nfunction StateCore (src, md, env) {\n  this.src = src\n  this.env = env\n  this.tokens = []\n  this.inlineMode = false\n  this.md = md // link to parser instance\n}\n\n// re-export Token class to use in core rules\nStateCore.prototype.Token = Token\n\nexport default StateCore\n","// Normalize input string\n\n// https://spec.commonmark.org/0.29/#line-ending\nconst NEWLINES_RE  = /\\r\\n?|\\n/g\nconst NULL_RE      = /\\0/g\n\nexport default function normalize (state) {\n  let str\n\n  // Normalize newlines\n  str = state.src.replace(NEWLINES_RE, '\\n')\n\n  // Replace NULL characters\n  str = str.replace(NULL_RE, '\\uFFFD')\n\n  state.src = str\n}\n","// Replace link-like texts with link nodes.\n//\n// Currently restricted by `md.validateLink()` to http/https/ftp\n//\n\nimport { arrayReplaceAt } from '../common/utils.mjs'\n\nfunction isLinkOpen (str) {\n  return /^<a[>\\s]/i.test(str)\n}\nfunction isLinkClose (str) {\n  return /^<\\/a\\s*>/i.test(str)\n}\n\nexport default function linkify (state) {\n  const blockTokens = state.tokens\n\n  if (!state.md.options.linkify) { return }\n\n  for (let j = 0, l = blockTokens.length; j < l; j++) {\n    if (blockTokens[j].type !== 'inline' ||\n        !state.md.linkify.pretest(blockTokens[j].content)) {\n      continue\n    }\n\n    let tokens = blockTokens[j].children\n\n    let htmlLinkLevel = 0\n\n    // We scan from the end, to keep position when new tags added.\n    // Use reversed logic in links start/end match\n    for (let i = tokens.length - 1; i >= 0; i--) {\n      const currentToken = tokens[i]\n\n      // Skip content of markdown links\n      if (currentToken.type === 'link_close') {\n        i--\n        while (tokens[i].level !== currentToken.level && tokens[i].type !== 'link_open') {\n          i--\n        }\n        continue\n      }\n\n      // Skip content of html tag links\n      if (currentToken.type === 'html_inline') {\n        if (isLinkOpen(currentToken.content) && htmlLinkLevel > 0) {\n          htmlLinkLevel--\n        }\n        if (isLinkClose(currentToken.content)) {\n          htmlLinkLevel++\n        }\n      }\n      if (htmlLinkLevel > 0) { continue }\n\n      if (currentToken.type === 'text' && state.md.linkify.test(currentToken.content)) {\n        const text = currentToken.content\n        let links = state.md.linkify.match(text)\n\n        // Now split string to nodes\n        const nodes = []\n        let level = currentToken.level\n        let lastPos = 0\n\n        // forbid escape sequence at the start of the string,\n        // this avoids http\\://example.com/ from being linkified as\n        // http:<a href=\"//example.com/\">//example.com/</a>\n        if (links.length > 0 &&\n            links[0].index === 0 &&\n            i > 0 &&\n            tokens[i - 1].type === 'text_special') {\n          links = links.slice(1)\n        }\n\n        for (let ln = 0; ln < links.length; ln++) {\n          const url = links[ln].url\n          const fullUrl = state.md.normalizeLink(url)\n          if (!state.md.validateLink(fullUrl)) { continue }\n\n          let urlText = links[ln].text\n\n          // Linkifier might send raw hostnames like \"example.com\", where url\n          // starts with domain name. So we prepend http:// in those cases,\n          // and remove it afterwards.\n          //\n          if (!links[ln].schema) {\n            urlText = state.md.normalizeLinkText('http://' + urlText).replace(/^http:\\/\\//, '')\n          } else if (links[ln].schema === 'mailto:' && !/^mailto:/i.test(urlText)) {\n            urlText = state.md.normalizeLinkText('mailto:' + urlText).replace(/^mailto:/, '')\n          } else {\n            urlText = state.md.normalizeLinkText(urlText)\n          }\n\n          const pos = links[ln].index\n\n          if (pos > lastPos) {\n            const token   = new state.Token('text', '', 0)\n            token.content = text.slice(lastPos, pos)\n            token.level   = level\n            nodes.push(token)\n          }\n\n          const token_o   = new state.Token('link_open', 'a', 1)\n          token_o.attrs   = [['href', fullUrl]]\n          token_o.level   = level++\n          token_o.markup  = 'linkify'\n          token_o.info    = 'auto'\n          nodes.push(token_o)\n\n          const token_t   = new state.Token('text', '', 0)\n          token_t.content = urlText\n          token_t.level   = level\n          nodes.push(token_t)\n\n          const token_c   = new state.Token('link_close', 'a', -1)\n          token_c.level   = --level\n          token_c.markup  = 'linkify'\n          token_c.info    = 'auto'\n          nodes.push(token_c)\n\n          lastPos = links[ln].lastIndex\n        }\n        if (lastPos < text.length) {\n          const token   = new state.Token('text', '', 0)\n          token.content = text.slice(lastPos)\n          token.level   = level\n          nodes.push(token)\n        }\n\n        // replace current node\n        blockTokens[j].children = tokens = arrayReplaceAt(tokens, i, nodes)\n      }\n    }\n  }\n}\n","// Simple typographic replacements\n//\n// (c) (C) → ©\n// (tm) (TM) → ™\n// (r) (R) → ®\n// +- → ±\n// ... → … (also ?.... → ?.., !.... → !..)\n// ???????? → ???, !!!!! → !!!, `,,` → `,`\n// -- → &ndash;, --- → &mdash;\n//\n\n// TODO:\n// - fractionals 1/2, 1/4, 3/4 -> ½, ¼, ¾\n// - multiplications 2 x 4 -> 2 × 4\n\nconst RARE_RE = /\\+-|\\.\\.|\\?\\?\\?\\?|!!!!|,,|--/\n\n// Workaround for phantomjs - need regex without /g flag,\n// or root check will fail every second time\nconst SCOPED_ABBR_TEST_RE = /\\((c|tm|r)\\)/i\n\nconst SCOPED_ABBR_RE = /\\((c|tm|r)\\)/ig\nconst SCOPED_ABBR = {\n  c: '©',\n  r: '®',\n  tm: '™'\n}\n\nfunction replaceFn (match, name) {\n  return SCOPED_ABBR[name.toLowerCase()]\n}\n\nfunction replace_scoped (inlineTokens) {\n  let inside_autolink = 0\n\n  for (let i = inlineTokens.length - 1; i >= 0; i--) {\n    const token = inlineTokens[i]\n\n    if (token.type === 'text' && !inside_autolink) {\n      token.content = token.content.replace(SCOPED_ABBR_RE, replaceFn)\n    }\n\n    if (token.type === 'link_open' && token.info === 'auto') {\n      inside_autolink--\n    }\n\n    if (token.type === 'link_close' && token.info === 'auto') {\n      inside_autolink++\n    }\n  }\n}\n\nfunction replace_rare (inlineTokens) {\n  let inside_autolink = 0\n\n  for (let i = inlineTokens.length - 1; i >= 0; i--) {\n    const token = inlineTokens[i]\n\n    if (token.type === 'text' && !inside_autolink) {\n      if (RARE_RE.test(token.content)) {\n        token.content = token.content\n          .replace(/\\+-/g, '±')\n          // .., ..., ....... -> …\n          // but ?..... & !..... -> ?.. & !..\n          .replace(/\\.{2,}/g, '…').replace(/([?!])…/g, '$1..')\n          .replace(/([?!]){4,}/g, '$1$1$1').replace(/,{2,}/g, ',')\n          // em-dash\n          .replace(/(^|[^-])---(?=[^-]|$)/mg, '$1\\u2014')\n          // en-dash\n          .replace(/(^|\\s)--(?=\\s|$)/mg, '$1\\u2013')\n          .replace(/(^|[^-\\s])--(?=[^-\\s]|$)/mg, '$1\\u2013')\n      }\n    }\n\n    if (token.type === 'link_open' && token.info === 'auto') {\n      inside_autolink--\n    }\n\n    if (token.type === 'link_close' && token.info === 'auto') {\n      inside_autolink++\n    }\n  }\n}\n\nexport default function replace (state) {\n  let blkIdx\n\n  if (!state.md.options.typographer) { return }\n\n  for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n    if (state.tokens[blkIdx].type !== 'inline') { continue }\n\n    if (SCOPED_ABBR_TEST_RE.test(state.tokens[blkIdx].content)) {\n      replace_scoped(state.tokens[blkIdx].children)\n    }\n\n    if (RARE_RE.test(state.tokens[blkIdx].content)) {\n      replace_rare(state.tokens[blkIdx].children)\n    }\n  }\n}\n","// Convert straight quotation marks to typographic ones\n//\n\nimport { isWhiteSpace, isPunctChar, isMdAsciiPunct } from '../common/utils.mjs'\n\nconst QUOTE_TEST_RE = /['\"]/\nconst QUOTE_RE = /['\"]/g\nconst APOSTROPHE = '\\u2019' /* ’ */\n\nfunction replaceAt (str, index, ch) {\n  return str.slice(0, index) + ch + str.slice(index + 1)\n}\n\nfunction process_inlines (tokens, state) {\n  let j\n\n  const stack = []\n\n  for (let i = 0; i < tokens.length; i++) {\n    const token = tokens[i]\n\n    const thisLevel = tokens[i].level\n\n    for (j = stack.length - 1; j >= 0; j--) {\n      if (stack[j].level <= thisLevel) { break }\n    }\n    stack.length = j + 1\n\n    if (token.type !== 'text') { continue }\n\n    let text = token.content\n    let pos = 0\n    let max = text.length\n\n    /* eslint no-labels:0,block-scoped-var:0 */\n    OUTER:\n    while (pos < max) {\n      QUOTE_RE.lastIndex = pos\n      const t = QUOTE_RE.exec(text)\n      if (!t) { break }\n\n      let canOpen = true\n      let canClose = true\n      pos = t.index + 1\n      const isSingle = (t[0] === \"'\")\n\n      // Find previous character,\n      // default to space if it's the beginning of the line\n      //\n      let lastChar = 0x20\n\n      if (t.index - 1 >= 0) {\n        lastChar = text.charCodeAt(t.index - 1)\n      } else {\n        for (j = i - 1; j >= 0; j--) {\n          if (tokens[j].type === 'softbreak' || tokens[j].type === 'hardbreak') break // lastChar defaults to 0x20\n          if (!tokens[j].content) continue // should skip all tokens except 'text', 'html_inline' or 'code_inline'\n\n          lastChar = tokens[j].content.charCodeAt(tokens[j].content.length - 1)\n          break\n        }\n      }\n\n      // Find next character,\n      // default to space if it's the end of the line\n      //\n      let nextChar = 0x20\n\n      if (pos < max) {\n        nextChar = text.charCodeAt(pos)\n      } else {\n        for (j = i + 1; j < tokens.length; j++) {\n          if (tokens[j].type === 'softbreak' || tokens[j].type === 'hardbreak') break // nextChar defaults to 0x20\n          if (!tokens[j].content) continue // should skip all tokens except 'text', 'html_inline' or 'code_inline'\n\n          nextChar = tokens[j].content.charCodeAt(0)\n          break\n        }\n      }\n\n      const isLastPunctChar = isMdAsciiPunct(lastChar) || isPunctChar(String.fromCharCode(lastChar))\n      const isNextPunctChar = isMdAsciiPunct(nextChar) || isPunctChar(String.fromCharCode(nextChar))\n\n      const isLastWhiteSpace = isWhiteSpace(lastChar)\n      const isNextWhiteSpace = isWhiteSpace(nextChar)\n\n      if (isNextWhiteSpace) {\n        canOpen = false\n      } else if (isNextPunctChar) {\n        if (!(isLastWhiteSpace || isLastPunctChar)) {\n          canOpen = false\n        }\n      }\n\n      if (isLastWhiteSpace) {\n        canClose = false\n      } else if (isLastPunctChar) {\n        if (!(isNextWhiteSpace || isNextPunctChar)) {\n          canClose = false\n        }\n      }\n\n      if (nextChar === 0x22 /* \" */ && t[0] === '\"') {\n        if (lastChar >= 0x30 /* 0 */ && lastChar <= 0x39 /* 9 */) {\n          // special case: 1\"\" - count first quote as an inch\n          canClose = canOpen = false\n        }\n      }\n\n      if (canOpen && canClose) {\n        // Replace quotes in the middle of punctuation sequence, but not\n        // in the middle of the words, i.e.:\n        //\n        // 1. foo \" bar \" baz - not replaced\n        // 2. foo-\"-bar-\"-baz - replaced\n        // 3. foo\"bar\"baz     - not replaced\n        //\n        canOpen = isLastPunctChar\n        canClose = isNextPunctChar\n      }\n\n      if (!canOpen && !canClose) {\n        // middle of word\n        if (isSingle) {\n          token.content = replaceAt(token.content, t.index, APOSTROPHE)\n        }\n        continue\n      }\n\n      if (canClose) {\n        // this could be a closing quote, rewind the stack to get a match\n        for (j = stack.length - 1; j >= 0; j--) {\n          let item = stack[j]\n          if (stack[j].level < thisLevel) { break }\n          if (item.single === isSingle && stack[j].level === thisLevel) {\n            item = stack[j]\n\n            let openQuote\n            let closeQuote\n            if (isSingle) {\n              openQuote = state.md.options.quotes[2]\n              closeQuote = state.md.options.quotes[3]\n            } else {\n              openQuote = state.md.options.quotes[0]\n              closeQuote = state.md.options.quotes[1]\n            }\n\n            // replace token.content *before* tokens[item.token].content,\n            // because, if they are pointing at the same token, replaceAt\n            // could mess up indices when quote length != 1\n            token.content = replaceAt(token.content, t.index, closeQuote)\n            tokens[item.token].content = replaceAt(\n              tokens[item.token].content, item.pos, openQuote)\n\n            pos += closeQuote.length - 1\n            if (item.token === i) { pos += openQuote.length - 1 }\n\n            text = token.content\n            max = text.length\n\n            stack.length = j\n            continue OUTER\n          }\n        }\n      }\n\n      if (canOpen) {\n        stack.push({\n          token: i,\n          pos: t.index,\n          single: isSingle,\n          level: thisLevel\n        })\n      } else if (canClose && isSingle) {\n        token.content = replaceAt(token.content, t.index, APOSTROPHE)\n      }\n    }\n  }\n}\n\nexport default function smartquotes (state) {\n  /* eslint max-depth:0 */\n  if (!state.md.options.typographer) { return }\n\n  for (let blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n    if (state.tokens[blkIdx].type !== 'inline' ||\n        !QUOTE_TEST_RE.test(state.tokens[blkIdx].content)) {\n      continue\n    }\n\n    process_inlines(state.tokens[blkIdx].children, state)\n  }\n}\n","/** internal\n * class Core\n *\n * Top-level rules executor. Glues block/inline parsers and does intermediate\n * transformations.\n **/\n\nimport Ruler from './ruler.mjs'\nimport StateCore from './rules_core/state_core.mjs'\n\nimport r_normalize from './rules_core/normalize.mjs'\nimport r_block from './rules_core/block.mjs'\nimport r_inline from './rules_core/inline.mjs'\nimport r_linkify from './rules_core/linkify.mjs'\nimport r_replacements from './rules_core/replacements.mjs'\nimport r_smartquotes from './rules_core/smartquotes.mjs'\nimport r_text_join from './rules_core/text_join.mjs'\n\nconst _rules = [\n  ['normalize',      r_normalize],\n  ['block',          r_block],\n  ['inline',         r_inline],\n  ['linkify',        r_linkify],\n  ['replacements',   r_replacements],\n  ['smartquotes',    r_smartquotes],\n  // `text_join` finds `text_special` tokens (for escape sequences)\n  // and joins them with the rest of the text\n  ['text_join',      r_text_join]\n]\n\n/**\n * new Core()\n **/\nfunction Core () {\n  /**\n   * Core#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of core rules.\n   **/\n  this.ruler = new Ruler()\n\n  for (let i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1])\n  }\n}\n\n/**\n * Core.process(state)\n *\n * Executes core chain rules.\n **/\nCore.prototype.process = function (state) {\n  const rules = this.ruler.getRules('')\n\n  for (let i = 0, l = rules.length; i < l; i++) {\n    rules[i](state)\n  }\n}\n\nCore.prototype.State = StateCore\n\nexport default Core\n","export default function block (state) {\n  let token\n\n  if (state.inlineMode) {\n    token          = new state.Token('inline', '', 0)\n    token.content  = state.src\n    token.map      = [0, 1]\n    token.children = []\n    state.tokens.push(token)\n  } else {\n    state.md.block.parse(state.src, state.md, state.env, state.tokens)\n  }\n}\n","export default function inline (state) {\n  const tokens = state.tokens\n\n  // Parse inlines\n  for (let i = 0, l = tokens.length; i < l; i++) {\n    const tok = tokens[i]\n    if (tok.type === 'inline') {\n      state.md.inline.parse(tok.content, state.md, state.env, tok.children)\n    }\n  }\n}\n","// Join raw text tokens with the rest of the text\n//\n// This is set as a separate rule to provide an opportunity for plugins\n// to run text replacements after text join, but before escape join.\n//\n// For example, `\\:)` shouldn't be replaced with an emoji.\n//\n\nexport default function text_join (state) {\n  let curr, last\n  const blockTokens = state.tokens\n  const l = blockTokens.length\n\n  for (let j = 0; j < l; j++) {\n    if (blockTokens[j].type !== 'inline') continue\n\n    const tokens = blockTokens[j].children\n    const max = tokens.length\n\n    for (curr = 0; curr < max; curr++) {\n      if (tokens[curr].type === 'text_special') {\n        tokens[curr].type = 'text'\n      }\n    }\n\n    for (curr = last = 0; curr < max; curr++) {\n      if (tokens[curr].type === 'text' &&\n          curr + 1 < max &&\n          tokens[curr + 1].type === 'text') {\n        // collapse two adjacent text nodes\n        tokens[curr + 1].content = tokens[curr].content + tokens[curr + 1].content\n      } else {\n        if (curr !== last) { tokens[last] = tokens[curr] }\n\n        last++\n      }\n    }\n\n    if (curr !== last) {\n      tokens.length = last\n    }\n  }\n}\n","// Parser state class\n\nimport Token from '../token.mjs'\nimport { isSpace } from '../common/utils.mjs'\n\nfunction StateBlock (src, md, env, tokens) {\n  this.src = src\n\n  // link to parser instance\n  this.md     = md\n\n  this.env = env\n\n  //\n  // Internal state vartiables\n  //\n\n  this.tokens = tokens\n\n  this.bMarks = []  // line begin offsets for fast jumps\n  this.eMarks = []  // line end offsets for fast jumps\n  this.tShift = []  // offsets of the first non-space characters (tabs not expanded)\n  this.sCount = []  // indents for each line (tabs expanded)\n\n  // An amount of virtual spaces (tabs expanded) between beginning\n  // of each line (bMarks) and real beginning of that line.\n  //\n  // It exists only as a hack because blockquotes override bMarks\n  // losing information in the process.\n  //\n  // It's used only when expanding tabs, you can think about it as\n  // an initial tab length, e.g. bsCount=21 applied to string `\\t123`\n  // means first tab should be expanded to 4-21%4 === 3 spaces.\n  //\n  this.bsCount = []\n\n  // block parser variables\n\n  // required block content indent (for example, if we are\n  // inside a list, it would be positioned after list marker)\n  this.blkIndent  = 0\n  this.line       = 0 // line index in src\n  this.lineMax    = 0 // lines count\n  this.tight      = false  // loose/tight mode for lists\n  this.ddIndent   = -1 // indent of the current dd block (-1 if there isn't any)\n  this.listIndent = -1 // indent of the current list block (-1 if there isn't any)\n\n  // can be 'blockquote', 'list', 'root', 'paragraph' or 'reference'\n  // used in lists to determine if they interrupt a paragraph\n  this.parentType = 'root'\n\n  this.level = 0\n\n  // Create caches\n  // Generate markers.\n  const s = this.src\n\n  for (let start = 0, pos = 0, indent = 0, offset = 0, len = s.length, indent_found = false; pos < len; pos++) {\n    const ch = s.charCodeAt(pos)\n\n    if (!indent_found) {\n      if (isSpace(ch)) {\n        indent++\n\n        if (ch === 0x09) {\n          offset += 4 - offset % 4\n        } else {\n          offset++\n        }\n        continue\n      } else {\n        indent_found = true\n      }\n    }\n\n    if (ch === 0x0A || pos === len - 1) {\n      if (ch !== 0x0A) { pos++ }\n      this.bMarks.push(start)\n      this.eMarks.push(pos)\n      this.tShift.push(indent)\n      this.sCount.push(offset)\n      this.bsCount.push(0)\n\n      indent_found = false\n      indent = 0\n      offset = 0\n      start = pos + 1\n    }\n  }\n\n  // Push fake entry to simplify cache bounds checks\n  this.bMarks.push(s.length)\n  this.eMarks.push(s.length)\n  this.tShift.push(0)\n  this.sCount.push(0)\n  this.bsCount.push(0)\n\n  this.lineMax = this.bMarks.length - 1 // don't count last fake line\n}\n\n// Push new token to \"stream\".\n//\nStateBlock.prototype.push = function (type, tag, nesting) {\n  const token = new Token(type, tag, nesting)\n  token.block = true\n\n  if (nesting < 0) this.level-- // closing tag\n  token.level = this.level\n  if (nesting > 0) this.level++ // opening tag\n\n  this.tokens.push(token)\n  return token\n}\n\nStateBlock.prototype.isEmpty = function isEmpty (line) {\n  return this.bMarks[line] + this.tShift[line] >= this.eMarks[line]\n}\n\nStateBlock.prototype.skipEmptyLines = function skipEmptyLines (from) {\n  for (let max = this.lineMax; from < max; from++) {\n    if (this.bMarks[from] + this.tShift[from] < this.eMarks[from]) {\n      break\n    }\n  }\n  return from\n}\n\n// Skip spaces from given position.\nStateBlock.prototype.skipSpaces = function skipSpaces (pos) {\n  for (let max = this.src.length; pos < max; pos++) {\n    const ch = this.src.charCodeAt(pos)\n    if (!isSpace(ch)) { break }\n  }\n  return pos\n}\n\n// Skip spaces from given position in reverse.\nStateBlock.prototype.skipSpacesBack = function skipSpacesBack (pos, min) {\n  if (pos <= min) { return pos }\n\n  while (pos > min) {\n    if (!isSpace(this.src.charCodeAt(--pos))) { return pos + 1 }\n  }\n  return pos\n}\n\n// Skip char codes from given position\nStateBlock.prototype.skipChars = function skipChars (pos, code) {\n  for (let max = this.src.length; pos < max; pos++) {\n    if (this.src.charCodeAt(pos) !== code) { break }\n  }\n  return pos\n}\n\n// Skip char codes reverse from given position - 1\nStateBlock.prototype.skipCharsBack = function skipCharsBack (pos, code, min) {\n  if (pos <= min) { return pos }\n\n  while (pos > min) {\n    if (code !== this.src.charCodeAt(--pos)) { return pos + 1 }\n  }\n  return pos\n}\n\n// cut lines range from source.\nStateBlock.prototype.getLines = function getLines (begin, end, indent, keepLastLF) {\n  if (begin >= end) {\n    return ''\n  }\n\n  const queue = new Array(end - begin)\n\n  for (let i = 0, line = begin; line < end; line++, i++) {\n    let lineIndent = 0\n    const lineStart = this.bMarks[line]\n    let first = lineStart\n    let last\n\n    if (line + 1 < end || keepLastLF) {\n      // No need for bounds check because we have fake entry on tail.\n      last = this.eMarks[line] + 1\n    } else {\n      last = this.eMarks[line]\n    }\n\n    while (first < last && lineIndent < indent) {\n      const ch = this.src.charCodeAt(first)\n\n      if (isSpace(ch)) {\n        if (ch === 0x09) {\n          lineIndent += 4 - (lineIndent + this.bsCount[line]) % 4\n        } else {\n          lineIndent++\n        }\n      } else if (first - lineStart < this.tShift[line]) {\n        // patched tShift masked characters to look like spaces (blockquotes, list markers)\n        lineIndent++\n      } else {\n        break\n      }\n\n      first++\n    }\n\n    if (lineIndent > indent) {\n      // partially expanding tabs in code blocks, e.g '\\t\\tfoobar'\n      // with indent=2 becomes '  \\tfoobar'\n      queue[i] = new Array(lineIndent - indent + 1).join(' ') + this.src.slice(first, last)\n    } else {\n      queue[i] = this.src.slice(first, last)\n    }\n  }\n\n  return queue.join('')\n}\n\n// re-export Token class to use in block rules\nStateBlock.prototype.Token = Token\n\nexport default StateBlock\n","// GFM table, https://github.github.com/gfm/#tables-extension-\n\nimport { isSpace } from '../common/utils.mjs'\n\n// Limit the amount of empty autocompleted cells in a table,\n// see https://github.com/markdown-it/markdown-it/issues/1000,\n//\n// Both pulldown-cmark and commonmark-hs limit the number of cells this way to ~200k.\n// We set it to 65k, which can expand user input by a factor of x370\n// (256x256 square is 1.8kB expanded into 650kB).\nconst MAX_AUTOCOMPLETED_CELLS = 0x10000\n\nfunction getLine (state, line) {\n  const pos = state.bMarks[line] + state.tShift[line]\n  const max = state.eMarks[line]\n\n  return state.src.slice(pos, max)\n}\n\nfunction escapedSplit (str) {\n  const result = []\n  const max = str.length\n\n  let pos = 0\n  let ch = str.charCodeAt(pos)\n  let isEscaped = false\n  let lastPos = 0\n  let current = ''\n\n  while (pos < max) {\n    if (ch === 0x7c/* | */) {\n      if (!isEscaped) {\n        // pipe separating cells, '|'\n        result.push(current + str.substring(lastPos, pos))\n        current = ''\n        lastPos = pos + 1\n      } else {\n        // escaped pipe, '\\|'\n        current += str.substring(lastPos, pos - 1)\n        lastPos = pos\n      }\n    }\n\n    isEscaped = (ch === 0x5c/* \\ */)\n    pos++\n\n    ch = str.charCodeAt(pos)\n  }\n\n  result.push(current + str.substring(lastPos))\n\n  return result\n}\n\nexport default function table (state, startLine, endLine, silent) {\n  // should have at least two lines\n  if (startLine + 2 > endLine) { return false }\n\n  let nextLine = startLine + 1\n\n  if (state.sCount[nextLine] < state.blkIndent) { return false }\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[nextLine] - state.blkIndent >= 4) { return false }\n\n  // first character of the second line should be '|', '-', ':',\n  // and no other characters are allowed but spaces;\n  // basically, this is the equivalent of /^[-:|][-:|\\s]*$/ regexp\n\n  let pos = state.bMarks[nextLine] + state.tShift[nextLine]\n  if (pos >= state.eMarks[nextLine]) { return false }\n\n  const firstCh = state.src.charCodeAt(pos++)\n  if (firstCh !== 0x7C/* | */ && firstCh !== 0x2D/* - */ && firstCh !== 0x3A/* : */) { return false }\n\n  if (pos >= state.eMarks[nextLine]) { return false }\n\n  const secondCh = state.src.charCodeAt(pos++)\n  if (secondCh !== 0x7C/* | */ && secondCh !== 0x2D/* - */ && secondCh !== 0x3A/* : */ && !isSpace(secondCh)) {\n    return false\n  }\n\n  // if first character is '-', then second character must not be a space\n  // (due to parsing ambiguity with list)\n  if (firstCh === 0x2D/* - */ && isSpace(secondCh)) { return false }\n\n  while (pos < state.eMarks[nextLine]) {\n    const ch = state.src.charCodeAt(pos)\n\n    if (ch !== 0x7C/* | */ && ch !== 0x2D/* - */ && ch !== 0x3A/* : */ && !isSpace(ch)) { return false }\n\n    pos++\n  }\n\n  let lineText = getLine(state, startLine + 1)\n  let columns = lineText.split('|')\n  const aligns = []\n  for (let i = 0; i < columns.length; i++) {\n    const t = columns[i].trim()\n    if (!t) {\n      // allow empty columns before and after table, but not in between columns;\n      // e.g. allow ` |---| `, disallow ` ---||--- `\n      if (i === 0 || i === columns.length - 1) {\n        continue\n      } else {\n        return false\n      }\n    }\n\n    if (!/^:?-+:?$/.test(t)) { return false }\n    if (t.charCodeAt(t.length - 1) === 0x3A/* : */) {\n      aligns.push(t.charCodeAt(0) === 0x3A/* : */ ? 'center' : 'right')\n    } else if (t.charCodeAt(0) === 0x3A/* : */) {\n      aligns.push('left')\n    } else {\n      aligns.push('')\n    }\n  }\n\n  lineText = getLine(state, startLine).trim()\n  if (lineText.indexOf('|') === -1) { return false }\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false }\n  columns = escapedSplit(lineText)\n  if (columns.length && columns[0] === '') columns.shift()\n  if (columns.length && columns[columns.length - 1] === '') columns.pop()\n\n  // header row will define an amount of columns in the entire table,\n  // and align row should be exactly the same (the rest of the rows can differ)\n  const columnCount = columns.length\n  if (columnCount === 0 || columnCount !== aligns.length) { return false }\n\n  if (silent) { return true }\n\n  const oldParentType = state.parentType\n  state.parentType = 'table'\n\n  // use 'blockquote' lists for termination because it's\n  // the most similar to tables\n  const terminatorRules = state.md.block.ruler.getRules('blockquote')\n\n  const token_to = state.push('table_open', 'table', 1)\n  const tableLines = [startLine, 0]\n  token_to.map = tableLines\n\n  const token_tho = state.push('thead_open', 'thead', 1)\n  token_tho.map = [startLine, startLine + 1]\n\n  const token_htro = state.push('tr_open', 'tr', 1)\n  token_htro.map = [startLine, startLine + 1]\n\n  for (let i = 0; i < columns.length; i++) {\n    const token_ho = state.push('th_open', 'th', 1)\n    if (aligns[i]) {\n      token_ho.attrs  = [['style', 'text-align:' + aligns[i]]]\n    }\n\n    const token_il = state.push('inline', '', 0)\n    token_il.content  = columns[i].trim()\n    token_il.children = []\n\n    state.push('th_close', 'th', -1)\n  }\n\n  state.push('tr_close', 'tr', -1)\n  state.push('thead_close', 'thead', -1)\n\n  let tbodyLines\n  let autocompletedCells = 0\n\n  for (nextLine = startLine + 2; nextLine < endLine; nextLine++) {\n    if (state.sCount[nextLine] < state.blkIndent) { break }\n\n    let terminate = false\n    for (let i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true\n        break\n      }\n    }\n\n    if (terminate) { break }\n    lineText = getLine(state, nextLine).trim()\n    if (!lineText) { break }\n    if (state.sCount[nextLine] - state.blkIndent >= 4) { break }\n    columns = escapedSplit(lineText)\n    if (columns.length && columns[0] === '') columns.shift()\n    if (columns.length && columns[columns.length - 1] === '') columns.pop()\n\n    // note: autocomplete count can be negative if user specifies more columns than header,\n    // but that does not affect intended use (which is limiting expansion)\n    autocompletedCells += columnCount - columns.length\n    if (autocompletedCells > MAX_AUTOCOMPLETED_CELLS) { break }\n\n    if (nextLine === startLine + 2) {\n      const token_tbo = state.push('tbody_open', 'tbody', 1)\n      token_tbo.map = tbodyLines = [startLine + 2, 0]\n    }\n\n    const token_tro = state.push('tr_open', 'tr', 1)\n    token_tro.map = [nextLine, nextLine + 1]\n\n    for (let i = 0; i < columnCount; i++) {\n      const token_tdo = state.push('td_open', 'td', 1)\n      if (aligns[i]) {\n        token_tdo.attrs  = [['style', 'text-align:' + aligns[i]]]\n      }\n\n      const token_il = state.push('inline', '', 0)\n      token_il.content  = columns[i] ? columns[i].trim() : ''\n      token_il.children = []\n\n      state.push('td_close', 'td', -1)\n    }\n    state.push('tr_close', 'tr', -1)\n  }\n\n  if (tbodyLines) {\n    state.push('tbody_close', 'tbody', -1)\n    tbodyLines[1] = nextLine\n  }\n\n  state.push('table_close', 'table', -1)\n  tableLines[1] = nextLine\n\n  state.parentType = oldParentType\n  state.line = nextLine\n  return true\n}\n","// Lists\n\nimport { isSpace } from '../common/utils.mjs'\n\n// Search `[-+*][\\n ]`, returns next pos after marker on success\n// or -1 on fail.\nfunction skipBulletListMarker (state, startLine) {\n  const max = state.eMarks[startLine]\n  let pos = state.bMarks[startLine] + state.tShift[startLine]\n\n  const marker = state.src.charCodeAt(pos++)\n  // Check bullet\n  if (marker !== 0x2A/* * */ &&\n      marker !== 0x2D/* - */ &&\n      marker !== 0x2B/* + */) {\n    return -1\n  }\n\n  if (pos < max) {\n    const ch = state.src.charCodeAt(pos)\n\n    if (!isSpace(ch)) {\n      // \" -test \" - is not a list item\n      return -1\n    }\n  }\n\n  return pos\n}\n\n// Search `\\d+[.)][\\n ]`, returns next pos after marker on success\n// or -1 on fail.\nfunction skipOrderedListMarker (state, startLine) {\n  const start = state.bMarks[startLine] + state.tShift[startLine]\n  const max = state.eMarks[startLine]\n  let pos = start\n\n  // List marker should have at least 2 chars (digit + dot)\n  if (pos + 1 >= max) { return -1 }\n\n  let ch = state.src.charCodeAt(pos++)\n\n  if (ch < 0x30/* 0 */ || ch > 0x39/* 9 */) { return -1 }\n\n  for (;;) {\n    // EOL -> fail\n    if (pos >= max) { return -1 }\n\n    ch = state.src.charCodeAt(pos++)\n\n    if (ch >= 0x30/* 0 */ && ch <= 0x39/* 9 */) {\n      // List marker should have no more than 9 digits\n      // (prevents integer overflow in browsers)\n      if (pos - start >= 10) { return -1 }\n\n      continue\n    }\n\n    // found valid marker\n    if (ch === 0x29/* ) */ || ch === 0x2e/* . */) {\n      break\n    }\n\n    return -1\n  }\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos)\n\n    if (!isSpace(ch)) {\n      // \" 1.test \" - is not a list item\n      return -1\n    }\n  }\n  return pos\n}\n\nfunction markTightParagraphs (state, idx) {\n  const level = state.level + 2\n\n  for (let i = idx + 2, l = state.tokens.length - 2; i < l; i++) {\n    if (state.tokens[i].level === level && state.tokens[i].type === 'paragraph_open') {\n      state.tokens[i + 2].hidden = true\n      state.tokens[i].hidden = true\n      i += 2\n    }\n  }\n}\n\nexport default function list (state, startLine, endLine, silent) {\n  let max, pos, start, token\n  let nextLine = startLine\n  let tight = true\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[nextLine] - state.blkIndent >= 4) { return false }\n\n  // Special case:\n  //  - item 1\n  //   - item 2\n  //    - item 3\n  //     - item 4\n  //      - this one is a paragraph continuation\n  if (state.listIndent >= 0 &&\n      state.sCount[nextLine] - state.listIndent >= 4 &&\n      state.sCount[nextLine] < state.blkIndent) {\n    return false\n  }\n\n  let isTerminatingParagraph = false\n\n  // limit conditions when list can interrupt\n  // a paragraph (validation mode only)\n  if (silent && state.parentType === 'paragraph') {\n    // Next list item should still terminate previous list item;\n    //\n    // This code can fail if plugins use blkIndent as well as lists,\n    // but I hope the spec gets fixed long before that happens.\n    //\n    if (state.sCount[nextLine] >= state.blkIndent) {\n      isTerminatingParagraph = true\n    }\n  }\n\n  // Detect list type and position after marker\n  let isOrdered\n  let markerValue\n  let posAfterMarker\n  if ((posAfterMarker = skipOrderedListMarker(state, nextLine)) >= 0) {\n    isOrdered = true\n    start = state.bMarks[nextLine] + state.tShift[nextLine]\n    markerValue = Number(state.src.slice(start, posAfterMarker - 1))\n\n    // If we're starting a new ordered list right after\n    // a paragraph, it should start with 1.\n    if (isTerminatingParagraph && markerValue !== 1) return false\n  } else if ((posAfterMarker = skipBulletListMarker(state, nextLine)) >= 0) {\n    isOrdered = false\n  } else {\n    return false\n  }\n\n  // If we're starting a new unordered list right after\n  // a paragraph, first line should not be empty.\n  if (isTerminatingParagraph) {\n    if (state.skipSpaces(posAfterMarker) >= state.eMarks[nextLine]) return false\n  }\n\n  // For validation mode we can terminate immediately\n  if (silent) { return true }\n\n  // We should terminate list on style change. Remember first one to compare.\n  const markerCharCode = state.src.charCodeAt(posAfterMarker - 1)\n\n  // Start list\n  const listTokIdx = state.tokens.length\n\n  if (isOrdered) {\n    token       = state.push('ordered_list_open', 'ol', 1)\n    if (markerValue !== 1) {\n      token.attrs = [['start', markerValue]]\n    }\n  } else {\n    token       = state.push('bullet_list_open', 'ul', 1)\n  }\n\n  const listLines = [nextLine, 0]\n  token.map    = listLines\n  token.markup = String.fromCharCode(markerCharCode)\n\n  //\n  // Iterate list items\n  //\n\n  let prevEmptyEnd = false\n  const terminatorRules = state.md.block.ruler.getRules('list')\n\n  const oldParentType = state.parentType\n  state.parentType = 'list'\n\n  while (nextLine < endLine) {\n    pos = posAfterMarker\n    max = state.eMarks[nextLine]\n\n    const initial = state.sCount[nextLine] + posAfterMarker - (state.bMarks[nextLine] + state.tShift[nextLine])\n    let offset = initial\n\n    while (pos < max) {\n      const ch = state.src.charCodeAt(pos)\n\n      if (ch === 0x09) {\n        offset += 4 - (offset + state.bsCount[nextLine]) % 4\n      } else if (ch === 0x20) {\n        offset++\n      } else {\n        break\n      }\n\n      pos++\n    }\n\n    const contentStart = pos\n    let indentAfterMarker\n\n    if (contentStart >= max) {\n      // trimming space in \"-    \\n  3\" case, indent is 1 here\n      indentAfterMarker = 1\n    } else {\n      indentAfterMarker = offset - initial\n    }\n\n    // If we have more than 4 spaces, the indent is 1\n    // (the rest is just indented code block)\n    if (indentAfterMarker > 4) { indentAfterMarker = 1 }\n\n    // \"  -  test\"\n    //  ^^^^^ - calculating total length of this thing\n    const indent = initial + indentAfterMarker\n\n    // Run subparser & write tokens\n    token        = state.push('list_item_open', 'li', 1)\n    token.markup = String.fromCharCode(markerCharCode)\n    const itemLines = [nextLine, 0]\n    token.map    = itemLines\n    if (isOrdered) {\n      token.info = state.src.slice(start, posAfterMarker - 1)\n    }\n\n    // change current state, then restore it after parser subcall\n    const oldTight = state.tight\n    const oldTShift = state.tShift[nextLine]\n    const oldSCount = state.sCount[nextLine]\n\n    //  - example list\n    // ^ listIndent position will be here\n    //   ^ blkIndent position will be here\n    //\n    const oldListIndent = state.listIndent\n    state.listIndent = state.blkIndent\n    state.blkIndent = indent\n\n    state.tight = true\n    state.tShift[nextLine] = contentStart - state.bMarks[nextLine]\n    state.sCount[nextLine] = offset\n\n    if (contentStart >= max && state.isEmpty(nextLine + 1)) {\n      // workaround for this case\n      // (list item is empty, list terminates before \"foo\"):\n      // ~~~~~~~~\n      //   -\n      //\n      //     foo\n      // ~~~~~~~~\n      state.line = Math.min(state.line + 2, endLine)\n    } else {\n      state.md.block.tokenize(state, nextLine, endLine, true)\n    }\n\n    // If any of list item is tight, mark list as tight\n    if (!state.tight || prevEmptyEnd) {\n      tight = false\n    }\n    // Item become loose if finish with empty line,\n    // but we should filter last element, because it means list finish\n    prevEmptyEnd = (state.line - nextLine) > 1 && state.isEmpty(state.line - 1)\n\n    state.blkIndent = state.listIndent\n    state.listIndent = oldListIndent\n    state.tShift[nextLine] = oldTShift\n    state.sCount[nextLine] = oldSCount\n    state.tight = oldTight\n\n    token        = state.push('list_item_close', 'li', -1)\n    token.markup = String.fromCharCode(markerCharCode)\n\n    nextLine = state.line\n    itemLines[1] = nextLine\n\n    if (nextLine >= endLine) { break }\n\n    //\n    // Try to check if list is terminated or continued.\n    //\n    if (state.sCount[nextLine] < state.blkIndent) { break }\n\n    // if it's indented more than 3 spaces, it should be a code block\n    if (state.sCount[nextLine] - state.blkIndent >= 4) { break }\n\n    // fail if terminating block found\n    let terminate = false\n    for (let i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true\n        break\n      }\n    }\n    if (terminate) { break }\n\n    // fail if list has another type\n    if (isOrdered) {\n      posAfterMarker = skipOrderedListMarker(state, nextLine)\n      if (posAfterMarker < 0) { break }\n      start = state.bMarks[nextLine] + state.tShift[nextLine]\n    } else {\n      posAfterMarker = skipBulletListMarker(state, nextLine)\n      if (posAfterMarker < 0) { break }\n    }\n\n    if (markerCharCode !== state.src.charCodeAt(posAfterMarker - 1)) { break }\n  }\n\n  // Finalize list\n  if (isOrdered) {\n    token = state.push('ordered_list_close', 'ol', -1)\n  } else {\n    token = state.push('bullet_list_close', 'ul', -1)\n  }\n  token.markup = String.fromCharCode(markerCharCode)\n\n  listLines[1] = nextLine\n  state.line = nextLine\n\n  state.parentType = oldParentType\n\n  // mark paragraphs tight if needed\n  if (tight) {\n    markTightParagraphs(state, listTokIdx)\n  }\n\n  return true\n}\n","// List of valid html blocks names, according to commonmark spec\n// https://spec.commonmark.org/0.30/#html-blocks\n\nexport default [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'search',\n  'section',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n]\n","// Regexps to match html elements\n\nconst attr_name     = '[a-zA-Z_:][a-zA-Z0-9:._-]*'\n\nconst unquoted      = '[^\"\\'=<>`\\\\x00-\\\\x20]+'\nconst single_quoted = \"'[^']*'\"\nconst double_quoted = '\"[^\"]*\"'\n\nconst attr_value  = '(?:' + unquoted + '|' + single_quoted + '|' + double_quoted + ')'\n\nconst attribute   = '(?:\\\\s+' + attr_name + '(?:\\\\s*=\\\\s*' + attr_value + ')?)'\n\nconst open_tag    = '<[A-Za-z][A-Za-z0-9\\\\-]*' + attribute + '*\\\\s*\\\\/?>'\n\nconst close_tag   = '<\\\\/[A-Za-z][A-Za-z0-9\\\\-]*\\\\s*>'\nconst comment     = '<!---?>|<!--(?:[^-]|-[^-]|--[^>])*-->'\nconst processing  = '<[?][\\\\s\\\\S]*?[?]>'\nconst declaration = '<![A-Za-z][^>]*>'\nconst cdata       = '<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>'\n\nconst HTML_TAG_RE = new RegExp('^(?:' + open_tag + '|' + close_tag + '|' + comment +\n                        '|' + processing + '|' + declaration + '|' + cdata + ')')\nconst HTML_OPEN_CLOSE_TAG_RE = new RegExp('^(?:' + open_tag + '|' + close_tag + ')')\n\nexport { HTML_TAG_RE, HTML_OPEN_CLOSE_TAG_RE }\n","// HTML block\n\nimport block_names from '../common/html_blocks.mjs'\nimport { HTML_OPEN_CLOSE_TAG_RE } from '../common/html_re.mjs'\n\n// An array of opening and corresponding closing sequences for html tags,\n// last argument defines whether it can terminate a paragraph or not\n//\nconst HTML_SEQUENCES = [\n  [/^<(script|pre|style|textarea)(?=(\\s|>|$))/i, /<\\/(script|pre|style|textarea)>/i, true],\n  [/^<!--/,        /-->/,   true],\n  [/^<\\?/,         /\\?>/,   true],\n  [/^<![A-Z]/,     />/,     true],\n  [/^<!\\[CDATA\\[/, /\\]\\]>/, true],\n  [new RegExp('^</?(' + block_names.join('|') + ')(?=(\\\\s|/?>|$))', 'i'), /^$/, true],\n  [new RegExp(HTML_OPEN_CLOSE_TAG_RE.source + '\\\\s*$'),  /^$/, false]\n]\n\nexport default function html_block (state, startLine, endLine, silent) {\n  let pos = state.bMarks[startLine] + state.tShift[startLine]\n  let max = state.eMarks[startLine]\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false }\n\n  if (!state.md.options.html) { return false }\n\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */) { return false }\n\n  let lineText = state.src.slice(pos, max)\n\n  let i = 0\n  for (; i < HTML_SEQUENCES.length; i++) {\n    if (HTML_SEQUENCES[i][0].test(lineText)) { break }\n  }\n  if (i === HTML_SEQUENCES.length) { return false }\n\n  if (silent) {\n    // true if this sequence can be a terminator, false otherwise\n    return HTML_SEQUENCES[i][2]\n  }\n\n  let nextLine = startLine + 1\n\n  // If we are here - we detected HTML block.\n  // Let's roll down till block end.\n  if (!HTML_SEQUENCES[i][1].test(lineText)) {\n    for (; nextLine < endLine; nextLine++) {\n      if (state.sCount[nextLine] < state.blkIndent) { break }\n\n      pos = state.bMarks[nextLine] + state.tShift[nextLine]\n      max = state.eMarks[nextLine]\n      lineText = state.src.slice(pos, max)\n\n      if (HTML_SEQUENCES[i][1].test(lineText)) {\n        if (lineText.length !== 0) { nextLine++ }\n        break\n      }\n    }\n  }\n\n  state.line = nextLine\n\n  const token   = state.push('html_block', '', 0)\n  token.map     = [startLine, nextLine]\n  token.content = state.getLines(startLine, nextLine, state.blkIndent, true)\n\n  return true\n}\n","/** internal\n * class ParserBlock\n *\n * Block-level tokenizer.\n **/\n\nimport Ruler from './ruler.mjs'\nimport StateBlock from './rules_block/state_block.mjs'\n\nimport r_table from './rules_block/table.mjs'\nimport r_code from './rules_block/code.mjs'\nimport r_fence from './rules_block/fence.mjs'\nimport r_blockquote from './rules_block/blockquote.mjs'\nimport r_hr from './rules_block/hr.mjs'\nimport r_list from './rules_block/list.mjs'\nimport r_reference from './rules_block/reference.mjs'\nimport r_html_block from './rules_block/html_block.mjs'\nimport r_heading from './rules_block/heading.mjs'\nimport r_lheading from './rules_block/lheading.mjs'\nimport r_paragraph from './rules_block/paragraph.mjs'\n\nconst _rules = [\n  // First 2 params - rule name & source. Secondary array - list of rules,\n  // which can be terminated by this one.\n  ['table',      r_table,      ['paragraph', 'reference']],\n  ['code',       r_code],\n  ['fence',      r_fence,      ['paragraph', 'reference', 'blockquote', 'list']],\n  ['blockquote', r_blockquote, ['paragraph', 'reference', 'blockquote', 'list']],\n  ['hr',         r_hr,         ['paragraph', 'reference', 'blockquote', 'list']],\n  ['list',       r_list,       ['paragraph', 'reference', 'blockquote']],\n  ['reference',  r_reference],\n  ['html_block', r_html_block, ['paragraph', 'reference', 'blockquote']],\n  ['heading',    r_heading,    ['paragraph', 'reference', 'blockquote']],\n  ['lheading',   r_lheading],\n  ['paragraph',  r_paragraph]\n]\n\n/**\n * new ParserBlock()\n **/\nfunction ParserBlock () {\n  /**\n   * ParserBlock#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of block rules.\n   **/\n  this.ruler = new Ruler()\n\n  for (let i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1], { alt: (_rules[i][2] || []).slice() })\n  }\n}\n\n// Generate tokens for input range\n//\nParserBlock.prototype.tokenize = function (state, startLine, endLine) {\n  const rules = this.ruler.getRules('')\n  const len = rules.length\n  const maxNesting = state.md.options.maxNesting\n  let line = startLine\n  let hasEmptyLines = false\n\n  while (line < endLine) {\n    state.line = line = state.skipEmptyLines(line)\n    if (line >= endLine) { break }\n\n    // Termination condition for nested calls.\n    // Nested calls currently used for blockquotes & lists\n    if (state.sCount[line] < state.blkIndent) { break }\n\n    // If nesting level exceeded - skip tail to the end. That's not ordinary\n    // situation and we should not care about content.\n    if (state.level >= maxNesting) {\n      state.line = endLine\n      break\n    }\n\n    // Try all possible rules.\n    // On success, rule should:\n    //\n    // - update `state.line`\n    // - update `state.tokens`\n    // - return true\n    const prevLine = state.line\n    let ok = false\n\n    for (let i = 0; i < len; i++) {\n      ok = rules[i](state, line, endLine, false)\n      if (ok) {\n        if (prevLine >= state.line) {\n          throw new Error(\"block rule didn't increment state.line\")\n        }\n        break\n      }\n    }\n\n    // this can only happen if user disables paragraph rule\n    if (!ok) throw new Error('none of the block rules matched')\n\n    // set state.tight if we had an empty line before current tag\n    // i.e. latest empty line should not count\n    state.tight = !hasEmptyLines\n\n    // paragraph might \"eat\" one newline after it in nested lists\n    if (state.isEmpty(state.line - 1)) {\n      hasEmptyLines = true\n    }\n\n    line = state.line\n\n    if (line < endLine && state.isEmpty(line)) {\n      hasEmptyLines = true\n      line++\n      state.line = line\n    }\n  }\n}\n\n/**\n * ParserBlock.parse(str, md, env, outTokens)\n *\n * Process input string and push block tokens into `outTokens`\n **/\nParserBlock.prototype.parse = function (src, md, env, outTokens) {\n  if (!src) { return }\n\n  const state = new this.State(src, md, env, outTokens)\n\n  this.tokenize(state, state.line, state.lineMax)\n}\n\nParserBlock.prototype.State = StateBlock\n\nexport default ParserBlock\n","// Code block (4 spaces padded)\n\nexport default function code (state, startLine, endLine/*, silent */) {\n  if (state.sCount[startLine] - state.blkIndent < 4) { return false }\n\n  let nextLine = startLine + 1\n  let last = nextLine\n\n  while (nextLine < endLine) {\n    if (state.isEmpty(nextLine)) {\n      nextLine++\n      continue\n    }\n\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      nextLine++\n      last = nextLine\n      continue\n    }\n    break\n  }\n\n  state.line = last\n\n  const token   = state.push('code_block', 'code', 0)\n  token.content = state.getLines(startLine, last, 4 + state.blkIndent, false) + '\\n'\n  token.map     = [startLine, state.line]\n\n  return true\n}\n","// fences (``` lang, ~~~ lang)\n\nexport default function fence (state, startLine, endLine, silent) {\n  let pos = state.bMarks[startLine] + state.tShift[startLine]\n  let max = state.eMarks[startLine]\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false }\n\n  if (pos + 3 > max) { return false }\n\n  const marker = state.src.charCodeAt(pos)\n\n  if (marker !== 0x7E/* ~ */ && marker !== 0x60 /* ` */) {\n    return false\n  }\n\n  // scan marker length\n  let mem = pos\n  pos = state.skipChars(pos, marker)\n\n  let len = pos - mem\n\n  if (len < 3) { return false }\n\n  const markup = state.src.slice(mem, pos)\n  const params = state.src.slice(pos, max)\n\n  if (marker === 0x60 /* ` */) {\n    if (params.indexOf(String.fromCharCode(marker)) >= 0) {\n      return false\n    }\n  }\n\n  // Since start is found, we can report success here in validation mode\n  if (silent) { return true }\n\n  // search end of block\n  let nextLine = startLine\n  let haveEndMarker = false\n\n  for (;;) {\n    nextLine++\n    if (nextLine >= endLine) {\n      // unclosed block should be autoclosed by end of document.\n      // also block seems to be autoclosed by end of parent\n      break\n    }\n\n    pos = mem = state.bMarks[nextLine] + state.tShift[nextLine]\n    max = state.eMarks[nextLine]\n\n    if (pos < max && state.sCount[nextLine] < state.blkIndent) {\n      // non-empty line with negative indent should stop the list:\n      // - ```\n      //  test\n      break\n    }\n\n    if (state.src.charCodeAt(pos) !== marker) { continue }\n\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      // closing fence should be indented less than 4 spaces\n      continue\n    }\n\n    pos = state.skipChars(pos, marker)\n\n    // closing code fence must be at least as long as the opening one\n    if (pos - mem < len) { continue }\n\n    // make sure tail has spaces only\n    pos = state.skipSpaces(pos)\n\n    if (pos < max) { continue }\n\n    haveEndMarker = true\n    // found!\n    break\n  }\n\n  // If a fence has heading spaces, they should be removed from its inner block\n  len = state.sCount[startLine]\n\n  state.line = nextLine + (haveEndMarker ? 1 : 0)\n\n  const token   = state.push('fence', 'code', 0)\n  token.info    = params\n  token.content = state.getLines(startLine + 1, nextLine, len, true)\n  token.markup  = markup\n  token.map     = [startLine, state.line]\n\n  return true\n}\n","// Block quotes\n\nimport { isSpace } from '../common/utils.mjs'\n\nexport default function blockquote (state, startLine, endLine, silent) {\n  let pos = state.bMarks[startLine] + state.tShift[startLine]\n  let max = state.eMarks[startLine]\n\n  const oldLineMax = state.lineMax\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false }\n\n  // check the block quote marker\n  if (state.src.charCodeAt(pos) !== 0x3E/* > */) { return false }\n\n  // we know that it's going to be a valid blockquote,\n  // so no point trying to find the end of it in silent mode\n  if (silent) { return true }\n\n  const oldBMarks  = []\n  const oldBSCount = []\n  const oldSCount  = []\n  const oldTShift  = []\n\n  const terminatorRules = state.md.block.ruler.getRules('blockquote')\n\n  const oldParentType = state.parentType\n  state.parentType = 'blockquote'\n  let lastLineEmpty = false\n  let nextLine\n\n  // Search the end of the block\n  //\n  // Block ends with either:\n  //  1. an empty line outside:\n  //     ```\n  //     > test\n  //\n  //     ```\n  //  2. an empty line inside:\n  //     ```\n  //     >\n  //     test\n  //     ```\n  //  3. another tag:\n  //     ```\n  //     > test\n  //      - - -\n  //     ```\n  for (nextLine = startLine; nextLine < endLine; nextLine++) {\n    // check if it's outdented, i.e. it's inside list item and indented\n    // less than said list item:\n    //\n    // ```\n    // 1. anything\n    //    > current blockquote\n    // 2. checking this line\n    // ```\n    const isOutdented = state.sCount[nextLine] < state.blkIndent\n\n    pos = state.bMarks[nextLine] + state.tShift[nextLine]\n    max = state.eMarks[nextLine]\n\n    if (pos >= max) {\n      // Case 1: line is not inside the blockquote, and this line is empty.\n      break\n    }\n\n    if (state.src.charCodeAt(pos++) === 0x3E/* > */ && !isOutdented) {\n      // This line is inside the blockquote.\n\n      // set offset past spaces and \">\"\n      let initial = state.sCount[nextLine] + 1\n      let spaceAfterMarker\n      let adjustTab\n\n      // skip one optional space after '>'\n      if (state.src.charCodeAt(pos) === 0x20 /* space */) {\n        // ' >   test '\n        //     ^ -- position start of line here:\n        pos++\n        initial++\n        adjustTab = false\n        spaceAfterMarker = true\n      } else if (state.src.charCodeAt(pos) === 0x09 /* tab */) {\n        spaceAfterMarker = true\n\n        if ((state.bsCount[nextLine] + initial) % 4 === 3) {\n          // '  >\\t  test '\n          //       ^ -- position start of line here (tab has width===1)\n          pos++\n          initial++\n          adjustTab = false\n        } else {\n          // ' >\\t  test '\n          //    ^ -- position start of line here + shift bsCount slightly\n          //         to make extra space appear\n          adjustTab = true\n        }\n      } else {\n        spaceAfterMarker = false\n      }\n\n      let offset = initial\n      oldBMarks.push(state.bMarks[nextLine])\n      state.bMarks[nextLine] = pos\n\n      while (pos < max) {\n        const ch = state.src.charCodeAt(pos)\n\n        if (isSpace(ch)) {\n          if (ch === 0x09) {\n            offset += 4 - (offset + state.bsCount[nextLine] + (adjustTab ? 1 : 0)) % 4\n          } else {\n            offset++\n          }\n        } else {\n          break\n        }\n\n        pos++\n      }\n\n      lastLineEmpty = pos >= max\n\n      oldBSCount.push(state.bsCount[nextLine])\n      state.bsCount[nextLine] = state.sCount[nextLine] + 1 + (spaceAfterMarker ? 1 : 0)\n\n      oldSCount.push(state.sCount[nextLine])\n      state.sCount[nextLine] = offset - initial\n\n      oldTShift.push(state.tShift[nextLine])\n      state.tShift[nextLine] = pos - state.bMarks[nextLine]\n      continue\n    }\n\n    // Case 2: line is not inside the blockquote, and the last line was empty.\n    if (lastLineEmpty) { break }\n\n    // Case 3: another tag found.\n    let terminate = false\n    for (let i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true\n        break\n      }\n    }\n\n    if (terminate) {\n      // Quirk to enforce \"hard termination mode\" for paragraphs;\n      // normally if you call `tokenize(state, startLine, nextLine)`,\n      // paragraphs will look below nextLine for paragraph continuation,\n      // but if blockquote is terminated by another tag, they shouldn't\n      state.lineMax = nextLine\n\n      if (state.blkIndent !== 0) {\n        // state.blkIndent was non-zero, we now set it to zero,\n        // so we need to re-calculate all offsets to appear as\n        // if indent wasn't changed\n        oldBMarks.push(state.bMarks[nextLine])\n        oldBSCount.push(state.bsCount[nextLine])\n        oldTShift.push(state.tShift[nextLine])\n        oldSCount.push(state.sCount[nextLine])\n        state.sCount[nextLine] -= state.blkIndent\n      }\n\n      break\n    }\n\n    oldBMarks.push(state.bMarks[nextLine])\n    oldBSCount.push(state.bsCount[nextLine])\n    oldTShift.push(state.tShift[nextLine])\n    oldSCount.push(state.sCount[nextLine])\n\n    // A negative indentation means that this is a paragraph continuation\n    //\n    state.sCount[nextLine] = -1\n  }\n\n  const oldIndent = state.blkIndent\n  state.blkIndent = 0\n\n  const token_o  = state.push('blockquote_open', 'blockquote', 1)\n  token_o.markup = '>'\n  const lines = [startLine, 0]\n  token_o.map    = lines\n\n  state.md.block.tokenize(state, startLine, nextLine)\n\n  const token_c  = state.push('blockquote_close', 'blockquote', -1)\n  token_c.markup = '>'\n\n  state.lineMax = oldLineMax\n  state.parentType = oldParentType\n  lines[1] = state.line\n\n  // Restore original tShift; this might not be necessary since the parser\n  // has already been here, but just to make sure we can do that.\n  for (let i = 0; i < oldTShift.length; i++) {\n    state.bMarks[i + startLine] = oldBMarks[i]\n    state.tShift[i + startLine] = oldTShift[i]\n    state.sCount[i + startLine] = oldSCount[i]\n    state.bsCount[i + startLine] = oldBSCount[i]\n  }\n  state.blkIndent = oldIndent\n\n  return true\n}\n","// Horizontal rule\n\nimport { isSpace } from '../common/utils.mjs'\n\nexport default function hr (state, startLine, endLine, silent) {\n  const max = state.eMarks[startLine]\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false }\n\n  let pos = state.bMarks[startLine] + state.tShift[startLine]\n  const marker = state.src.charCodeAt(pos++)\n\n  // Check hr marker\n  if (marker !== 0x2A/* * */ &&\n      marker !== 0x2D/* - */ &&\n      marker !== 0x5F/* _ */) {\n    return false\n  }\n\n  // markers can be mixed with spaces, but there should be at least 3 of them\n\n  let cnt = 1\n  while (pos < max) {\n    const ch = state.src.charCodeAt(pos++)\n    if (ch !== marker && !isSpace(ch)) { return false }\n    if (ch === marker) { cnt++ }\n  }\n\n  if (cnt < 3) { return false }\n\n  if (silent) { return true }\n\n  state.line = startLine + 1\n\n  const token  = state.push('hr', 'hr', 0)\n  token.map    = [startLine, state.line]\n  token.markup = Array(cnt + 1).join(String.fromCharCode(marker))\n\n  return true\n}\n","import { isSpace, normalizeReference } from '../common/utils.mjs'\n\nexport default function reference (state, startLine, _endLine, silent) {\n  let pos = state.bMarks[startLine] + state.tShift[startLine]\n  let max = state.eMarks[startLine]\n  let nextLine = startLine + 1\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false }\n\n  if (state.src.charCodeAt(pos) !== 0x5B/* [ */) { return false }\n\n  function getNextLine (nextLine) {\n    const endLine = state.lineMax\n\n    if (nextLine >= endLine || state.isEmpty(nextLine)) {\n      // empty line or end of input\n      return null\n    }\n\n    let isContinuation = false\n\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { isContinuation = true }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { isContinuation = true }\n\n    if (!isContinuation) {\n      const terminatorRules = state.md.block.ruler.getRules('reference')\n      const oldParentType = state.parentType\n      state.parentType = 'reference'\n\n      // Some tags can terminate paragraph without empty line.\n      let terminate = false\n      for (let i = 0, l = terminatorRules.length; i < l; i++) {\n        if (terminatorRules[i](state, nextLine, endLine, true)) {\n          terminate = true\n          break\n        }\n      }\n\n      state.parentType = oldParentType\n      if (terminate) {\n        // terminated by another block\n        return null\n      }\n    }\n\n    const pos = state.bMarks[nextLine] + state.tShift[nextLine]\n    const max = state.eMarks[nextLine]\n\n    // max + 1 explicitly includes the newline\n    return state.src.slice(pos, max + 1)\n  }\n\n  let str = state.src.slice(pos, max + 1)\n\n  max = str.length\n  let labelEnd = -1\n\n  for (pos = 1; pos < max; pos++) {\n    const ch = str.charCodeAt(pos)\n    if (ch === 0x5B /* [ */) {\n      return false\n    } else if (ch === 0x5D /* ] */) {\n      labelEnd = pos\n      break\n    } else if (ch === 0x0A /* \\n */) {\n      const lineContent = getNextLine(nextLine)\n      if (lineContent !== null) {\n        str += lineContent\n        max = str.length\n        nextLine++\n      }\n    } else if (ch === 0x5C /* \\ */) {\n      pos++\n      if (pos < max && str.charCodeAt(pos) === 0x0A) {\n        const lineContent = getNextLine(nextLine)\n        if (lineContent !== null) {\n          str += lineContent\n          max = str.length\n          nextLine++\n        }\n      }\n    }\n  }\n\n  if (labelEnd < 0 || str.charCodeAt(labelEnd + 1) !== 0x3A/* : */) { return false }\n\n  // [label]:   destination   'title'\n  //         ^^^ skip optional whitespace here\n  for (pos = labelEnd + 2; pos < max; pos++) {\n    const ch = str.charCodeAt(pos)\n    if (ch === 0x0A) {\n      const lineContent = getNextLine(nextLine)\n      if (lineContent !== null) {\n        str += lineContent\n        max = str.length\n        nextLine++\n      }\n    } else if (isSpace(ch)) {\n      /* eslint no-empty:0 */\n    } else {\n      break\n    }\n  }\n\n  // [label]:   destination   'title'\n  //            ^^^^^^^^^^^ parse this\n  const destRes = state.md.helpers.parseLinkDestination(str, pos, max)\n  if (!destRes.ok) { return false }\n\n  const href = state.md.normalizeLink(destRes.str)\n  if (!state.md.validateLink(href)) { return false }\n\n  pos = destRes.pos\n\n  // save cursor state, we could require to rollback later\n  const destEndPos = pos\n  const destEndLineNo = nextLine\n\n  // [label]:   destination   'title'\n  //                       ^^^ skipping those spaces\n  const start = pos\n  for (; pos < max; pos++) {\n    const ch = str.charCodeAt(pos)\n    if (ch === 0x0A) {\n      const lineContent = getNextLine(nextLine)\n      if (lineContent !== null) {\n        str += lineContent\n        max = str.length\n        nextLine++\n      }\n    } else if (isSpace(ch)) {\n      /* eslint no-empty:0 */\n    } else {\n      break\n    }\n  }\n\n  // [label]:   destination   'title'\n  //                          ^^^^^^^ parse this\n  let titleRes = state.md.helpers.parseLinkTitle(str, pos, max)\n  while (titleRes.can_continue) {\n    const lineContent = getNextLine(nextLine)\n    if (lineContent === null) break\n    str += lineContent\n    pos = max\n    max = str.length\n    nextLine++\n    titleRes = state.md.helpers.parseLinkTitle(str, pos, max, titleRes)\n  }\n  let title\n\n  if (pos < max && start !== pos && titleRes.ok) {\n    title = titleRes.str\n    pos = titleRes.pos\n  } else {\n    title = ''\n    pos = destEndPos\n    nextLine = destEndLineNo\n  }\n\n  // skip trailing spaces until the rest of the line\n  while (pos < max) {\n    const ch = str.charCodeAt(pos)\n    if (!isSpace(ch)) { break }\n    pos++\n  }\n\n  if (pos < max && str.charCodeAt(pos) !== 0x0A) {\n    if (title) {\n      // garbage at the end of the line after title,\n      // but it could still be a valid reference if we roll back\n      title = ''\n      pos = destEndPos\n      nextLine = destEndLineNo\n      while (pos < max) {\n        const ch = str.charCodeAt(pos)\n        if (!isSpace(ch)) { break }\n        pos++\n      }\n    }\n  }\n\n  if (pos < max && str.charCodeAt(pos) !== 0x0A) {\n    // garbage at the end of the line\n    return false\n  }\n\n  const label = normalizeReference(str.slice(1, labelEnd))\n  if (!label) {\n    // CommonMark 0.20 disallows empty labels\n    return false\n  }\n\n  // Reference can not terminate anything. This check is for safety only.\n  /* istanbul ignore if */\n  if (silent) { return true }\n\n  if (typeof state.env.references === 'undefined') {\n    state.env.references = {}\n  }\n  if (typeof state.env.references[label] === 'undefined') {\n    state.env.references[label] = { title, href }\n  }\n\n  state.line = nextLine\n  return true\n}\n","// heading (#, ##, ...)\n\nimport { isSpace } from '../common/utils.mjs'\n\nexport default function heading (state, startLine, endLine, silent) {\n  let pos = state.bMarks[startLine] + state.tShift[startLine]\n  let max = state.eMarks[startLine]\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false }\n\n  let ch  = state.src.charCodeAt(pos)\n\n  if (ch !== 0x23/* # */ || pos >= max) { return false }\n\n  // count heading level\n  let level = 1\n  ch = state.src.charCodeAt(++pos)\n  while (ch === 0x23/* # */ && pos < max && level <= 6) {\n    level++\n    ch = state.src.charCodeAt(++pos)\n  }\n\n  if (level > 6 || (pos < max && !isSpace(ch))) { return false }\n\n  if (silent) { return true }\n\n  // Let's cut tails like '    ###  ' from the end of string\n\n  max = state.skipSpacesBack(max, pos)\n  const tmp = state.skipCharsBack(max, 0x23, pos) // #\n  if (tmp > pos && isSpace(state.src.charCodeAt(tmp - 1))) {\n    max = tmp\n  }\n\n  state.line = startLine + 1\n\n  const token_o  = state.push('heading_open', 'h' + String(level), 1)\n  token_o.markup = '########'.slice(0, level)\n  token_o.map    = [startLine, state.line]\n\n  const token_i    = state.push('inline', '', 0)\n  token_i.content  = state.src.slice(pos, max).trim()\n  token_i.map      = [startLine, state.line]\n  token_i.children = []\n\n  const token_c  = state.push('heading_close', 'h' + String(level), -1)\n  token_c.markup = '########'.slice(0, level)\n\n  return true\n}\n","// lheading (---, ===)\n\nexport default function lheading (state, startLine, endLine/*, silent */) {\n  const terminatorRules = state.md.block.ruler.getRules('paragraph')\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false }\n\n  const oldParentType = state.parentType\n  state.parentType = 'paragraph' // use paragraph to match terminatorRules\n\n  // jump line-by-line until empty one or EOF\n  let level = 0\n  let marker\n  let nextLine = startLine + 1\n\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue }\n\n    //\n    // Check for underline in setext header\n    //\n    if (state.sCount[nextLine] >= state.blkIndent) {\n      let pos = state.bMarks[nextLine] + state.tShift[nextLine]\n      const max = state.eMarks[nextLine]\n\n      if (pos < max) {\n        marker = state.src.charCodeAt(pos)\n\n        if (marker === 0x2D/* - */ || marker === 0x3D/* = */) {\n          pos = state.skipChars(pos, marker)\n          pos = state.skipSpaces(pos)\n\n          if (pos >= max) {\n            level = (marker === 0x3D/* = */ ? 1 : 2)\n            break\n          }\n        }\n      }\n    }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue }\n\n    // Some tags can terminate paragraph without empty line.\n    let terminate = false\n    for (let i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true\n        break\n      }\n    }\n    if (terminate) { break }\n  }\n\n  if (!level) {\n    // Didn't find valid underline\n    return false\n  }\n\n  const content = state.getLines(startLine, nextLine, state.blkIndent, false).trim()\n\n  state.line = nextLine + 1\n\n  const token_o    = state.push('heading_open', 'h' + String(level), 1)\n  token_o.markup   = String.fromCharCode(marker)\n  token_o.map      = [startLine, state.line]\n\n  const token_i    = state.push('inline', '', 0)\n  token_i.content  = content\n  token_i.map      = [startLine, state.line - 1]\n  token_i.children = []\n\n  const token_c    = state.push('heading_close', 'h' + String(level), -1)\n  token_c.markup   = String.fromCharCode(marker)\n\n  state.parentType = oldParentType\n\n  return true\n}\n","// Paragraph\n\nexport default function paragraph (state, startLine, endLine) {\n  const terminatorRules = state.md.block.ruler.getRules('paragraph')\n  const oldParentType = state.parentType\n  let nextLine = startLine + 1\n  state.parentType = 'paragraph'\n\n  // jump line-by-line until empty one or EOF\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue }\n\n    // Some tags can terminate paragraph without empty line.\n    let terminate = false\n    for (let i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true\n        break\n      }\n    }\n    if (terminate) { break }\n  }\n\n  const content = state.getLines(startLine, nextLine, state.blkIndent, false).trim()\n\n  state.line = nextLine\n\n  const token_o    = state.push('paragraph_open', 'p', 1)\n  token_o.map      = [startLine, state.line]\n\n  const token_i    = state.push('inline', '', 0)\n  token_i.content  = content\n  token_i.map      = [startLine, state.line]\n  token_i.children = []\n\n  state.push('paragraph_close', 'p', -1)\n\n  state.parentType = oldParentType\n\n  return true\n}\n","// Inline parser state\n\nimport Token from '../token.mjs'\nimport { isWhiteSpace, isPunctChar, isMdAsciiPunct } from '../common/utils.mjs'\n\nfunction StateInline (src, md, env, outTokens) {\n  this.src = src\n  this.env = env\n  this.md = md\n  this.tokens = outTokens\n  this.tokens_meta = Array(outTokens.length)\n\n  this.pos = 0\n  this.posMax = this.src.length\n  this.level = 0\n  this.pending = ''\n  this.pendingLevel = 0\n\n  // Stores { start: end } pairs. Useful for backtrack\n  // optimization of pairs parse (emphasis, strikes).\n  this.cache = {}\n\n  // List of emphasis-like delimiters for current tag\n  this.delimiters = []\n\n  // Stack of delimiter lists for upper level tags\n  this._prev_delimiters = []\n\n  // backtick length => last seen position\n  this.backticks = {}\n  this.backticksScanned = false\n\n  // Counter used to disable inline linkify-it execution\n  // inside <a> and markdown links\n  this.linkLevel = 0\n}\n\n// Flush pending text\n//\nStateInline.prototype.pushPending = function () {\n  const token = new Token('text', '', 0)\n  token.content = this.pending\n  token.level = this.pendingLevel\n  this.tokens.push(token)\n  this.pending = ''\n  return token\n}\n\n// Push new token to \"stream\".\n// If pending text exists - flush it as text token\n//\nStateInline.prototype.push = function (type, tag, nesting) {\n  if (this.pending) {\n    this.pushPending()\n  }\n\n  const token = new Token(type, tag, nesting)\n  let token_meta = null\n\n  if (nesting < 0) {\n    // closing tag\n    this.level--\n    this.delimiters = this._prev_delimiters.pop()\n  }\n\n  token.level = this.level\n\n  if (nesting > 0) {\n    // opening tag\n    this.level++\n    this._prev_delimiters.push(this.delimiters)\n    this.delimiters = []\n    token_meta = { delimiters: this.delimiters }\n  }\n\n  this.pendingLevel = this.level\n  this.tokens.push(token)\n  this.tokens_meta.push(token_meta)\n  return token\n}\n\n// Scan a sequence of emphasis-like markers, and determine whether\n// it can start an emphasis sequence or end an emphasis sequence.\n//\n//  - start - position to scan from (it should point at a valid marker);\n//  - canSplitWord - determine if these markers can be found inside a word\n//\nStateInline.prototype.scanDelims = function (start, canSplitWord) {\n  const max = this.posMax\n  const marker = this.src.charCodeAt(start)\n\n  // treat beginning of the line as a whitespace\n  const lastChar = start > 0 ? this.src.charCodeAt(start - 1) : 0x20\n\n  let pos = start\n  while (pos < max && this.src.charCodeAt(pos) === marker) { pos++ }\n\n  const count = pos - start\n\n  // treat end of the line as a whitespace\n  const nextChar = pos < max ? this.src.charCodeAt(pos) : 0x20\n\n  const isLastPunctChar = isMdAsciiPunct(lastChar) || isPunctChar(String.fromCharCode(lastChar))\n  const isNextPunctChar = isMdAsciiPunct(nextChar) || isPunctChar(String.fromCharCode(nextChar))\n\n  const isLastWhiteSpace = isWhiteSpace(lastChar)\n  const isNextWhiteSpace = isWhiteSpace(nextChar)\n\n  const left_flanking =\n    !isNextWhiteSpace && (!isNextPunctChar || isLastWhiteSpace || isLastPunctChar)\n  const right_flanking =\n    !isLastWhiteSpace && (!isLastPunctChar || isNextWhiteSpace || isNextPunctChar)\n\n  const can_open  = left_flanking  && (canSplitWord || !right_flanking || isLastPunctChar)\n  const can_close = right_flanking && (canSplitWord || !left_flanking  || isNextPunctChar)\n\n  return { can_open, can_close, length: count }\n}\n\n// re-export Token class to use in block rules\nStateInline.prototype.Token = Token\n\nexport default StateInline\n","// Skip text characters for text token, place those to pending buffer\n// and increment current pos\n\n// Rule to skip pure text\n// '{}$%@~+=:' reserved for extentions\n\n// !, \", #, $, %, &, ', (, ), *, +, ,, -, ., /, :, ;, <, =, >, ?, @, [, \\, ], ^, _, `, {, |, }, or ~\n\n// !!!! Don't confuse with \"Markdown ASCII Punctuation\" chars\n// http://spec.commonmark.org/0.15/#ascii-punctuation-character\nfunction isTerminatorChar (ch) {\n  switch (ch) {\n    case 0x0A/* \\n */:\n    case 0x21/* ! */:\n    case 0x23/* # */:\n    case 0x24/* $ */:\n    case 0x25/* % */:\n    case 0x26/* & */:\n    case 0x2A/* * */:\n    case 0x2B/* + */:\n    case 0x2D/* - */:\n    case 0x3A/* : */:\n    case 0x3C/* < */:\n    case 0x3D/* = */:\n    case 0x3E/* > */:\n    case 0x40/* @ */:\n    case 0x5B/* [ */:\n    case 0x5C/* \\ */:\n    case 0x5D/* ] */:\n    case 0x5E/* ^ */:\n    case 0x5F/* _ */:\n    case 0x60/* ` */:\n    case 0x7B/* { */:\n    case 0x7D/* } */:\n    case 0x7E/* ~ */:\n      return true\n    default:\n      return false\n  }\n}\n\nexport default function text (state, silent) {\n  let pos = state.pos\n\n  while (pos < state.posMax && !isTerminatorChar(state.src.charCodeAt(pos))) {\n    pos++\n  }\n\n  if (pos === state.pos) { return false }\n\n  if (!silent) { state.pending += state.src.slice(state.pos, pos) }\n\n  state.pos = pos\n\n  return true\n}\n\n// Alternative implementation, for memory.\n//\n// It costs 10% of performance, but allows extend terminators list, if place it\n// to `ParserInline` property. Probably, will switch to it sometime, such\n// flexibility required.\n\n/*\nvar TERMINATOR_RE = /[\\n!#$%&*+\\-:<=>@[\\\\\\]^_`{}~]/;\n\nmodule.exports = function text(state, silent) {\n  var pos = state.pos,\n      idx = state.src.slice(pos).search(TERMINATOR_RE);\n\n  // first char is terminator -> empty text\n  if (idx === 0) { return false; }\n\n  // no terminator -> text till end of string\n  if (idx < 0) {\n    if (!silent) { state.pending += state.src.slice(pos); }\n    state.pos = state.src.length;\n    return true;\n  }\n\n  if (!silent) { state.pending += state.src.slice(pos, pos + idx); }\n\n  state.pos += idx;\n\n  return true;\n}; */\n","// Process links like https://example.org/\n\n// RFC3986: scheme = ALPHA *( ALPHA / DIGIT / \"+\" / \"-\" / \".\" )\nconst SCHEME_RE = /(?:^|[^a-z0-9.+-])([a-z][a-z0-9.+-]*)$/i\n\nexport default function linkify (state, silent) {\n  if (!state.md.options.linkify) return false\n  if (state.linkLevel > 0) return false\n\n  const pos = state.pos\n  const max = state.posMax\n\n  if (pos + 3 > max) return false\n  if (state.src.charCodeAt(pos) !== 0x3A/* : */) return false\n  if (state.src.charCodeAt(pos + 1) !== 0x2F/* / */) return false\n  if (state.src.charCodeAt(pos + 2) !== 0x2F/* / */) return false\n\n  const match = state.pending.match(SCHEME_RE)\n  if (!match) return false\n\n  const proto = match[1]\n\n  const link = state.md.linkify.matchAtStart(state.src.slice(pos - proto.length))\n  if (!link) return false\n\n  let url = link.url\n\n  // invalid link, but still detected by linkify somehow;\n  // need to check to prevent infinite loop below\n  if (url.length <= proto.length) return false\n\n  // disallow '*' at the end of the link (conflicts with emphasis)\n  url = url.replace(/\\*+$/, '')\n\n  const fullUrl = state.md.normalizeLink(url)\n  if (!state.md.validateLink(fullUrl)) return false\n\n  if (!silent) {\n    state.pending = state.pending.slice(0, -proto.length)\n\n    const token_o = state.push('link_open', 'a', 1)\n    token_o.attrs = [['href', fullUrl]]\n    token_o.markup = 'linkify'\n    token_o.info = 'auto'\n\n    const token_t = state.push('text', '', 0)\n    token_t.content = state.md.normalizeLinkText(url)\n\n    const token_c = state.push('link_close', 'a', -1)\n    token_c.markup = 'linkify'\n    token_c.info = 'auto'\n  }\n\n  state.pos += url.length - proto.length\n  return true\n}\n","// Process escaped chars and hardbreaks\n\nimport { isSpace } from '../common/utils.mjs'\n\nconst ESCAPED = []\n\nfor (let i = 0; i < 256; i++) { ESCAPED.push(0) }\n\n'\\\\!\"#$%&\\'()*+,./:;<=>?@[]^_`{|}~-'\n  .split('').forEach(function (ch) { ESCAPED[ch.charCodeAt(0)] = 1 })\n\nexport default function escape (state, silent) {\n  let pos = state.pos\n  const max = state.posMax\n\n  if (state.src.charCodeAt(pos) !== 0x5C/* \\ */) return false\n  pos++\n\n  // '\\' at the end of the inline block\n  if (pos >= max) return false\n\n  let ch1 = state.src.charCodeAt(pos)\n\n  if (ch1 === 0x0A) {\n    if (!silent) {\n      state.push('hardbreak', 'br', 0)\n    }\n\n    pos++\n    // skip leading whitespaces from next line\n    while (pos < max) {\n      ch1 = state.src.charCodeAt(pos)\n      if (!isSpace(ch1)) break\n      pos++\n    }\n\n    state.pos = pos\n    return true\n  }\n\n  let escapedStr = state.src[pos]\n\n  if (ch1 >= 0xD800 && ch1 <= 0xDBFF && pos + 1 < max) {\n    const ch2 = state.src.charCodeAt(pos + 1)\n\n    if (ch2 >= 0xDC00 && ch2 <= 0xDFFF) {\n      escapedStr += state.src[pos + 1]\n      pos++\n    }\n  }\n\n  const origStr = '\\\\' + escapedStr\n\n  if (!silent) {\n    const token = state.push('text_special', '', 0)\n\n    if (ch1 < 256 && ESCAPED[ch1] !== 0) {\n      token.content = escapedStr\n    } else {\n      token.content = origStr\n    }\n\n    token.markup = origStr\n    token.info   = 'escape'\n  }\n\n  state.pos = pos + 1\n  return true\n}\n","// ~~strike through~~\n//\n\n// Insert each marker as a separate text token, and add it to delimiter list\n//\nfunction strikethrough_tokenize (state, silent) {\n  const start = state.pos\n  const marker = state.src.charCodeAt(start)\n\n  if (silent) { return false }\n\n  if (marker !== 0x7E/* ~ */) { return false }\n\n  const scanned = state.scanDelims(state.pos, true)\n  let len = scanned.length\n  const ch = String.fromCharCode(marker)\n\n  if (len < 2) { return false }\n\n  let token\n\n  if (len % 2) {\n    token         = state.push('text', '', 0)\n    token.content = ch\n    len--\n  }\n\n  for (let i = 0; i < len; i += 2) {\n    token         = state.push('text', '', 0)\n    token.content = ch + ch\n\n    state.delimiters.push({\n      marker,\n      length: 0,     // disable \"rule of 3\" length checks meant for emphasis\n      token: state.tokens.length - 1,\n      end: -1,\n      open: scanned.can_open,\n      close: scanned.can_close\n    })\n  }\n\n  state.pos += scanned.length\n\n  return true\n}\n\nfunction postProcess (state, delimiters) {\n  let token\n  const loneMarkers = []\n  const max = delimiters.length\n\n  for (let i = 0; i < max; i++) {\n    const startDelim = delimiters[i]\n\n    if (startDelim.marker !== 0x7E/* ~ */) {\n      continue\n    }\n\n    if (startDelim.end === -1) {\n      continue\n    }\n\n    const endDelim = delimiters[startDelim.end]\n\n    token         = state.tokens[startDelim.token]\n    token.type    = 's_open'\n    token.tag     = 's'\n    token.nesting = 1\n    token.markup  = '~~'\n    token.content = ''\n\n    token         = state.tokens[endDelim.token]\n    token.type    = 's_close'\n    token.tag     = 's'\n    token.nesting = -1\n    token.markup  = '~~'\n    token.content = ''\n\n    if (state.tokens[endDelim.token - 1].type === 'text' &&\n        state.tokens[endDelim.token - 1].content === '~') {\n      loneMarkers.push(endDelim.token - 1)\n    }\n  }\n\n  // If a marker sequence has an odd number of characters, it's splitted\n  // like this: `~~~~~` -> `~` + `~~` + `~~`, leaving one marker at the\n  // start of the sequence.\n  //\n  // So, we have to move all those markers after subsequent s_close tags.\n  //\n  while (loneMarkers.length) {\n    const i = loneMarkers.pop()\n    let j = i + 1\n\n    while (j < state.tokens.length && state.tokens[j].type === 's_close') {\n      j++\n    }\n\n    j--\n\n    if (i !== j) {\n      token = state.tokens[j]\n      state.tokens[j] = state.tokens[i]\n      state.tokens[i] = token\n    }\n  }\n}\n\n// Walk through delimiter list and replace text tokens with tags\n//\nfunction strikethrough_postProcess (state) {\n  const tokens_meta = state.tokens_meta\n  const max = state.tokens_meta.length\n\n  postProcess(state, state.delimiters)\n\n  for (let curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      postProcess(state, tokens_meta[curr].delimiters)\n    }\n  }\n}\n\nexport default {\n  tokenize: strikethrough_tokenize,\n  postProcess: strikethrough_postProcess\n}\n","// Process *this* and _that_\n//\n\n// Insert each marker as a separate text token, and add it to delimiter list\n//\nfunction emphasis_tokenize (state, silent) {\n  const start = state.pos\n  const marker = state.src.charCodeAt(start)\n\n  if (silent) { return false }\n\n  if (marker !== 0x5F /* _ */ && marker !== 0x2A /* * */) { return false }\n\n  const scanned = state.scanDelims(state.pos, marker === 0x2A)\n\n  for (let i = 0; i < scanned.length; i++) {\n    const token = state.push('text', '', 0)\n    token.content = String.fromCharCode(marker)\n\n    state.delimiters.push({\n      // Char code of the starting marker (number).\n      //\n      marker,\n\n      // Total length of these series of delimiters.\n      //\n      length: scanned.length,\n\n      // A position of the token this delimiter corresponds to.\n      //\n      token: state.tokens.length - 1,\n\n      // If this delimiter is matched as a valid opener, `end` will be\n      // equal to its position, otherwise it's `-1`.\n      //\n      end: -1,\n\n      // Boolean flags that determine if this delimiter could open or close\n      // an emphasis.\n      //\n      open: scanned.can_open,\n      close: scanned.can_close\n    })\n  }\n\n  state.pos += scanned.length\n\n  return true\n}\n\nfunction postProcess (state, delimiters) {\n  const max = delimiters.length\n\n  for (let i = max - 1; i >= 0; i--) {\n    const startDelim = delimiters[i]\n\n    if (startDelim.marker !== 0x5F/* _ */ && startDelim.marker !== 0x2A/* * */) {\n      continue\n    }\n\n    // Process only opening markers\n    if (startDelim.end === -1) {\n      continue\n    }\n\n    const endDelim = delimiters[startDelim.end]\n\n    // If the previous delimiter has the same marker and is adjacent to this one,\n    // merge those into one strong delimiter.\n    //\n    // `<em><em>whatever</em></em>` -> `<strong>whatever</strong>`\n    //\n    const isStrong = i > 0 &&\n               delimiters[i - 1].end === startDelim.end + 1 &&\n               // check that first two markers match and adjacent\n               delimiters[i - 1].marker === startDelim.marker &&\n               delimiters[i - 1].token === startDelim.token - 1 &&\n               // check that last two markers are adjacent (we can safely assume they match)\n               delimiters[startDelim.end + 1].token === endDelim.token + 1\n\n    const ch = String.fromCharCode(startDelim.marker)\n\n    const token_o   = state.tokens[startDelim.token]\n    token_o.type    = isStrong ? 'strong_open' : 'em_open'\n    token_o.tag     = isStrong ? 'strong' : 'em'\n    token_o.nesting = 1\n    token_o.markup  = isStrong ? ch + ch : ch\n    token_o.content = ''\n\n    const token_c   = state.tokens[endDelim.token]\n    token_c.type    = isStrong ? 'strong_close' : 'em_close'\n    token_c.tag     = isStrong ? 'strong' : 'em'\n    token_c.nesting = -1\n    token_c.markup  = isStrong ? ch + ch : ch\n    token_c.content = ''\n\n    if (isStrong) {\n      state.tokens[delimiters[i - 1].token].content = ''\n      state.tokens[delimiters[startDelim.end + 1].token].content = ''\n      i--\n    }\n  }\n}\n\n// Walk through delimiter list and replace text tokens with tags\n//\nfunction emphasis_post_process (state) {\n  const tokens_meta = state.tokens_meta\n  const max = state.tokens_meta.length\n\n  postProcess(state, state.delimiters)\n\n  for (let curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      postProcess(state, tokens_meta[curr].delimiters)\n    }\n  }\n}\n\nexport default {\n  tokenize: emphasis_tokenize,\n  postProcess: emphasis_post_process\n}\n","// Process autolinks '<protocol:...>'\n\n/* eslint max-len:0 */\nconst EMAIL_RE    = /^([a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*)$/\n/* eslint-disable-next-line no-control-regex */\nconst AUTOLINK_RE = /^([a-zA-Z][a-zA-Z0-9+.-]{1,31}):([^<>\\x00-\\x20]*)$/\n\nexport default function autolink (state, silent) {\n  let pos = state.pos\n\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */) { return false }\n\n  const start = state.pos\n  const max = state.posMax\n\n  for (;;) {\n    if (++pos >= max) return false\n\n    const ch = state.src.charCodeAt(pos)\n\n    if (ch === 0x3C /* < */) return false\n    if (ch === 0x3E /* > */) break\n  }\n\n  const url = state.src.slice(start + 1, pos)\n\n  if (AUTOLINK_RE.test(url)) {\n    const fullUrl = state.md.normalizeLink(url)\n    if (!state.md.validateLink(fullUrl)) { return false }\n\n    if (!silent) {\n      const token_o   = state.push('link_open', 'a', 1)\n      token_o.attrs   = [['href', fullUrl]]\n      token_o.markup  = 'autolink'\n      token_o.info    = 'auto'\n\n      const token_t   = state.push('text', '', 0)\n      token_t.content = state.md.normalizeLinkText(url)\n\n      const token_c   = state.push('link_close', 'a', -1)\n      token_c.markup  = 'autolink'\n      token_c.info    = 'auto'\n    }\n\n    state.pos += url.length + 2\n    return true\n  }\n\n  if (EMAIL_RE.test(url)) {\n    const fullUrl = state.md.normalizeLink('mailto:' + url)\n    if (!state.md.validateLink(fullUrl)) { return false }\n\n    if (!silent) {\n      const token_o   = state.push('link_open', 'a', 1)\n      token_o.attrs   = [['href', fullUrl]]\n      token_o.markup  = 'autolink'\n      token_o.info    = 'auto'\n\n      const token_t   = state.push('text', '', 0)\n      token_t.content = state.md.normalizeLinkText(url)\n\n      const token_c   = state.push('link_close', 'a', -1)\n      token_c.markup  = 'autolink'\n      token_c.info    = 'auto'\n    }\n\n    state.pos += url.length + 2\n    return true\n  }\n\n  return false\n}\n","// Process html entity - &#123;, &#xAF;, &quot;, ...\n\nimport { decodeHTML } from 'entities'\nimport { isValidEntityCode, fromCodePoint } from '../common/utils.mjs'\n\nconst DIGITAL_RE = /^&#((?:x[a-f0-9]{1,6}|[0-9]{1,7}));/i\nconst NAMED_RE   = /^&([a-z][a-z0-9]{1,31});/i\n\nexport default function entity (state, silent) {\n  const pos = state.pos\n  const max = state.posMax\n\n  if (state.src.charCodeAt(pos) !== 0x26/* & */) return false\n\n  if (pos + 1 >= max) return false\n\n  const ch = state.src.charCodeAt(pos + 1)\n\n  if (ch === 0x23 /* # */) {\n    const match = state.src.slice(pos).match(DIGITAL_RE)\n    if (match) {\n      if (!silent) {\n        const code = match[1][0].toLowerCase() === 'x' ? parseInt(match[1].slice(1), 16) : parseInt(match[1], 10)\n\n        const token   = state.push('text_special', '', 0)\n        token.content = isValidEntityCode(code) ? fromCodePoint(code) : fromCodePoint(0xFFFD)\n        token.markup  = match[0]\n        token.info    = 'entity'\n      }\n      state.pos += match[0].length\n      return true\n    }\n  } else {\n    const match = state.src.slice(pos).match(NAMED_RE)\n    if (match) {\n      const decoded = decodeHTML(match[0])\n      if (decoded !== match[0]) {\n        if (!silent) {\n          const token   = state.push('text_special', '', 0)\n          token.content = decoded\n          token.markup  = match[0]\n          token.info    = 'entity'\n        }\n        state.pos += match[0].length\n        return true\n      }\n    }\n  }\n\n  return false\n}\n","// For each opening emphasis-like marker find a matching closing one\n//\n\nfunction processDelimiters (delimiters) {\n  const openersBottom = {}\n  const max = delimiters.length\n\n  if (!max) return\n\n  // headerIdx is the first delimiter of the current (where closer is) delimiter run\n  let headerIdx = 0\n  let lastTokenIdx = -2 // needs any value lower than -1\n  const jumps = []\n\n  for (let closerIdx = 0; closerIdx < max; closerIdx++) {\n    const closer = delimiters[closerIdx]\n\n    jumps.push(0)\n\n    // markers belong to same delimiter run if:\n    //  - they have adjacent tokens\n    //  - AND markers are the same\n    //\n    if (delimiters[headerIdx].marker !== closer.marker || lastTokenIdx !== closer.token - 1) {\n      headerIdx = closerIdx\n    }\n\n    lastTokenIdx = closer.token\n\n    // Length is only used for emphasis-specific \"rule of 3\",\n    // if it's not defined (in strikethrough or 3rd party plugins),\n    // we can default it to 0 to disable those checks.\n    //\n    closer.length = closer.length || 0\n\n    if (!closer.close) continue\n\n    // Previously calculated lower bounds (previous fails)\n    // for each marker, each delimiter length modulo 3,\n    // and for whether this closer can be an opener;\n    // https://github.com/commonmark/cmark/commit/34250e12ccebdc6372b8b49c44fab57c72443460\n    /* eslint-disable-next-line no-prototype-builtins */\n    if (!openersBottom.hasOwnProperty(closer.marker)) {\n      openersBottom[closer.marker] = [-1, -1, -1, -1, -1, -1]\n    }\n\n    const minOpenerIdx = openersBottom[closer.marker][(closer.open ? 3 : 0) + (closer.length % 3)]\n\n    let openerIdx = headerIdx - jumps[headerIdx] - 1\n\n    let newMinOpenerIdx = openerIdx\n\n    for (; openerIdx > minOpenerIdx; openerIdx -= jumps[openerIdx] + 1) {\n      const opener = delimiters[openerIdx]\n\n      if (opener.marker !== closer.marker) continue\n\n      if (opener.open && opener.end < 0) {\n        let isOddMatch = false\n\n        // from spec:\n        //\n        // If one of the delimiters can both open and close emphasis, then the\n        // sum of the lengths of the delimiter runs containing the opening and\n        // closing delimiters must not be a multiple of 3 unless both lengths\n        // are multiples of 3.\n        //\n        if (opener.close || closer.open) {\n          if ((opener.length + closer.length) % 3 === 0) {\n            if (opener.length % 3 !== 0 || closer.length % 3 !== 0) {\n              isOddMatch = true\n            }\n          }\n        }\n\n        if (!isOddMatch) {\n          // If previous delimiter cannot be an opener, we can safely skip\n          // the entire sequence in future checks. This is required to make\n          // sure algorithm has linear complexity (see *_*_*_*_*_... case).\n          //\n          const lastJump = openerIdx > 0 && !delimiters[openerIdx - 1].open\n            ? jumps[openerIdx - 1] + 1\n            : 0\n\n          jumps[closerIdx] = closerIdx - openerIdx + lastJump\n          jumps[openerIdx] = lastJump\n\n          closer.open  = false\n          opener.end   = closerIdx\n          opener.close = false\n          newMinOpenerIdx = -1\n          // treat next token as start of run,\n          // it optimizes skips in **<...>**a**<...>** pathological case\n          lastTokenIdx = -2\n          break\n        }\n      }\n    }\n\n    if (newMinOpenerIdx !== -1) {\n      // If match for this delimiter run failed, we want to set lower bound for\n      // future lookups. This is required to make sure algorithm has linear\n      // complexity.\n      //\n      // See details here:\n      // https://github.com/commonmark/cmark/issues/178#issuecomment-270417442\n      //\n      openersBottom[closer.marker][(closer.open ? 3 : 0) + ((closer.length || 0) % 3)] = newMinOpenerIdx\n    }\n  }\n}\n\nexport default function link_pairs (state) {\n  const tokens_meta = state.tokens_meta\n  const max = state.tokens_meta.length\n\n  processDelimiters(state.delimiters)\n\n  for (let curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      processDelimiters(tokens_meta[curr].delimiters)\n    }\n  }\n}\n","/** internal\n * class ParserInline\n *\n * Tokenizes paragraph content.\n **/\n\nimport Ruler from './ruler.mjs'\nimport StateInline from './rules_inline/state_inline.mjs'\n\nimport r_text from './rules_inline/text.mjs'\nimport r_linkify from './rules_inline/linkify.mjs'\nimport r_newline from './rules_inline/newline.mjs'\nimport r_escape from './rules_inline/escape.mjs'\nimport r_backticks from './rules_inline/backticks.mjs'\nimport r_strikethrough from './rules_inline/strikethrough.mjs'\nimport r_emphasis from './rules_inline/emphasis.mjs'\nimport r_link from './rules_inline/link.mjs'\nimport r_image from './rules_inline/image.mjs'\nimport r_autolink from './rules_inline/autolink.mjs'\nimport r_html_inline from './rules_inline/html_inline.mjs'\nimport r_entity from './rules_inline/entity.mjs'\n\nimport r_balance_pairs from './rules_inline/balance_pairs.mjs'\nimport r_fragments_join from './rules_inline/fragments_join.mjs'\n\n// Parser rules\n\nconst _rules = [\n  ['text',            r_text],\n  ['linkify',         r_linkify],\n  ['newline',         r_newline],\n  ['escape',          r_escape],\n  ['backticks',       r_backticks],\n  ['strikethrough',   r_strikethrough.tokenize],\n  ['emphasis',        r_emphasis.tokenize],\n  ['link',            r_link],\n  ['image',           r_image],\n  ['autolink',        r_autolink],\n  ['html_inline',     r_html_inline],\n  ['entity',          r_entity]\n]\n\n// `rule2` ruleset was created specifically for emphasis/strikethrough\n// post-processing and may be changed in the future.\n//\n// Don't use this for anything except pairs (plugins working with `balance_pairs`).\n//\nconst _rules2 = [\n  ['balance_pairs',   r_balance_pairs],\n  ['strikethrough',   r_strikethrough.postProcess],\n  ['emphasis',        r_emphasis.postProcess],\n  // rules for pairs separate '**' into its own text tokens, which may be left unused,\n  // rule below merges unused segments back with the rest of the text\n  ['fragments_join',  r_fragments_join]\n]\n\n/**\n * new ParserInline()\n **/\nfunction ParserInline () {\n  /**\n   * ParserInline#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of inline rules.\n   **/\n  this.ruler = new Ruler()\n\n  for (let i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1])\n  }\n\n  /**\n   * ParserInline#ruler2 -> Ruler\n   *\n   * [[Ruler]] instance. Second ruler used for post-processing\n   * (e.g. in emphasis-like rules).\n   **/\n  this.ruler2 = new Ruler()\n\n  for (let i = 0; i < _rules2.length; i++) {\n    this.ruler2.push(_rules2[i][0], _rules2[i][1])\n  }\n}\n\n// Skip single token by running all rules in validation mode;\n// returns `true` if any rule reported success\n//\nParserInline.prototype.skipToken = function (state) {\n  const pos = state.pos\n  const rules = this.ruler.getRules('')\n  const len = rules.length\n  const maxNesting = state.md.options.maxNesting\n  const cache = state.cache\n\n  if (typeof cache[pos] !== 'undefined') {\n    state.pos = cache[pos]\n    return\n  }\n\n  let ok = false\n\n  if (state.level < maxNesting) {\n    for (let i = 0; i < len; i++) {\n      // Increment state.level and decrement it later to limit recursion.\n      // It's harmless to do here, because no tokens are created. But ideally,\n      // we'd need a separate private state variable for this purpose.\n      //\n      state.level++\n      ok = rules[i](state, true)\n      state.level--\n\n      if (ok) {\n        if (pos >= state.pos) { throw new Error(\"inline rule didn't increment state.pos\") }\n        break\n      }\n    }\n  } else {\n    // Too much nesting, just skip until the end of the paragraph.\n    //\n    // NOTE: this will cause links to behave incorrectly in the following case,\n    //       when an amount of `[` is exactly equal to `maxNesting + 1`:\n    //\n    //       [[[[[[[[[[[[[[[[[[[[[foo]()\n    //\n    // TODO: remove this workaround when CM standard will allow nested links\n    //       (we can replace it by preventing links from being parsed in\n    //       validation mode)\n    //\n    state.pos = state.posMax\n  }\n\n  if (!ok) { state.pos++ }\n  cache[pos] = state.pos\n}\n\n// Generate tokens for input range\n//\nParserInline.prototype.tokenize = function (state) {\n  const rules = this.ruler.getRules('')\n  const len = rules.length\n  const end = state.posMax\n  const maxNesting = state.md.options.maxNesting\n\n  while (state.pos < end) {\n    // Try all possible rules.\n    // On success, rule should:\n    //\n    // - update `state.pos`\n    // - update `state.tokens`\n    // - return true\n    const prevPos = state.pos\n    let ok = false\n\n    if (state.level < maxNesting) {\n      for (let i = 0; i < len; i++) {\n        ok = rules[i](state, false)\n        if (ok) {\n          if (prevPos >= state.pos) { throw new Error(\"inline rule didn't increment state.pos\") }\n          break\n        }\n      }\n    }\n\n    if (ok) {\n      if (state.pos >= end) { break }\n      continue\n    }\n\n    state.pending += state.src[state.pos++]\n  }\n\n  if (state.pending) {\n    state.pushPending()\n  }\n}\n\n/**\n * ParserInline.parse(str, md, env, outTokens)\n *\n * Process input string and push inline tokens into `outTokens`\n **/\nParserInline.prototype.parse = function (str, md, env, outTokens) {\n  const state = new this.State(str, md, env, outTokens)\n\n  this.tokenize(state)\n\n  const rules = this.ruler2.getRules('')\n  const len = rules.length\n\n  for (let i = 0; i < len; i++) {\n    rules[i](state)\n  }\n}\n\nParserInline.prototype.State = StateInline\n\nexport default ParserInline\n","// Proceess '\\n'\n\nimport { isSpace } from '../common/utils.mjs'\n\nexport default function newline (state, silent) {\n  let pos = state.pos\n\n  if (state.src.charCodeAt(pos) !== 0x0A/* \\n */) { return false }\n\n  const pmax = state.pending.length - 1\n  const max = state.posMax\n\n  // '  \\n' -> hardbreak\n  // Lookup in pending chars is bad practice! Don't copy to other rules!\n  // Pending string is stored in concat mode, indexed lookups will cause\n  // convertion to flat mode.\n  if (!silent) {\n    if (pmax >= 0 && state.pending.charCodeAt(pmax) === 0x20) {\n      if (pmax >= 1 && state.pending.charCodeAt(pmax - 1) === 0x20) {\n        // Find whitespaces tail of pending chars.\n        let ws = pmax - 1\n        while (ws >= 1 && state.pending.charCodeAt(ws - 1) === 0x20) ws--\n\n        state.pending = state.pending.slice(0, ws)\n        state.push('hardbreak', 'br', 0)\n      } else {\n        state.pending = state.pending.slice(0, -1)\n        state.push('softbreak', 'br', 0)\n      }\n    } else {\n      state.push('softbreak', 'br', 0)\n    }\n  }\n\n  pos++\n\n  // skip heading spaces for next line\n  while (pos < max && isSpace(state.src.charCodeAt(pos))) { pos++ }\n\n  state.pos = pos\n  return true\n}\n","// Parse backticks\n\nexport default function backtick (state, silent) {\n  let pos = state.pos\n  const ch = state.src.charCodeAt(pos)\n\n  if (ch !== 0x60/* ` */) { return false }\n\n  const start = pos\n  pos++\n  const max = state.posMax\n\n  // scan marker length\n  while (pos < max && state.src.charCodeAt(pos) === 0x60/* ` */) { pos++ }\n\n  const marker = state.src.slice(start, pos)\n  const openerLength = marker.length\n\n  if (state.backticksScanned && (state.backticks[openerLength] || 0) <= start) {\n    if (!silent) state.pending += marker\n    state.pos += openerLength\n    return true\n  }\n\n  let matchEnd = pos\n  let matchStart\n\n  // Nothing found in the cache, scan until the end of the line (or until marker is found)\n  while ((matchStart = state.src.indexOf('`', matchEnd)) !== -1) {\n    matchEnd = matchStart + 1\n\n    // scan marker length\n    while (matchEnd < max && state.src.charCodeAt(matchEnd) === 0x60/* ` */) { matchEnd++ }\n\n    const closerLength = matchEnd - matchStart\n\n    if (closerLength === openerLength) {\n      // Found matching closer length.\n      if (!silent) {\n        const token = state.push('code_inline', 'code', 0)\n        token.markup = marker\n        token.content = state.src.slice(pos, matchStart)\n          .replace(/\\n/g, ' ')\n          .replace(/^ (.+) $/, '$1')\n      }\n      state.pos = matchEnd\n      return true\n    }\n\n    // Some different length found, put it in cache as upper limit of where closer can be found\n    state.backticks[closerLength] = matchStart\n  }\n\n  // Scanned through the end, didn't find anything\n  state.backticksScanned = true\n\n  if (!silent) state.pending += marker\n  state.pos += openerLength\n  return true\n}\n","// Process [link](<to> \"stuff\")\n\nimport { normalizeReference, isSpace } from '../common/utils.mjs'\n\nexport default function link (state, silent) {\n  let code, label, res, ref\n  let href = ''\n  let title = ''\n  let start = state.pos\n  let parseReference = true\n\n  if (state.src.charCodeAt(state.pos) !== 0x5B/* [ */) { return false }\n\n  const oldPos = state.pos\n  const max = state.posMax\n  const labelStart = state.pos + 1\n  const labelEnd = state.md.helpers.parseLinkLabel(state, state.pos, true)\n\n  // parser failed to find ']', so it's not a valid link\n  if (labelEnd < 0) { return false }\n\n  let pos = labelEnd + 1\n  if (pos < max && state.src.charCodeAt(pos) === 0x28/* ( */) {\n    //\n    // Inline link\n    //\n\n    // might have found a valid shortcut link, disable reference parsing\n    parseReference = false\n\n    // [link](  <href>  \"title\"  )\n    //        ^^ skipping these spaces\n    pos++\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos)\n      if (!isSpace(code) && code !== 0x0A) { break }\n    }\n    if (pos >= max) { return false }\n\n    // [link](  <href>  \"title\"  )\n    //          ^^^^^^ parsing link destination\n    start = pos\n    res = state.md.helpers.parseLinkDestination(state.src, pos, state.posMax)\n    if (res.ok) {\n      href = state.md.normalizeLink(res.str)\n      if (state.md.validateLink(href)) {\n        pos = res.pos\n      } else {\n        href = ''\n      }\n\n      // [link](  <href>  \"title\"  )\n      //                ^^ skipping these spaces\n      start = pos\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos)\n        if (!isSpace(code) && code !== 0x0A) { break }\n      }\n\n      // [link](  <href>  \"title\"  )\n      //                  ^^^^^^^ parsing link title\n      res = state.md.helpers.parseLinkTitle(state.src, pos, state.posMax)\n      if (pos < max && start !== pos && res.ok) {\n        title = res.str\n        pos = res.pos\n\n        // [link](  <href>  \"title\"  )\n        //                         ^^ skipping these spaces\n        for (; pos < max; pos++) {\n          code = state.src.charCodeAt(pos)\n          if (!isSpace(code) && code !== 0x0A) { break }\n        }\n      }\n    }\n\n    if (pos >= max || state.src.charCodeAt(pos) !== 0x29/* ) */) {\n      // parsing a valid shortcut link failed, fallback to reference\n      parseReference = true\n    }\n    pos++\n  }\n\n  if (parseReference) {\n    //\n    // Link reference\n    //\n    if (typeof state.env.references === 'undefined') { return false }\n\n    if (pos < max && state.src.charCodeAt(pos) === 0x5B/* [ */) {\n      start = pos + 1\n      pos = state.md.helpers.parseLinkLabel(state, pos)\n      if (pos >= 0) {\n        label = state.src.slice(start, pos++)\n      } else {\n        pos = labelEnd + 1\n      }\n    } else {\n      pos = labelEnd + 1\n    }\n\n    // covers label === '' and label === undefined\n    // (collapsed reference link and shortcut reference link respectively)\n    if (!label) { label = state.src.slice(labelStart, labelEnd) }\n\n    ref = state.env.references[normalizeReference(label)]\n    if (!ref) {\n      state.pos = oldPos\n      return false\n    }\n    href = ref.href\n    title = ref.title\n  }\n\n  //\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  //\n  if (!silent) {\n    state.pos = labelStart\n    state.posMax = labelEnd\n\n    const token_o = state.push('link_open', 'a', 1)\n    const attrs = [['href', href]]\n    token_o.attrs  = attrs\n    if (title) {\n      attrs.push(['title', title])\n    }\n\n    state.linkLevel++\n    state.md.inline.tokenize(state)\n    state.linkLevel--\n\n    state.push('link_close', 'a', -1)\n  }\n\n  state.pos = pos\n  state.posMax = max\n  return true\n}\n","// Process ![image](<src> \"title\")\n\nimport { normalizeReference, isSpace } from '../common/utils.mjs'\n\nexport default function image (state, silent) {\n  let code, content, label, pos, ref, res, title, start\n  let href = ''\n  const oldPos = state.pos\n  const max = state.posMax\n\n  if (state.src.charCodeAt(state.pos) !== 0x21/* ! */) { return false }\n  if (state.src.charCodeAt(state.pos + 1) !== 0x5B/* [ */) { return false }\n\n  const labelStart = state.pos + 2\n  const labelEnd = state.md.helpers.parseLinkLabel(state, state.pos + 1, false)\n\n  // parser failed to find ']', so it's not a valid link\n  if (labelEnd < 0) { return false }\n\n  pos = labelEnd + 1\n  if (pos < max && state.src.charCodeAt(pos) === 0x28/* ( */) {\n    //\n    // Inline link\n    //\n\n    // [link](  <href>  \"title\"  )\n    //        ^^ skipping these spaces\n    pos++\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos)\n      if (!isSpace(code) && code !== 0x0A) { break }\n    }\n    if (pos >= max) { return false }\n\n    // [link](  <href>  \"title\"  )\n    //          ^^^^^^ parsing link destination\n    start = pos\n    res = state.md.helpers.parseLinkDestination(state.src, pos, state.posMax)\n    if (res.ok) {\n      href = state.md.normalizeLink(res.str)\n      if (state.md.validateLink(href)) {\n        pos = res.pos\n      } else {\n        href = ''\n      }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                ^^ skipping these spaces\n    start = pos\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos)\n      if (!isSpace(code) && code !== 0x0A) { break }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                  ^^^^^^^ parsing link title\n    res = state.md.helpers.parseLinkTitle(state.src, pos, state.posMax)\n    if (pos < max && start !== pos && res.ok) {\n      title = res.str\n      pos = res.pos\n\n      // [link](  <href>  \"title\"  )\n      //                         ^^ skipping these spaces\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos)\n        if (!isSpace(code) && code !== 0x0A) { break }\n      }\n    } else {\n      title = ''\n    }\n\n    if (pos >= max || state.src.charCodeAt(pos) !== 0x29/* ) */) {\n      state.pos = oldPos\n      return false\n    }\n    pos++\n  } else {\n    //\n    // Link reference\n    //\n    if (typeof state.env.references === 'undefined') { return false }\n\n    if (pos < max && state.src.charCodeAt(pos) === 0x5B/* [ */) {\n      start = pos + 1\n      pos = state.md.helpers.parseLinkLabel(state, pos)\n      if (pos >= 0) {\n        label = state.src.slice(start, pos++)\n      } else {\n        pos = labelEnd + 1\n      }\n    } else {\n      pos = labelEnd + 1\n    }\n\n    // covers label === '' and label === undefined\n    // (collapsed reference link and shortcut reference link respectively)\n    if (!label) { label = state.src.slice(labelStart, labelEnd) }\n\n    ref = state.env.references[normalizeReference(label)]\n    if (!ref) {\n      state.pos = oldPos\n      return false\n    }\n    href = ref.href\n    title = ref.title\n  }\n\n  //\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  //\n  if (!silent) {\n    content = state.src.slice(labelStart, labelEnd)\n\n    const tokens = []\n    state.md.inline.parse(\n      content,\n      state.md,\n      state.env,\n      tokens\n    )\n\n    const token = state.push('image', 'img', 0)\n    const attrs = [['src', href], ['alt', '']]\n    token.attrs = attrs\n    token.children = tokens\n    token.content = content\n\n    if (title) {\n      attrs.push(['title', title])\n    }\n  }\n\n  state.pos = pos\n  state.posMax = max\n  return true\n}\n","// Process html tags\n\nimport { HTML_TAG_RE } from '../common/html_re.mjs'\n\nfunction isLinkOpen (str) {\n  return /^<a[>\\s]/i.test(str)\n}\nfunction isLinkClose (str) {\n  return /^<\\/a\\s*>/i.test(str)\n}\n\nfunction isLetter (ch) {\n  /* eslint no-bitwise:0 */\n  const lc = ch | 0x20 // to lower case\n  return (lc >= 0x61/* a */) && (lc <= 0x7a/* z */)\n}\n\nexport default function html_inline (state, silent) {\n  if (!state.md.options.html) { return false }\n\n  // Check start\n  const max = state.posMax\n  const pos = state.pos\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */ ||\n      pos + 2 >= max) {\n    return false\n  }\n\n  // Quick fail on second char\n  const ch = state.src.charCodeAt(pos + 1)\n  if (ch !== 0x21/* ! */ &&\n      ch !== 0x3F/* ? */ &&\n      ch !== 0x2F/* / */ &&\n      !isLetter(ch)) {\n    return false\n  }\n\n  const match = state.src.slice(pos).match(HTML_TAG_RE)\n  if (!match) { return false }\n\n  if (!silent) {\n    const token = state.push('html_inline', '', 0)\n    token.content = match[0]\n\n    if (isLinkOpen(token.content))  state.linkLevel++\n    if (isLinkClose(token.content)) state.linkLevel--\n  }\n  state.pos += match[0].length\n  return true\n}\n","// Clean up tokens after emphasis and strikethrough postprocessing:\n// merge adjacent text nodes into one and re-calculate all token levels\n//\n// This is necessary because initially emphasis delimiter markers (*, _, ~)\n// are treated as their own separate text tokens. Then emphasis rule either\n// leaves them as text (needed to merge with adjacent text) or turns them\n// into opening/closing tags (which messes up levels inside).\n//\n\nexport default function fragments_join (state) {\n  let curr, last\n  let level = 0\n  const tokens = state.tokens\n  const max = state.tokens.length\n\n  for (curr = last = 0; curr < max; curr++) {\n    // re-calculate levels after emphasis/strikethrough turns some text nodes\n    // into opening/closing tags\n    if (tokens[curr].nesting < 0) level-- // closing tag\n    tokens[curr].level = level\n    if (tokens[curr].nesting > 0) level++ // opening tag\n\n    if (tokens[curr].type === 'text' &&\n        curr + 1 < max &&\n        tokens[curr + 1].type === 'text') {\n      // collapse two adjacent text nodes\n      tokens[curr + 1].content = tokens[curr].content + tokens[curr + 1].content\n    } else {\n      if (curr !== last) { tokens[last] = tokens[curr] }\n\n      last++\n    }\n  }\n\n  if (curr !== last) {\n    tokens.length = last\n  }\n}\n","import reFactory from './lib/re.mjs'\n\n//\n// Helpers\n//\n\n// Merge objects\n//\nfunction assign (obj /* from1, from2, from3, ... */) {\n  const sources = Array.prototype.slice.call(arguments, 1)\n\n  sources.forEach(function (source) {\n    if (!source) { return }\n\n    Object.keys(source).forEach(function (key) {\n      obj[key] = source[key]\n    })\n  })\n\n  return obj\n}\n\nfunction _class (obj) { return Object.prototype.toString.call(obj) }\nfunction isString (obj) { return _class(obj) === '[object String]' }\nfunction isObject (obj) { return _class(obj) === '[object Object]' }\nfunction isRegExp (obj) { return _class(obj) === '[object RegExp]' }\nfunction isFunction (obj) { return _class(obj) === '[object Function]' }\n\nfunction escapeRE (str) { return str.replace(/[.?*+^$[\\]\\\\(){}|-]/g, '\\\\$&') }\n\n//\n\nconst defaultOptions = {\n  fuzzyLink: true,\n  fuzzyEmail: true,\n  fuzzyIP: false\n}\n\nfunction isOptionsObj (obj) {\n  return Object.keys(obj || {}).reduce(function (acc, k) {\n    /* eslint-disable-next-line no-prototype-builtins */\n    return acc || defaultOptions.hasOwnProperty(k)\n  }, false)\n}\n\nconst defaultSchemas = {\n  'http:': {\n    validate: function (text, pos, self) {\n      const tail = text.slice(pos)\n\n      if (!self.re.http) {\n        // compile lazily, because \"host\"-containing variables can change on tlds update.\n        self.re.http = new RegExp(\n          '^\\\\/\\\\/' + self.re.src_auth + self.re.src_host_port_strict + self.re.src_path, 'i'\n        )\n      }\n      if (self.re.http.test(tail)) {\n        return tail.match(self.re.http)[0].length\n      }\n      return 0\n    }\n  },\n  'https:': 'http:',\n  'ftp:': 'http:',\n  '//': {\n    validate: function (text, pos, self) {\n      const tail = text.slice(pos)\n\n      if (!self.re.no_http) {\n      // compile lazily, because \"host\"-containing variables can change on tlds update.\n        self.re.no_http = new RegExp(\n          '^' +\n          self.re.src_auth +\n          // Don't allow single-level domains, because of false positives like '//test'\n          // with code comments\n          '(?:localhost|(?:(?:' + self.re.src_domain + ')\\\\.)+' + self.re.src_domain_root + ')' +\n          self.re.src_port +\n          self.re.src_host_terminator +\n          self.re.src_path,\n\n          'i'\n        )\n      }\n\n      if (self.re.no_http.test(tail)) {\n        // should not be `://` & `///`, that protects from errors in protocol name\n        if (pos >= 3 && text[pos - 3] === ':') { return 0 }\n        if (pos >= 3 && text[pos - 3] === '/') { return 0 }\n        return tail.match(self.re.no_http)[0].length\n      }\n      return 0\n    }\n  },\n  'mailto:': {\n    validate: function (text, pos, self) {\n      const tail = text.slice(pos)\n\n      if (!self.re.mailto) {\n        self.re.mailto = new RegExp(\n          '^' + self.re.src_email_name + '@' + self.re.src_host_strict, 'i'\n        )\n      }\n      if (self.re.mailto.test(tail)) {\n        return tail.match(self.re.mailto)[0].length\n      }\n      return 0\n    }\n  }\n}\n\n// RE pattern for 2-character tlds (autogenerated by ./support/tlds_2char_gen.js)\n/* eslint-disable-next-line max-len */\nconst tlds_2ch_src_re = 'a[cdefgilmnoqrstuwxz]|b[abdefghijmnorstvwyz]|c[acdfghiklmnoruvwxyz]|d[ejkmoz]|e[cegrstu]|f[ijkmor]|g[abdefghilmnpqrstuwy]|h[kmnrtu]|i[delmnoqrst]|j[emop]|k[eghimnprwyz]|l[abcikrstuvy]|m[acdeghklmnopqrstuvwxyz]|n[acefgilopruz]|om|p[aefghklmnrstwy]|qa|r[eosuw]|s[abcdeghijklmnortuvxyz]|t[cdfghjklmnortvwz]|u[agksyz]|v[aceginu]|w[fs]|y[et]|z[amw]'\n\n// DON'T try to make PRs with changes. Extend TLDs with LinkifyIt.tlds() instead\nconst tlds_default = 'biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|рф'.split('|')\n\nfunction resetScanCache (self) {\n  self.__index__ = -1\n  self.__text_cache__ = ''\n}\n\nfunction createValidator (re) {\n  return function (text, pos) {\n    const tail = text.slice(pos)\n\n    if (re.test(tail)) {\n      return tail.match(re)[0].length\n    }\n    return 0\n  }\n}\n\nfunction createNormalizer () {\n  return function (match, self) {\n    self.normalize(match)\n  }\n}\n\n// Schemas compiler. Build regexps.\n//\nfunction compile (self) {\n  // Load & clone RE patterns.\n  const re = self.re = reFactory(self.__opts__)\n\n  // Define dynamic patterns\n  const tlds = self.__tlds__.slice()\n\n  self.onCompile()\n\n  if (!self.__tlds_replaced__) {\n    tlds.push(tlds_2ch_src_re)\n  }\n  tlds.push(re.src_xn)\n\n  re.src_tlds = tlds.join('|')\n\n  function untpl (tpl) { return tpl.replace('%TLDS%', re.src_tlds) }\n\n  re.email_fuzzy = RegExp(untpl(re.tpl_email_fuzzy), 'i')\n  re.link_fuzzy = RegExp(untpl(re.tpl_link_fuzzy), 'i')\n  re.link_no_ip_fuzzy = RegExp(untpl(re.tpl_link_no_ip_fuzzy), 'i')\n  re.host_fuzzy_test = RegExp(untpl(re.tpl_host_fuzzy_test), 'i')\n\n  //\n  // Compile each schema\n  //\n\n  const aliases = []\n\n  self.__compiled__ = {} // Reset compiled data\n\n  function schemaError (name, val) {\n    throw new Error('(LinkifyIt) Invalid schema \"' + name + '\": ' + val)\n  }\n\n  Object.keys(self.__schemas__).forEach(function (name) {\n    const val = self.__schemas__[name]\n\n    // skip disabled methods\n    if (val === null) { return }\n\n    const compiled = { validate: null, link: null }\n\n    self.__compiled__[name] = compiled\n\n    if (isObject(val)) {\n      if (isRegExp(val.validate)) {\n        compiled.validate = createValidator(val.validate)\n      } else if (isFunction(val.validate)) {\n        compiled.validate = val.validate\n      } else {\n        schemaError(name, val)\n      }\n\n      if (isFunction(val.normalize)) {\n        compiled.normalize = val.normalize\n      } else if (!val.normalize) {\n        compiled.normalize = createNormalizer()\n      } else {\n        schemaError(name, val)\n      }\n\n      return\n    }\n\n    if (isString(val)) {\n      aliases.push(name)\n      return\n    }\n\n    schemaError(name, val)\n  })\n\n  //\n  // Compile postponed aliases\n  //\n\n  aliases.forEach(function (alias) {\n    if (!self.__compiled__[self.__schemas__[alias]]) {\n      // Silently fail on missed schemas to avoid errons on disable.\n      // schemaError(alias, self.__schemas__[alias]);\n      return\n    }\n\n    self.__compiled__[alias].validate =\n      self.__compiled__[self.__schemas__[alias]].validate\n    self.__compiled__[alias].normalize =\n      self.__compiled__[self.__schemas__[alias]].normalize\n  })\n\n  //\n  // Fake record for guessed links\n  //\n  self.__compiled__[''] = { validate: null, normalize: createNormalizer() }\n\n  //\n  // Build schema condition\n  //\n  const slist = Object.keys(self.__compiled__)\n    .filter(function (name) {\n      // Filter disabled & fake schemas\n      return name.length > 0 && self.__compiled__[name]\n    })\n    .map(escapeRE)\n    .join('|')\n  // (?!_) cause 1.5x slowdown\n  self.re.schema_test = RegExp('(^|(?!_)(?:[><\\uff5c]|' + re.src_ZPCc + '))(' + slist + ')', 'i')\n  self.re.schema_search = RegExp('(^|(?!_)(?:[><\\uff5c]|' + re.src_ZPCc + '))(' + slist + ')', 'ig')\n  self.re.schema_at_start = RegExp('^' + self.re.schema_search.source, 'i')\n\n  self.re.pretest = RegExp(\n    '(' + self.re.schema_test.source + ')|(' + self.re.host_fuzzy_test.source + ')|@',\n    'i'\n  )\n\n  //\n  // Cleanup\n  //\n\n  resetScanCache(self)\n}\n\n/**\n * class Match\n *\n * Match result. Single element of array, returned by [[LinkifyIt#match]]\n **/\nfunction Match (self, shift) {\n  const start = self.__index__\n  const end = self.__last_index__\n  const text = self.__text_cache__.slice(start, end)\n\n  /**\n   * Match#schema -> String\n   *\n   * Prefix (protocol) for matched string.\n   **/\n  this.schema = self.__schema__.toLowerCase()\n  /**\n   * Match#index -> Number\n   *\n   * First position of matched string.\n   **/\n  this.index = start + shift\n  /**\n   * Match#lastIndex -> Number\n   *\n   * Next position after matched string.\n   **/\n  this.lastIndex = end + shift\n  /**\n   * Match#raw -> String\n   *\n   * Matched string.\n   **/\n  this.raw = text\n  /**\n   * Match#text -> String\n   *\n   * Notmalized text of matched string.\n   **/\n  this.text = text\n  /**\n   * Match#url -> String\n   *\n   * Normalized url of matched string.\n   **/\n  this.url = text\n}\n\nfunction createMatch (self, shift) {\n  const match = new Match(self, shift)\n\n  self.__compiled__[match.schema].normalize(match, self)\n\n  return match\n}\n\n/**\n * class LinkifyIt\n **/\n\n/**\n * new LinkifyIt(schemas, options)\n * - schemas (Object): Optional. Additional schemas to validate (prefix/validator)\n * - options (Object): { fuzzyLink|fuzzyEmail|fuzzyIP: true|false }\n *\n * Creates new linkifier instance with optional additional schemas.\n * Can be called without `new` keyword for convenience.\n *\n * By default understands:\n *\n * - `http(s)://...` , `ftp://...`, `mailto:...` & `//...` links\n * - \"fuzzy\" links and emails (example.com, foo@bar.com).\n *\n * `schemas` is an object, where each key/value describes protocol/rule:\n *\n * - __key__ - link prefix (usually, protocol name with `:` at the end, `skype:`\n *   for example). `linkify-it` makes shure that prefix is not preceeded with\n *   alphanumeric char and symbols. Only whitespaces and punctuation allowed.\n * - __value__ - rule to check tail after link prefix\n *   - _String_ - just alias to existing rule\n *   - _Object_\n *     - _validate_ - validator function (should return matched length on success),\n *       or `RegExp`.\n *     - _normalize_ - optional function to normalize text & url of matched result\n *       (for example, for @twitter mentions).\n *\n * `options`:\n *\n * - __fuzzyLink__ - recognige URL-s without `http(s):` prefix. Default `true`.\n * - __fuzzyIP__ - allow IPs in fuzzy links above. Can conflict with some texts\n *   like version numbers. Default `false`.\n * - __fuzzyEmail__ - recognize emails without `mailto:` prefix.\n *\n **/\nfunction LinkifyIt (schemas, options) {\n  if (!(this instanceof LinkifyIt)) {\n    return new LinkifyIt(schemas, options)\n  }\n\n  if (!options) {\n    if (isOptionsObj(schemas)) {\n      options = schemas\n      schemas = {}\n    }\n  }\n\n  this.__opts__ = assign({}, defaultOptions, options)\n\n  // Cache last tested result. Used to skip repeating steps on next `match` call.\n  this.__index__ = -1\n  this.__last_index__ = -1 // Next scan position\n  this.__schema__ = ''\n  this.__text_cache__ = ''\n\n  this.__schemas__ = assign({}, defaultSchemas, schemas)\n  this.__compiled__ = {}\n\n  this.__tlds__ = tlds_default\n  this.__tlds_replaced__ = false\n\n  this.re = {}\n\n  compile(this)\n}\n\n/** chainable\n * LinkifyIt#add(schema, definition)\n * - schema (String): rule name (fixed pattern prefix)\n * - definition (String|RegExp|Object): schema definition\n *\n * Add new rule definition. See constructor description for details.\n **/\nLinkifyIt.prototype.add = function add (schema, definition) {\n  this.__schemas__[schema] = definition\n  compile(this)\n  return this\n}\n\n/** chainable\n * LinkifyIt#set(options)\n * - options (Object): { fuzzyLink|fuzzyEmail|fuzzyIP: true|false }\n *\n * Set recognition options for links without schema.\n **/\nLinkifyIt.prototype.set = function set (options) {\n  this.__opts__ = assign(this.__opts__, options)\n  return this\n}\n\n/**\n * LinkifyIt#test(text) -> Boolean\n *\n * Searches linkifiable pattern and returns `true` on success or `false` on fail.\n **/\nLinkifyIt.prototype.test = function test (text) {\n  // Reset scan cache\n  this.__text_cache__ = text\n  this.__index__ = -1\n\n  if (!text.length) { return false }\n\n  let m, ml, me, len, shift, next, re, tld_pos, at_pos\n\n  // try to scan for link with schema - that's the most simple rule\n  if (this.re.schema_test.test(text)) {\n    re = this.re.schema_search\n    re.lastIndex = 0\n    while ((m = re.exec(text)) !== null) {\n      len = this.testSchemaAt(text, m[2], re.lastIndex)\n      if (len) {\n        this.__schema__ = m[2]\n        this.__index__ = m.index + m[1].length\n        this.__last_index__ = m.index + m[0].length + len\n        break\n      }\n    }\n  }\n\n  if (this.__opts__.fuzzyLink && this.__compiled__['http:']) {\n    // guess schemaless links\n    tld_pos = text.search(this.re.host_fuzzy_test)\n    if (tld_pos >= 0) {\n      // if tld is located after found link - no need to check fuzzy pattern\n      if (this.__index__ < 0 || tld_pos < this.__index__) {\n        if ((ml = text.match(this.__opts__.fuzzyIP ? this.re.link_fuzzy : this.re.link_no_ip_fuzzy)) !== null) {\n          shift = ml.index + ml[1].length\n\n          if (this.__index__ < 0 || shift < this.__index__) {\n            this.__schema__ = ''\n            this.__index__ = shift\n            this.__last_index__ = ml.index + ml[0].length\n          }\n        }\n      }\n    }\n  }\n\n  if (this.__opts__.fuzzyEmail && this.__compiled__['mailto:']) {\n    // guess schemaless emails\n    at_pos = text.indexOf('@')\n    if (at_pos >= 0) {\n      // We can't skip this check, because this cases are possible:\n      // 192.168.1.1@gmail.com, my.in@example.com\n      if ((me = text.match(this.re.email_fuzzy)) !== null) {\n        shift = me.index + me[1].length\n        next = me.index + me[0].length\n\n        if (this.__index__ < 0 || shift < this.__index__ ||\n            (shift === this.__index__ && next > this.__last_index__)) {\n          this.__schema__ = 'mailto:'\n          this.__index__ = shift\n          this.__last_index__ = next\n        }\n      }\n    }\n  }\n\n  return this.__index__ >= 0\n}\n\n/**\n * LinkifyIt#pretest(text) -> Boolean\n *\n * Very quick check, that can give false positives. Returns true if link MAY BE\n * can exists. Can be used for speed optimization, when you need to check that\n * link NOT exists.\n **/\nLinkifyIt.prototype.pretest = function pretest (text) {\n  return this.re.pretest.test(text)\n}\n\n/**\n * LinkifyIt#testSchemaAt(text, name, position) -> Number\n * - text (String): text to scan\n * - name (String): rule (schema) name\n * - position (Number): text offset to check from\n *\n * Similar to [[LinkifyIt#test]] but checks only specific protocol tail exactly\n * at given position. Returns length of found pattern (0 on fail).\n **/\nLinkifyIt.prototype.testSchemaAt = function testSchemaAt (text, schema, pos) {\n  // If not supported schema check requested - terminate\n  if (!this.__compiled__[schema.toLowerCase()]) {\n    return 0\n  }\n  return this.__compiled__[schema.toLowerCase()].validate(text, pos, this)\n}\n\n/**\n * LinkifyIt#match(text) -> Array|null\n *\n * Returns array of found link descriptions or `null` on fail. We strongly\n * recommend to use [[LinkifyIt#test]] first, for best speed.\n *\n * ##### Result match description\n *\n * - __schema__ - link schema, can be empty for fuzzy links, or `//` for\n *   protocol-neutral  links.\n * - __index__ - offset of matched text\n * - __lastIndex__ - index of next char after mathch end\n * - __raw__ - matched text\n * - __text__ - normalized text\n * - __url__ - link, generated from matched text\n **/\nLinkifyIt.prototype.match = function match (text) {\n  const result = []\n  let shift = 0\n\n  // Try to take previous element from cache, if .test() called before\n  if (this.__index__ >= 0 && this.__text_cache__ === text) {\n    result.push(createMatch(this, shift))\n    shift = this.__last_index__\n  }\n\n  // Cut head if cache was used\n  let tail = shift ? text.slice(shift) : text\n\n  // Scan string until end reached\n  while (this.test(tail)) {\n    result.push(createMatch(this, shift))\n\n    tail = tail.slice(this.__last_index__)\n    shift += this.__last_index__\n  }\n\n  if (result.length) {\n    return result\n  }\n\n  return null\n}\n\n/**\n * LinkifyIt#matchAtStart(text) -> Match|null\n *\n * Returns fully-formed (not fuzzy) link if it starts at the beginning\n * of the string, and null otherwise.\n **/\nLinkifyIt.prototype.matchAtStart = function matchAtStart (text) {\n  // Reset scan cache\n  this.__text_cache__ = text\n  this.__index__ = -1\n\n  if (!text.length) return null\n\n  const m = this.re.schema_at_start.exec(text)\n  if (!m) return null\n\n  const len = this.testSchemaAt(text, m[2], m[0].length)\n  if (!len) return null\n\n  this.__schema__ = m[2]\n  this.__index__ = m.index + m[1].length\n  this.__last_index__ = m.index + m[0].length + len\n\n  return createMatch(this, 0)\n}\n\n/** chainable\n * LinkifyIt#tlds(list [, keepOld]) -> this\n * - list (Array): list of tlds\n * - keepOld (Boolean): merge with current list if `true` (`false` by default)\n *\n * Load (or merge) new tlds list. Those are user for fuzzy links (without prefix)\n * to avoid false positives. By default this algorythm used:\n *\n * - hostname with any 2-letter root zones are ok.\n * - biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|рф\n *   are ok.\n * - encoded (`xn--...`) root zones are ok.\n *\n * If list is replaced, then exact match for 2-chars root zones will be checked.\n **/\nLinkifyIt.prototype.tlds = function tlds (list, keepOld) {\n  list = Array.isArray(list) ? list : [list]\n\n  if (!keepOld) {\n    this.__tlds__ = list.slice()\n    this.__tlds_replaced__ = true\n    compile(this)\n    return this\n  }\n\n  this.__tlds__ = this.__tlds__.concat(list)\n    .sort()\n    .filter(function (el, idx, arr) {\n      return el !== arr[idx - 1]\n    })\n    .reverse()\n\n  compile(this)\n  return this\n}\n\n/**\n * LinkifyIt#normalize(match)\n *\n * Default normalizer (if schema does not define it's own).\n **/\nLinkifyIt.prototype.normalize = function normalize (match) {\n  // Do minimal possible changes by default. Need to collect feedback prior\n  // to move forward https://github.com/markdown-it/linkify-it/issues/1\n\n  if (!match.schema) { match.url = 'http://' + match.url }\n\n  if (match.schema === 'mailto:' && !/^mailto:/i.test(match.url)) {\n    match.url = 'mailto:' + match.url\n  }\n}\n\n/**\n * LinkifyIt#onCompile()\n *\n * Override to modify basic RegExp-s.\n **/\nLinkifyIt.prototype.onCompile = function onCompile () {\n}\n\nexport default LinkifyIt\n","import { Any, Cc, Z, P } from 'uc.micro'\n\nexport default function (opts) {\n  const re = {}\n  opts = opts || {}\n\n  re.src_Any = Any.source\n  re.src_Cc = Cc.source\n  re.src_Z = Z.source\n  re.src_P = P.source\n\n  // \\p{\\Z\\P\\Cc\\CF} (white spaces + control + format + punctuation)\n  re.src_ZPCc = [re.src_Z, re.src_P, re.src_Cc].join('|')\n\n  // \\p{\\Z\\Cc} (white spaces + control)\n  re.src_ZCc = [re.src_Z, re.src_Cc].join('|')\n\n  // Experimental. List of chars, completely prohibited in links\n  // because can separate it from other part of text\n  const text_separators = '[><\\uff5c]'\n\n  // All possible word characters (everything without punctuation, spaces & controls)\n  // Defined via punctuation & spaces to save space\n  // Should be something like \\p{\\L\\N\\S\\M} (\\w but without `_`)\n  re.src_pseudo_letter = '(?:(?!' + text_separators + '|' + re.src_ZPCc + ')' + re.src_Any + ')'\n  // The same as abothe but without [0-9]\n  // var src_pseudo_letter_non_d = '(?:(?![0-9]|' + src_ZPCc + ')' + src_Any + ')';\n\n  re.src_ip4 =\n\n    '(?:(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)'\n\n  // Prohibit any of \"@/[]()\" in user/pass to avoid wrong domain fetch.\n  re.src_auth = '(?:(?:(?!' + re.src_ZCc + '|[@/\\\\[\\\\]()]).)+@)?'\n\n  re.src_port =\n\n    '(?::(?:6(?:[0-4]\\\\d{3}|5(?:[0-4]\\\\d{2}|5(?:[0-2]\\\\d|3[0-5])))|[1-5]?\\\\d{1,4}))?'\n\n  re.src_host_terminator =\n\n    '(?=$|' + text_separators + '|' + re.src_ZPCc + ')' +\n    '(?!' + (opts['---'] ? '-(?!--)|' : '-|') + '_|:\\\\d|\\\\.-|\\\\.(?!$|' + re.src_ZPCc + '))'\n\n  re.src_path =\n\n    '(?:' +\n      '[/?#]' +\n        '(?:' +\n          '(?!' + re.src_ZCc + '|' + text_separators + '|[()[\\\\]{}.,\"\\'?!\\\\-;]).|' +\n          '\\\\[(?:(?!' + re.src_ZCc + '|\\\\]).)*\\\\]|' +\n          '\\\\((?:(?!' + re.src_ZCc + '|[)]).)*\\\\)|' +\n          '\\\\{(?:(?!' + re.src_ZCc + '|[}]).)*\\\\}|' +\n          '\\\\\"(?:(?!' + re.src_ZCc + '|[\"]).)+\\\\\"|' +\n          \"\\\\'(?:(?!\" + re.src_ZCc + \"|[']).)+\\\\'|\" +\n\n          // allow `I'm_king` if no pair found\n          \"\\\\'(?=\" + re.src_pseudo_letter + '|[-])|' +\n\n          // google has many dots in \"google search\" links (#66, #81).\n          // github has ... in commit range links,\n          // Restrict to\n          // - english\n          // - percent-encoded\n          // - parts of file path\n          // - params separator\n          // until more examples found.\n          '\\\\.{2,}[a-zA-Z0-9%/&]|' +\n\n          '\\\\.(?!' + re.src_ZCc + '|[.]|$)|' +\n          (opts['---']\n            ? '\\\\-(?!--(?:[^-]|$))(?:-*)|' // `---` => long dash, terminate\n            : '\\\\-+|'\n          ) +\n          // allow `,,,` in paths\n          ',(?!' + re.src_ZCc + '|$)|' +\n\n          // allow `;` if not followed by space-like char\n          ';(?!' + re.src_ZCc + '|$)|' +\n\n          // allow `!!!` in paths, but not at the end\n          '\\\\!+(?!' + re.src_ZCc + '|[!]|$)|' +\n\n          '\\\\?(?!' + re.src_ZCc + '|[?]|$)' +\n        ')+' +\n      '|\\\\/' +\n    ')?'\n\n  // Allow anything in markdown spec, forbid quote (\") at the first position\n  // because emails enclosed in quotes are far more common\n  re.src_email_name =\n\n    '[\\\\-;:&=\\\\+\\\\$,\\\\.a-zA-Z0-9_][\\\\-;:&=\\\\+\\\\$,\\\\\"\\\\.a-zA-Z0-9_]*'\n\n  re.src_xn =\n\n    'xn--[a-z0-9\\\\-]{1,59}'\n\n  // More to read about domain names\n  // http://serverfault.com/questions/638260/\n\n  re.src_domain_root =\n\n    // Allow letters & digits (http://test1)\n    '(?:' +\n      re.src_xn +\n      '|' +\n      re.src_pseudo_letter + '{1,63}' +\n    ')'\n\n  re.src_domain =\n\n    '(?:' +\n      re.src_xn +\n      '|' +\n      '(?:' + re.src_pseudo_letter + ')' +\n      '|' +\n      '(?:' + re.src_pseudo_letter + '(?:-|' + re.src_pseudo_letter + '){0,61}' + re.src_pseudo_letter + ')' +\n    ')'\n\n  re.src_host =\n\n    '(?:' +\n    // Don't need IP check, because digits are already allowed in normal domain names\n    //   src_ip4 +\n    // '|' +\n      '(?:(?:(?:' + re.src_domain + ')\\\\.)*' + re.src_domain/* _root */ + ')' +\n    ')'\n\n  re.tpl_host_fuzzy =\n\n    '(?:' +\n      re.src_ip4 +\n    '|' +\n      '(?:(?:(?:' + re.src_domain + ')\\\\.)+(?:%TLDS%))' +\n    ')'\n\n  re.tpl_host_no_ip_fuzzy =\n\n    '(?:(?:(?:' + re.src_domain + ')\\\\.)+(?:%TLDS%))'\n\n  re.src_host_strict =\n\n    re.src_host + re.src_host_terminator\n\n  re.tpl_host_fuzzy_strict =\n\n    re.tpl_host_fuzzy + re.src_host_terminator\n\n  re.src_host_port_strict =\n\n    re.src_host + re.src_port + re.src_host_terminator\n\n  re.tpl_host_port_fuzzy_strict =\n\n    re.tpl_host_fuzzy + re.src_port + re.src_host_terminator\n\n  re.tpl_host_port_no_ip_fuzzy_strict =\n\n    re.tpl_host_no_ip_fuzzy + re.src_port + re.src_host_terminator\n\n  //\n  // Main rules\n  //\n\n  // Rude test fuzzy links by host, for quick deny\n  re.tpl_host_fuzzy_test =\n\n    'localhost|www\\\\.|\\\\.\\\\d{1,3}\\\\.|(?:\\\\.(?:%TLDS%)(?:' + re.src_ZPCc + '|>|$))'\n\n  re.tpl_email_fuzzy =\n\n      '(^|' + text_separators + '|\"|\\\\(|' + re.src_ZCc + ')' +\n      '(' + re.src_email_name + '@' + re.tpl_host_fuzzy_strict + ')'\n\n  re.tpl_link_fuzzy =\n      // Fuzzy link can't be prepended with .:/\\- and non punctuation.\n      // but can start with > (markdown blockquote)\n      '(^|(?![.:/\\\\-_@])(?:[$+<=>^`|\\uff5c]|' + re.src_ZPCc + '))' +\n      '((?![$+<=>^`|\\uff5c])' + re.tpl_host_port_fuzzy_strict + re.src_path + ')'\n\n  re.tpl_link_no_ip_fuzzy =\n      // Fuzzy link can't be prepended with .:/\\- and non punctuation.\n      // but can start with > (markdown blockquote)\n      '(^|(?![.:/\\\\-_@])(?:[$+<=>^`|\\uff5c]|' + re.src_ZPCc + '))' +\n      '((?![$+<=>^`|\\uff5c])' + re.tpl_host_port_no_ip_fuzzy_strict + re.src_path + ')'\n\n  return re\n}\n","'use strict';\n\n/** Highest positive signed 32-bit float value */\nconst maxInt = 2147483647; // aka. 0x7FFFFFFF or 2^31-1\n\n/** Bootstring parameters */\nconst base = 36;\nconst tMin = 1;\nconst tMax = 26;\nconst skew = 38;\nconst damp = 700;\nconst initialBias = 72;\nconst initialN = 128; // 0x80\nconst delimiter = '-'; // '\\x2D'\n\n/** Regular expressions */\nconst regexPunycode = /^xn--/;\nconst regexNonASCII = /[^\\0-\\x7F]/; // Note: U+007F DEL is excluded too.\nconst regexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g; // RFC 3490 separators\n\n/** Error messages */\nconst errors = {\n\t'overflow': 'Overflow: input needs wider integers to process',\n\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t'invalid-input': 'Invalid input'\n};\n\n/** Convenience shortcuts */\nconst baseMinusTMin = base - tMin;\nconst floor = Math.floor;\nconst stringFromCharCode = String.fromCharCode;\n\n/*--------------------------------------------------------------------------*/\n\n/**\n * A generic error utility function.\n * @private\n * @param {String} type The error type.\n * @returns {Error} Throws a `RangeError` with the applicable error message.\n */\nfunction error(type) {\n\tthrow new RangeError(errors[type]);\n}\n\n/**\n * A generic `Array#map` utility function.\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} callback The function that gets called for every array\n * item.\n * @returns {Array} A new array of values returned by the callback function.\n */\nfunction map(array, callback) {\n\tconst result = [];\n\tlet length = array.length;\n\twhile (length--) {\n\t\tresult[length] = callback(array[length]);\n\t}\n\treturn result;\n}\n\n/**\n * A simple `Array#map`-like wrapper to work with domain name strings or email\n * addresses.\n * @private\n * @param {String} domain The domain name or email address.\n * @param {Function} callback The function that gets called for every\n * character.\n * @returns {String} A new string of characters returned by the callback\n * function.\n */\nfunction mapDomain(domain, callback) {\n\tconst parts = domain.split('@');\n\tlet result = '';\n\tif (parts.length > 1) {\n\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t// the local part (i.e. everything up to `@`) intact.\n\t\tresult = parts[0] + '@';\n\t\tdomain = parts[1];\n\t}\n\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\tdomain = domain.replace(regexSeparators, '\\x2E');\n\tconst labels = domain.split('.');\n\tconst encoded = map(labels, callback).join('.');\n\treturn result + encoded;\n}\n\n/**\n * Creates an array containing the numeric code points of each Unicode\n * character in the string. While JavaScript uses UCS-2 internally,\n * this function will convert a pair of surrogate halves (each of which\n * UCS-2 exposes as separate characters) into a single code point,\n * matching UTF-16.\n * @see `punycode.ucs2.encode`\n * @see <https://mathiasbynens.be/notes/javascript-encoding>\n * @memberOf punycode.ucs2\n * @name decode\n * @param {String} string The Unicode input string (UCS-2).\n * @returns {Array} The new array of code points.\n */\nfunction ucs2decode(string) {\n\tconst output = [];\n\tlet counter = 0;\n\tconst length = string.length;\n\twhile (counter < length) {\n\t\tconst value = string.charCodeAt(counter++);\n\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t// It's a high surrogate, and there is a next character.\n\t\t\tconst extra = string.charCodeAt(counter++);\n\t\t\tif ((extra & 0xFC00) == 0xDC00) { // Low surrogate.\n\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t} else {\n\t\t\t\t// It's an unmatched surrogate; only append this code unit, in case the\n\t\t\t\t// next code unit is the high surrogate of a surrogate pair.\n\t\t\t\toutput.push(value);\n\t\t\t\tcounter--;\n\t\t\t}\n\t\t} else {\n\t\t\toutput.push(value);\n\t\t}\n\t}\n\treturn output;\n}\n\n/**\n * Creates a string based on an array of numeric code points.\n * @see `punycode.ucs2.decode`\n * @memberOf punycode.ucs2\n * @name encode\n * @param {Array} codePoints The array of numeric code points.\n * @returns {String} The new Unicode string (UCS-2).\n */\nconst ucs2encode = codePoints => String.fromCodePoint(...codePoints);\n\n/**\n * Converts a basic code point into a digit/integer.\n * @see `digitToBasic()`\n * @private\n * @param {Number} codePoint The basic numeric code point value.\n * @returns {Number} The numeric value of a basic code point (for use in\n * representing integers) in the range `0` to `base - 1`, or `base` if\n * the code point does not represent a value.\n */\nconst basicToDigit = function(codePoint) {\n\tif (codePoint >= 0x30 && codePoint < 0x3A) {\n\t\treturn 26 + (codePoint - 0x30);\n\t}\n\tif (codePoint >= 0x41 && codePoint < 0x5B) {\n\t\treturn codePoint - 0x41;\n\t}\n\tif (codePoint >= 0x61 && codePoint < 0x7B) {\n\t\treturn codePoint - 0x61;\n\t}\n\treturn base;\n};\n\n/**\n * Converts a digit/integer into a basic code point.\n * @see `basicToDigit()`\n * @private\n * @param {Number} digit The numeric value of a basic code point.\n * @returns {Number} The basic code point whose value (when used for\n * representing integers) is `digit`, which needs to be in the range\n * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n * used; else, the lowercase form is used. The behavior is undefined\n * if `flag` is non-zero and `digit` has no uppercase form.\n */\nconst digitToBasic = function(digit, flag) {\n\t//  0..25 map to ASCII a..z or A..Z\n\t// 26..35 map to ASCII 0..9\n\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n};\n\n/**\n * Bias adaptation function as per section 3.4 of RFC 3492.\n * https://tools.ietf.org/html/rfc3492#section-3.4\n * @private\n */\nconst adapt = function(delta, numPoints, firstTime) {\n\tlet k = 0;\n\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\tdelta += floor(delta / numPoints);\n\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\tdelta = floor(delta / baseMinusTMin);\n\t}\n\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n};\n\n/**\n * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n * symbols.\n * @memberOf punycode\n * @param {String} input The Punycode string of ASCII-only symbols.\n * @returns {String} The resulting string of Unicode symbols.\n */\nconst decode = function(input) {\n\t// Don't use UCS-2.\n\tconst output = [];\n\tconst inputLength = input.length;\n\tlet i = 0;\n\tlet n = initialN;\n\tlet bias = initialBias;\n\n\t// Handle the basic code points: let `basic` be the number of input code\n\t// points before the last delimiter, or `0` if there is none, then copy\n\t// the first basic code points to the output.\n\n\tlet basic = input.lastIndexOf(delimiter);\n\tif (basic < 0) {\n\t\tbasic = 0;\n\t}\n\n\tfor (let j = 0; j < basic; ++j) {\n\t\t// if it's not a basic code point\n\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\terror('not-basic');\n\t\t}\n\t\toutput.push(input.charCodeAt(j));\n\t}\n\n\t// Main decoding loop: start just after the last delimiter if any basic code\n\t// points were copied; start at the beginning otherwise.\n\n\tfor (let index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t// `index` is the index of the next character to be consumed.\n\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t// which gets added to `i`. The overflow checking is easier\n\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t// value at the end to obtain `delta`.\n\t\tconst oldi = i;\n\t\tfor (let w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\tif (index >= inputLength) {\n\t\t\t\terror('invalid-input');\n\t\t\t}\n\n\t\t\tconst digit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\tif (digit >= base) {\n\t\t\t\terror('invalid-input');\n\t\t\t}\n\t\t\tif (digit > floor((maxInt - i) / w)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\ti += digit * w;\n\t\t\tconst t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\tif (digit < t) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tconst baseMinusT = base - t;\n\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tw *= baseMinusT;\n\n\t\t}\n\n\t\tconst out = output.length + 1;\n\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t// incrementing `n` each time, so we'll fix that now:\n\t\tif (floor(i / out) > maxInt - n) {\n\t\t\terror('overflow');\n\t\t}\n\n\t\tn += floor(i / out);\n\t\ti %= out;\n\n\t\t// Insert `n` at position `i` of the output.\n\t\toutput.splice(i++, 0, n);\n\n\t}\n\n\treturn String.fromCodePoint(...output);\n};\n\n/**\n * Converts a string of Unicode symbols (e.g. a domain name label) to a\n * Punycode string of ASCII-only symbols.\n * @memberOf punycode\n * @param {String} input The string of Unicode symbols.\n * @returns {String} The resulting Punycode string of ASCII-only symbols.\n */\nconst encode = function(input) {\n\tconst output = [];\n\n\t// Convert the input in UCS-2 to an array of Unicode code points.\n\tinput = ucs2decode(input);\n\n\t// Cache the length.\n\tconst inputLength = input.length;\n\n\t// Initialize the state.\n\tlet n = initialN;\n\tlet delta = 0;\n\tlet bias = initialBias;\n\n\t// Handle the basic code points.\n\tfor (const currentValue of input) {\n\t\tif (currentValue < 0x80) {\n\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t}\n\t}\n\n\tconst basicLength = output.length;\n\tlet handledCPCount = basicLength;\n\n\t// `handledCPCount` is the number of code points that have been handled;\n\t// `basicLength` is the number of basic code points.\n\n\t// Finish the basic string with a delimiter unless it's empty.\n\tif (basicLength) {\n\t\toutput.push(delimiter);\n\t}\n\n\t// Main encoding loop:\n\twhile (handledCPCount < inputLength) {\n\n\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t// larger one:\n\t\tlet m = maxInt;\n\t\tfor (const currentValue of input) {\n\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\tm = currentValue;\n\t\t\t}\n\t\t}\n\n\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t// but guard against overflow.\n\t\tconst handledCPCountPlusOne = handledCPCount + 1;\n\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\terror('overflow');\n\t\t}\n\n\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\tn = m;\n\n\t\tfor (const currentValue of input) {\n\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\t\t\tif (currentValue === n) {\n\t\t\t\t// Represent delta as a generalized variable-length integer.\n\t\t\t\tlet q = delta;\n\t\t\t\tfor (let k = base; /* no condition */; k += base) {\n\t\t\t\t\tconst t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tconst qMinusT = q - t;\n\t\t\t\t\tconst baseMinusT = base - t;\n\t\t\t\t\toutput.push(\n\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t);\n\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t}\n\n\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount === basicLength);\n\t\t\t\tdelta = 0;\n\t\t\t\t++handledCPCount;\n\t\t\t}\n\t\t}\n\n\t\t++delta;\n\t\t++n;\n\n\t}\n\treturn output.join('');\n};\n\n/**\n * Converts a Punycode string representing a domain name or an email address\n * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n * it doesn't matter if you call it on a string that has already been\n * converted to Unicode.\n * @memberOf punycode\n * @param {String} input The Punycoded domain name or email address to\n * convert to Unicode.\n * @returns {String} The Unicode representation of the given Punycode\n * string.\n */\nconst toUnicode = function(input) {\n\treturn mapDomain(input, function(string) {\n\t\treturn regexPunycode.test(string)\n\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t: string;\n\t});\n};\n\n/**\n * Converts a Unicode string representing a domain name or an email address to\n * Punycode. Only the non-ASCII parts of the domain name will be converted,\n * i.e. it doesn't matter if you call it with a domain that's already in\n * ASCII.\n * @memberOf punycode\n * @param {String} input The domain name or email address to convert, as a\n * Unicode string.\n * @returns {String} The Punycode representation of the given domain name or\n * email address.\n */\nconst toASCII = function(input) {\n\treturn mapDomain(input, function(string) {\n\t\treturn regexNonASCII.test(string)\n\t\t\t? 'xn--' + encode(string)\n\t\t\t: string;\n\t});\n};\n\n/*--------------------------------------------------------------------------*/\n\n/** Define the public API */\nconst punycode = {\n\t/**\n\t * A string representing the current Punycode.js version number.\n\t * @memberOf punycode\n\t * @type String\n\t */\n\t'version': '2.3.1',\n\t/**\n\t * An object of methods to convert from JavaScript's internal character\n\t * representation (UCS-2) to Unicode code points, and back.\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode\n\t * @type Object\n\t */\n\t'ucs2': {\n\t\t'decode': ucs2decode,\n\t\t'encode': ucs2encode\n\t},\n\t'decode': decode,\n\t'encode': encode,\n\t'toASCII': toASCII,\n\t'toUnicode': toUnicode\n};\n\nexport { ucs2decode, ucs2encode, decode, encode, toASCII, toUnicode };\nexport default punycode;\n","// Main parser class\n\nimport * as utils from './common/utils.mjs'\nimport * as helpers from './helpers/index.mjs'\nimport Renderer from './renderer.mjs'\nimport ParserCore from './parser_core.mjs'\nimport ParserBlock from './parser_block.mjs'\nimport ParserInline from './parser_inline.mjs'\nimport LinkifyIt from 'linkify-it'\nimport * as mdurl from 'mdurl'\nimport punycode from 'punycode.js'\n\nimport cfg_default from './presets/default.mjs'\nimport cfg_zero from './presets/zero.mjs'\nimport cfg_commonmark from './presets/commonmark.mjs'\n\nconst config = {\n  default: cfg_default,\n  zero: cfg_zero,\n  commonmark: cfg_commonmark\n}\n\n//\n// This validator can prohibit more than really needed to prevent XSS. It's a\n// tradeoff to keep code simple and to be secure by default.\n//\n// If you need different setup - override validator method as you wish. Or\n// replace it with dummy function and use external sanitizer.\n//\n\nconst BAD_PROTO_RE = /^(vbscript|javascript|file|data):/\nconst GOOD_DATA_RE = /^data:image\\/(gif|png|jpeg|webp);/\n\nfunction validateLink (url) {\n  // url should be normalized at this point, and existing entities are decoded\n  const str = url.trim().toLowerCase()\n\n  return BAD_PROTO_RE.test(str) ? GOOD_DATA_RE.test(str) : true\n}\n\nconst RECODE_HOSTNAME_FOR = ['http:', 'https:', 'mailto:']\n\nfunction normalizeLink (url) {\n  const parsed = mdurl.parse(url, true)\n\n  if (parsed.hostname) {\n    // Encode hostnames in urls like:\n    // `http://host/`, `https://host/`, `mailto:user@host`, `//host/`\n    //\n    // We don't encode unknown schemas, because it's likely that we encode\n    // something we shouldn't (e.g. `skype:name` treated as `skype:host`)\n    //\n    if (!parsed.protocol || RECODE_HOSTNAME_FOR.indexOf(parsed.protocol) >= 0) {\n      try {\n        parsed.hostname = punycode.toASCII(parsed.hostname)\n      } catch (er) { /**/ }\n    }\n  }\n\n  return mdurl.encode(mdurl.format(parsed))\n}\n\nfunction normalizeLinkText (url) {\n  const parsed = mdurl.parse(url, true)\n\n  if (parsed.hostname) {\n    // Encode hostnames in urls like:\n    // `http://host/`, `https://host/`, `mailto:user@host`, `//host/`\n    //\n    // We don't encode unknown schemas, because it's likely that we encode\n    // something we shouldn't (e.g. `skype:name` treated as `skype:host`)\n    //\n    if (!parsed.protocol || RECODE_HOSTNAME_FOR.indexOf(parsed.protocol) >= 0) {\n      try {\n        parsed.hostname = punycode.toUnicode(parsed.hostname)\n      } catch (er) { /**/ }\n    }\n  }\n\n  // add '%' to exclude list because of https://github.com/markdown-it/markdown-it/issues/720\n  return mdurl.decode(mdurl.format(parsed), mdurl.decode.defaultChars + '%')\n}\n\n/**\n * class MarkdownIt\n *\n * Main parser/renderer class.\n *\n * ##### Usage\n *\n * ```javascript\n * // node.js, \"classic\" way:\n * var MarkdownIt = require('markdown-it'),\n *     md = new MarkdownIt();\n * var result = md.render('# markdown-it rulezz!');\n *\n * // node.js, the same, but with sugar:\n * var md = require('markdown-it')();\n * var result = md.render('# markdown-it rulezz!');\n *\n * // browser without AMD, added to \"window\" on script load\n * // Note, there are no dash.\n * var md = window.markdownit();\n * var result = md.render('# markdown-it rulezz!');\n * ```\n *\n * Single line rendering, without paragraph wrap:\n *\n * ```javascript\n * var md = require('markdown-it')();\n * var result = md.renderInline('__markdown-it__ rulezz!');\n * ```\n **/\n\n/**\n * new MarkdownIt([presetName, options])\n * - presetName (String): optional, `commonmark` / `zero`\n * - options (Object)\n *\n * Creates parser instanse with given config. Can be called without `new`.\n *\n * ##### presetName\n *\n * MarkdownIt provides named presets as a convenience to quickly\n * enable/disable active syntax rules and options for common use cases.\n *\n * - [\"commonmark\"](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/commonmark.mjs) -\n *   configures parser to strict [CommonMark](http://commonmark.org/) mode.\n * - [default](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/default.mjs) -\n *   similar to GFM, used when no preset name given. Enables all available rules,\n *   but still without html, typographer & autolinker.\n * - [\"zero\"](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/zero.mjs) -\n *   all rules disabled. Useful to quickly setup your config via `.enable()`.\n *   For example, when you need only `bold` and `italic` markup and nothing else.\n *\n * ##### options:\n *\n * - __html__ - `false`. Set `true` to enable HTML tags in source. Be careful!\n *   That's not safe! You may need external sanitizer to protect output from XSS.\n *   It's better to extend features via plugins, instead of enabling HTML.\n * - __xhtmlOut__ - `false`. Set `true` to add '/' when closing single tags\n *   (`<br />`). This is needed only for full CommonMark compatibility. In real\n *   world you will need HTML output.\n * - __breaks__ - `false`. Set `true` to convert `\\n` in paragraphs into `<br>`.\n * - __langPrefix__ - `language-`. CSS language class prefix for fenced blocks.\n *   Can be useful for external highlighters.\n * - __linkify__ - `false`. Set `true` to autoconvert URL-like text to links.\n * - __typographer__  - `false`. Set `true` to enable [some language-neutral\n *   replacement](https://github.com/markdown-it/markdown-it/blob/master/lib/rules_core/replacements.mjs) +\n *   quotes beautification (smartquotes).\n * - __quotes__ - `“”‘’`, String or Array. Double + single quotes replacement\n *   pairs, when typographer enabled and smartquotes on. For example, you can\n *   use `'«»„“'` for Russian, `'„“‚‘'` for German, and\n *   `['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›']` for French (including nbsp).\n * - __highlight__ - `null`. Highlighter function for fenced code blocks.\n *   Highlighter `function (str, lang)` should return escaped HTML. It can also\n *   return empty string if the source was not changed and should be escaped\n *   externaly. If result starts with <pre... internal wrapper is skipped.\n *\n * ##### Example\n *\n * ```javascript\n * // commonmark mode\n * var md = require('markdown-it')('commonmark');\n *\n * // default mode\n * var md = require('markdown-it')();\n *\n * // enable everything\n * var md = require('markdown-it')({\n *   html: true,\n *   linkify: true,\n *   typographer: true\n * });\n * ```\n *\n * ##### Syntax highlighting\n *\n * ```js\n * var hljs = require('highlight.js') // https://highlightjs.org/\n *\n * var md = require('markdown-it')({\n *   highlight: function (str, lang) {\n *     if (lang && hljs.getLanguage(lang)) {\n *       try {\n *         return hljs.highlight(str, { language: lang, ignoreIllegals: true }).value;\n *       } catch (__) {}\n *     }\n *\n *     return ''; // use external default escaping\n *   }\n * });\n * ```\n *\n * Or with full wrapper override (if you need assign class to `<pre>` or `<code>`):\n *\n * ```javascript\n * var hljs = require('highlight.js') // https://highlightjs.org/\n *\n * // Actual default values\n * var md = require('markdown-it')({\n *   highlight: function (str, lang) {\n *     if (lang && hljs.getLanguage(lang)) {\n *       try {\n *         return '<pre><code class=\"hljs\">' +\n *                hljs.highlight(str, { language: lang, ignoreIllegals: true }).value +\n *                '</code></pre>';\n *       } catch (__) {}\n *     }\n *\n *     return '<pre><code class=\"hljs\">' + md.utils.escapeHtml(str) + '</code></pre>';\n *   }\n * });\n * ```\n *\n **/\nfunction MarkdownIt (presetName, options) {\n  if (!(this instanceof MarkdownIt)) {\n    return new MarkdownIt(presetName, options)\n  }\n\n  if (!options) {\n    if (!utils.isString(presetName)) {\n      options = presetName || {}\n      presetName = 'default'\n    }\n  }\n\n  /**\n   * MarkdownIt#inline -> ParserInline\n   *\n   * Instance of [[ParserInline]]. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.inline = new ParserInline()\n\n  /**\n   * MarkdownIt#block -> ParserBlock\n   *\n   * Instance of [[ParserBlock]]. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.block = new ParserBlock()\n\n  /**\n   * MarkdownIt#core -> Core\n   *\n   * Instance of [[Core]] chain executor. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.core = new ParserCore()\n\n  /**\n   * MarkdownIt#renderer -> Renderer\n   *\n   * Instance of [[Renderer]]. Use it to modify output look. Or to add rendering\n   * rules for new token types, generated by plugins.\n   *\n   * ##### Example\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   *\n   * function myToken(tokens, idx, options, env, self) {\n   *   //...\n   *   return result;\n   * };\n   *\n   * md.renderer.rules['my_token'] = myToken\n   * ```\n   *\n   * See [[Renderer]] docs and [source code](https://github.com/markdown-it/markdown-it/blob/master/lib/renderer.mjs).\n   **/\n  this.renderer = new Renderer()\n\n  /**\n   * MarkdownIt#linkify -> LinkifyIt\n   *\n   * [linkify-it](https://github.com/markdown-it/linkify-it) instance.\n   * Used by [linkify](https://github.com/markdown-it/markdown-it/blob/master/lib/rules_core/linkify.mjs)\n   * rule.\n   **/\n  this.linkify = new LinkifyIt()\n\n  /**\n   * MarkdownIt#validateLink(url) -> Boolean\n   *\n   * Link validation function. CommonMark allows too much in links. By default\n   * we disable `javascript:`, `vbscript:`, `file:` schemas, and almost all `data:...` schemas\n   * except some embedded image types.\n   *\n   * You can change this behaviour:\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   * // enable everything\n   * md.validateLink = function () { return true; }\n   * ```\n   **/\n  this.validateLink = validateLink\n\n  /**\n   * MarkdownIt#normalizeLink(url) -> String\n   *\n   * Function used to encode link url to a machine-readable format,\n   * which includes url-encoding, punycode, etc.\n   **/\n  this.normalizeLink = normalizeLink\n\n  /**\n   * MarkdownIt#normalizeLinkText(url) -> String\n   *\n   * Function used to decode link url to a human-readable format`\n   **/\n  this.normalizeLinkText = normalizeLinkText\n\n  // Expose utils & helpers for easy acces from plugins\n\n  /**\n   * MarkdownIt#utils -> utils\n   *\n   * Assorted utility functions, useful to write plugins. See details\n   * [here](https://github.com/markdown-it/markdown-it/blob/master/lib/common/utils.mjs).\n   **/\n  this.utils = utils\n\n  /**\n   * MarkdownIt#helpers -> helpers\n   *\n   * Link components parser functions, useful to write plugins. See details\n   * [here](https://github.com/markdown-it/markdown-it/blob/master/lib/helpers).\n   **/\n  this.helpers = utils.assign({}, helpers)\n\n  this.options = {}\n  this.configure(presetName)\n\n  if (options) { this.set(options) }\n}\n\n/** chainable\n * MarkdownIt.set(options)\n *\n * Set parser options (in the same format as in constructor). Probably, you\n * will never need it, but you can change options after constructor call.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')()\n *             .set({ html: true, breaks: true })\n *             .set({ typographer, true });\n * ```\n *\n * __Note:__ To achieve the best possible performance, don't modify a\n * `markdown-it` instance options on the fly. If you need multiple configurations\n * it's best to create multiple instances and initialize each with separate\n * config.\n **/\nMarkdownIt.prototype.set = function (options) {\n  utils.assign(this.options, options)\n  return this\n}\n\n/** chainable, internal\n * MarkdownIt.configure(presets)\n *\n * Batch load of all options and compenent settings. This is internal method,\n * and you probably will not need it. But if you will - see available presets\n * and data structure [here](https://github.com/markdown-it/markdown-it/tree/master/lib/presets)\n *\n * We strongly recommend to use presets instead of direct config loads. That\n * will give better compatibility with next versions.\n **/\nMarkdownIt.prototype.configure = function (presets) {\n  const self = this\n\n  if (utils.isString(presets)) {\n    const presetName = presets\n    presets = config[presetName]\n    if (!presets) { throw new Error('Wrong `markdown-it` preset \"' + presetName + '\", check name') }\n  }\n\n  if (!presets) { throw new Error('Wrong `markdown-it` preset, can\\'t be empty') }\n\n  if (presets.options) { self.set(presets.options) }\n\n  if (presets.components) {\n    Object.keys(presets.components).forEach(function (name) {\n      if (presets.components[name].rules) {\n        self[name].ruler.enableOnly(presets.components[name].rules)\n      }\n      if (presets.components[name].rules2) {\n        self[name].ruler2.enableOnly(presets.components[name].rules2)\n      }\n    })\n  }\n  return this\n}\n\n/** chainable\n * MarkdownIt.enable(list, ignoreInvalid)\n * - list (String|Array): rule name or list of rule names to enable\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable list or rules. It will automatically find appropriate components,\n * containing rules with given names. If rule not found, and `ignoreInvalid`\n * not set - throws exception.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')()\n *             .enable(['sub', 'sup'])\n *             .disable('smartquotes');\n * ```\n **/\nMarkdownIt.prototype.enable = function (list, ignoreInvalid) {\n  let result = []\n\n  if (!Array.isArray(list)) { list = [list] }\n\n  ['core', 'block', 'inline'].forEach(function (chain) {\n    result = result.concat(this[chain].ruler.enable(list, true))\n  }, this)\n\n  result = result.concat(this.inline.ruler2.enable(list, true))\n\n  const missed = list.filter(function (name) { return result.indexOf(name) < 0 })\n\n  if (missed.length && !ignoreInvalid) {\n    throw new Error('MarkdownIt. Failed to enable unknown rule(s): ' + missed)\n  }\n\n  return this\n}\n\n/** chainable\n * MarkdownIt.disable(list, ignoreInvalid)\n * - list (String|Array): rule name or list of rule names to disable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * The same as [[MarkdownIt.enable]], but turn specified rules off.\n **/\nMarkdownIt.prototype.disable = function (list, ignoreInvalid) {\n  let result = []\n\n  if (!Array.isArray(list)) { list = [list] }\n\n  ['core', 'block', 'inline'].forEach(function (chain) {\n    result = result.concat(this[chain].ruler.disable(list, true))\n  }, this)\n\n  result = result.concat(this.inline.ruler2.disable(list, true))\n\n  const missed = list.filter(function (name) { return result.indexOf(name) < 0 })\n\n  if (missed.length && !ignoreInvalid) {\n    throw new Error('MarkdownIt. Failed to disable unknown rule(s): ' + missed)\n  }\n  return this\n}\n\n/** chainable\n * MarkdownIt.use(plugin, params)\n *\n * Load specified plugin with given params into current parser instance.\n * It's just a sugar to call `plugin(md, params)` with curring.\n *\n * ##### Example\n *\n * ```javascript\n * var iterator = require('markdown-it-for-inline');\n * var md = require('markdown-it')()\n *             .use(iterator, 'foo_replace', 'text', function (tokens, idx) {\n *               tokens[idx].content = tokens[idx].content.replace(/foo/g, 'bar');\n *             });\n * ```\n **/\nMarkdownIt.prototype.use = function (plugin /*, params, ... */) {\n  const args = [this].concat(Array.prototype.slice.call(arguments, 1))\n  plugin.apply(plugin, args)\n  return this\n}\n\n/** internal\n * MarkdownIt.parse(src, env) -> Array\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Parse input string and return list of block tokens (special token type\n * \"inline\" will contain list of inline tokens). You should not call this\n * method directly, until you write custom renderer (for example, to produce\n * AST).\n *\n * `env` is used to pass data between \"distributed\" rules and return additional\n * metadata like reference info, needed for the renderer. It also can be used to\n * inject data in specific cases. Usually, you will be ok to pass `{}`,\n * and then pass updated object to renderer.\n **/\nMarkdownIt.prototype.parse = function (src, env) {\n  if (typeof src !== 'string') {\n    throw new Error('Input data should be a String')\n  }\n\n  const state = new this.core.State(src, this, env)\n\n  this.core.process(state)\n\n  return state.tokens\n}\n\n/**\n * MarkdownIt.render(src [, env]) -> String\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Render markdown string into html. It does all magic for you :).\n *\n * `env` can be used to inject additional metadata (`{}` by default).\n * But you will not need it with high probability. See also comment\n * in [[MarkdownIt.parse]].\n **/\nMarkdownIt.prototype.render = function (src, env) {\n  env = env || {}\n\n  return this.renderer.render(this.parse(src, env), this.options, env)\n}\n\n/** internal\n * MarkdownIt.parseInline(src, env) -> Array\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * The same as [[MarkdownIt.parse]] but skip all block rules. It returns the\n * block tokens list with the single `inline` element, containing parsed inline\n * tokens in `children` property. Also updates `env` object.\n **/\nMarkdownIt.prototype.parseInline = function (src, env) {\n  const state = new this.core.State(src, this, env)\n\n  state.inlineMode = true\n  this.core.process(state)\n\n  return state.tokens\n}\n\n/**\n * MarkdownIt.renderInline(src [, env]) -> String\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Similar to [[MarkdownIt.render]] but for single paragraph content. Result\n * will NOT be wrapped into `<p>` tags.\n **/\nMarkdownIt.prototype.renderInline = function (src, env) {\n  env = env || {}\n\n  return this.renderer.render(this.parseInline(src, env), this.options, env)\n}\n\nexport default MarkdownIt\n","// markdown-it default options\n\nexport default {\n  options: {\n    // Enable HTML tags in source\n    html: false,\n\n    // Use '/' to close single tags (<br />)\n    xhtmlOut: false,\n\n    // Convert '\\n' in paragraphs into <br>\n    breaks: false,\n\n    // CSS language prefix for fenced blocks\n    langPrefix: 'language-',\n\n    // autoconvert URL-like texts to links\n    linkify: false,\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer: false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    // Internal protection, recursion limit\n    maxNesting: 100\n  },\n\n  components: {\n    core: {},\n    block: {},\n    inline: {}\n  }\n}\n","// \"Zero\" preset, with nothing enabled. Useful for manual configuring of simple\n// modes. For example, to parse bold/italic only.\n\nexport default {\n  options: {\n    // Enable HTML tags in source\n    html: false,\n\n    // Use '/' to close single tags (<br />)\n    xhtmlOut: false,\n\n    // Convert '\\n' in paragraphs into <br>\n    breaks: false,\n\n    // CSS language prefix for fenced blocks\n    langPrefix: 'language-',\n\n    // autoconvert URL-like texts to links\n    linkify: false,\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer: false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    // Internal protection, recursion limit\n    maxNesting: 20\n  },\n\n  components: {\n\n    core: {\n      rules: [\n        'normalize',\n        'block',\n        'inline',\n        'text_join'\n      ]\n    },\n\n    block: {\n      rules: [\n        'paragraph'\n      ]\n    },\n\n    inline: {\n      rules: [\n        'text'\n      ],\n      rules2: [\n        'balance_pairs',\n        'fragments_join'\n      ]\n    }\n  }\n}\n","// Commonmark default options\n\nexport default {\n  options: {\n    // Enable HTML tags in source\n    html: true,\n\n    // Use '/' to close single tags (<br />)\n    xhtmlOut: true,\n\n    // Convert '\\n' in paragraphs into <br>\n    breaks: false,\n\n    // CSS language prefix for fenced blocks\n    langPrefix: 'language-',\n\n    // autoconvert URL-like texts to links\n    linkify: false,\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer: false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    // Internal protection, recursion limit\n    maxNesting: 20\n  },\n\n  components: {\n\n    core: {\n      rules: [\n        'normalize',\n        'block',\n        'inline',\n        'text_join'\n      ]\n    },\n\n    block: {\n      rules: [\n        'blockquote',\n        'code',\n        'fence',\n        'heading',\n        'hr',\n        'html_block',\n        'lheading',\n        'list',\n        'reference',\n        'paragraph'\n      ]\n    },\n\n    inline: {\n      rules: [\n        'autolink',\n        'backticks',\n        'emphasis',\n        'entity',\n        'escape',\n        'html_inline',\n        'image',\n        'link',\n        'newline',\n        'text'\n      ],\n      rules2: [\n        'balance_pairs',\n        'emphasis',\n        'fragments_join'\n      ]\n    }\n  }\n}\n","// https://mathiasbynens.be/notes/javascript-encoding\n// https://github.com/bestiejs/punycode.js - punycode.ucs2.decode\nexport default function ucs2length(str: string): number {\n  const len = str.length\n  let length = 0\n  let pos = 0\n  let value: number\n  while (pos < len) {\n    length++\n    value = str.charCodeAt(pos++)\n    if (value >= 0xd800 && value <= 0xdbff && pos < len) {\n      // high surrogate, and there is a next character\n      value = str.charCodeAt(pos)\n      if ((value & 0xfc00) === 0xdc00) pos++ // low surrogate\n    }\n  }\n  return length\n}\n\nucs2length.code = 'require(\"ajv/dist/runtime/ucs2length\").default'\n","import { useRef, useCallback } from \"react\";\n\nconst useRefCallback = (callback, keepInit = false) => {\n  const callbackRef = useRef(callback);\n  if (!keepInit) {\n    callbackRef.current = callback;\n  }\n  return useCallback((...args) => {\n    return callbackRef.current && callbackRef.current(...args);\n  }, []);\n};\n\nexport default useRefCallback;\n","import type {\n  AddedKeywordDefinition,\n  AnySchema,\n  AnySchemaObject,\n  KeywordErrorCxt,\n  KeywordCxtParams,\n} from \"../../types\"\nimport type {SchemaCxt, SchemaObjCxt} from \"..\"\nimport type {InstanceOptions} from \"../../core\"\nimport {boolOrEmptySchema, topBoolOrEmptySchema} from \"./boolSchema\"\nimport {coerceAndCheckDataType, getSchemaTypes} from \"./dataType\"\nimport {shouldUseGroup, shouldUseRule} from \"./applicability\"\nimport {checkDataType, checkDataTypes, reportTypeError, DataType} from \"./dataType\"\nimport {assignDefaults} from \"./defaults\"\nimport {funcKeywordCode, macroKeywordCode, validateKeywordUsage, validSchemaType} from \"./keyword\"\nimport {getSubschema, extendSubschemaData, SubschemaArgs, extendSubschemaMode} from \"./subschema\"\nimport {_, nil, str, or, not, getProperty, Block, Code, Name, CodeGen} from \"../codegen\"\nimport N from \"../names\"\nimport {resolveUrl} from \"../resolve\"\nimport {\n  schemaRefOrVal,\n  schemaHasRulesButRef,\n  checkUnknownRules,\n  checkStrictMode,\n  unescapeJsonPointer,\n  mergeEvaluated,\n} from \"../util\"\nimport type {JSONType, Rule, RuleGroup} from \"../rules\"\nimport {\n  ErrorPaths,\n  reportError,\n  reportExtraError,\n  resetErrorsCount,\n  keyword$DataError,\n} from \"../errors\"\n\n// schema compilation - generates validation function, subschemaCode (below) is used for subschemas\nexport function validateFunctionCode(it: SchemaCxt): void {\n  if (isSchemaObj(it)) {\n    checkKeywords(it)\n    if (schemaCxtHasRules(it)) {\n      topSchemaObjCode(it)\n      return\n    }\n  }\n  validateFunction(it, () => topBoolOrEmptySchema(it))\n}\n\nfunction validateFunction(\n  {gen, validateName, schema, schemaEnv, opts}: SchemaCxt,\n  body: Block\n): void {\n  if (opts.code.es5) {\n    gen.func(validateName, _`${N.data}, ${N.valCxt}`, schemaEnv.$async, () => {\n      gen.code(_`\"use strict\"; ${funcSourceUrl(schema, opts)}`)\n      destructureValCxtES5(gen, opts)\n      gen.code(body)\n    })\n  } else {\n    gen.func(validateName, _`${N.data}, ${destructureValCxt(opts)}`, schemaEnv.$async, () =>\n      gen.code(funcSourceUrl(schema, opts)).code(body)\n    )\n  }\n}\n\nfunction destructureValCxt(opts: InstanceOptions): Code {\n  return _`{${N.instancePath}=\"\", ${N.parentData}, ${N.parentDataProperty}, ${N.rootData}=${\n    N.data\n  }${opts.dynamicRef ? _`, ${N.dynamicAnchors}={}` : nil}}={}`\n}\n\nfunction destructureValCxtES5(gen: CodeGen, opts: InstanceOptions): void {\n  gen.if(\n    N.valCxt,\n    () => {\n      gen.var(N.instancePath, _`${N.valCxt}.${N.instancePath}`)\n      gen.var(N.parentData, _`${N.valCxt}.${N.parentData}`)\n      gen.var(N.parentDataProperty, _`${N.valCxt}.${N.parentDataProperty}`)\n      gen.var(N.rootData, _`${N.valCxt}.${N.rootData}`)\n      if (opts.dynamicRef) gen.var(N.dynamicAnchors, _`${N.valCxt}.${N.dynamicAnchors}`)\n    },\n    () => {\n      gen.var(N.instancePath, _`\"\"`)\n      gen.var(N.parentData, _`undefined`)\n      gen.var(N.parentDataProperty, _`undefined`)\n      gen.var(N.rootData, N.data)\n      if (opts.dynamicRef) gen.var(N.dynamicAnchors, _`{}`)\n    }\n  )\n}\n\nfunction topSchemaObjCode(it: SchemaObjCxt): void {\n  const {schema, opts, gen} = it\n  validateFunction(it, () => {\n    if (opts.$comment && schema.$comment) commentKeyword(it)\n    checkNoDefault(it)\n    gen.let(N.vErrors, null)\n    gen.let(N.errors, 0)\n    if (opts.unevaluated) resetEvaluated(it)\n    typeAndKeywords(it)\n    returnResults(it)\n  })\n  return\n}\n\nfunction resetEvaluated(it: SchemaObjCxt): void {\n  // TODO maybe some hook to execute it in the end to check whether props/items are Name, as in assignEvaluated\n  const {gen, validateName} = it\n  it.evaluated = gen.const(\"evaluated\", _`${validateName}.evaluated`)\n  gen.if(_`${it.evaluated}.dynamicProps`, () => gen.assign(_`${it.evaluated}.props`, _`undefined`))\n  gen.if(_`${it.evaluated}.dynamicItems`, () => gen.assign(_`${it.evaluated}.items`, _`undefined`))\n}\n\nfunction funcSourceUrl(schema: AnySchema, opts: InstanceOptions): Code {\n  const schId = typeof schema == \"object\" && schema[opts.schemaId]\n  return schId && (opts.code.source || opts.code.process) ? _`/*# sourceURL=${schId} */` : nil\n}\n\n// schema compilation - this function is used recursively to generate code for sub-schemas\nfunction subschemaCode(it: SchemaCxt, valid: Name): void {\n  if (isSchemaObj(it)) {\n    checkKeywords(it)\n    if (schemaCxtHasRules(it)) {\n      subSchemaObjCode(it, valid)\n      return\n    }\n  }\n  boolOrEmptySchema(it, valid)\n}\n\nfunction schemaCxtHasRules({schema, self}: SchemaCxt): boolean {\n  if (typeof schema == \"boolean\") return !schema\n  for (const key in schema) if (self.RULES.all[key]) return true\n  return false\n}\n\nfunction isSchemaObj(it: SchemaCxt): it is SchemaObjCxt {\n  return typeof it.schema != \"boolean\"\n}\n\nfunction subSchemaObjCode(it: SchemaObjCxt, valid: Name): void {\n  const {schema, gen, opts} = it\n  if (opts.$comment && schema.$comment) commentKeyword(it)\n  updateContext(it)\n  checkAsyncSchema(it)\n  const errsCount = gen.const(\"_errs\", N.errors)\n  typeAndKeywords(it, errsCount)\n  // TODO var\n  gen.var(valid, _`${errsCount} === ${N.errors}`)\n}\n\nfunction checkKeywords(it: SchemaObjCxt): void {\n  checkUnknownRules(it)\n  checkRefsAndKeywords(it)\n}\n\nfunction typeAndKeywords(it: SchemaObjCxt, errsCount?: Name): void {\n  if (it.opts.jtd) return schemaKeywords(it, [], false, errsCount)\n  const types = getSchemaTypes(it.schema)\n  const checkedTypes = coerceAndCheckDataType(it, types)\n  schemaKeywords(it, types, !checkedTypes, errsCount)\n}\n\nfunction checkRefsAndKeywords(it: SchemaObjCxt): void {\n  const {schema, errSchemaPath, opts, self} = it\n  if (schema.$ref && opts.ignoreKeywordsWithRef && schemaHasRulesButRef(schema, self.RULES)) {\n    self.logger.warn(`$ref: keywords ignored in schema at path \"${errSchemaPath}\"`)\n  }\n}\n\nfunction checkNoDefault(it: SchemaObjCxt): void {\n  const {schema, opts} = it\n  if (schema.default !== undefined && opts.useDefaults && opts.strictSchema) {\n    checkStrictMode(it, \"default is ignored in the schema root\")\n  }\n}\n\nfunction updateContext(it: SchemaObjCxt): void {\n  const schId = it.schema[it.opts.schemaId]\n  if (schId) it.baseId = resolveUrl(it.opts.uriResolver, it.baseId, schId)\n}\n\nfunction checkAsyncSchema(it: SchemaObjCxt): void {\n  if (it.schema.$async && !it.schemaEnv.$async) throw new Error(\"async schema in sync schema\")\n}\n\nfunction commentKeyword({gen, schemaEnv, schema, errSchemaPath, opts}: SchemaObjCxt): void {\n  const msg = schema.$comment\n  if (opts.$comment === true) {\n    gen.code(_`${N.self}.logger.log(${msg})`)\n  } else if (typeof opts.$comment == \"function\") {\n    const schemaPath = str`${errSchemaPath}/$comment`\n    const rootName = gen.scopeValue(\"root\", {ref: schemaEnv.root})\n    gen.code(_`${N.self}.opts.$comment(${msg}, ${schemaPath}, ${rootName}.schema)`)\n  }\n}\n\nfunction returnResults(it: SchemaCxt): void {\n  const {gen, schemaEnv, validateName, ValidationError, opts} = it\n  if (schemaEnv.$async) {\n    // TODO assign unevaluated\n    gen.if(\n      _`${N.errors} === 0`,\n      () => gen.return(N.data),\n      () => gen.throw(_`new ${ValidationError as Name}(${N.vErrors})`)\n    )\n  } else {\n    gen.assign(_`${validateName}.errors`, N.vErrors)\n    if (opts.unevaluated) assignEvaluated(it)\n    gen.return(_`${N.errors} === 0`)\n  }\n}\n\nfunction assignEvaluated({gen, evaluated, props, items}: SchemaCxt): void {\n  if (props instanceof Name) gen.assign(_`${evaluated}.props`, props)\n  if (items instanceof Name) gen.assign(_`${evaluated}.items`, items)\n}\n\nfunction schemaKeywords(\n  it: SchemaObjCxt,\n  types: JSONType[],\n  typeErrors: boolean,\n  errsCount?: Name\n): void {\n  const {gen, schema, data, allErrors, opts, self} = it\n  const {RULES} = self\n  if (schema.$ref && (opts.ignoreKeywordsWithRef || !schemaHasRulesButRef(schema, RULES))) {\n    gen.block(() => keywordCode(it, \"$ref\", (RULES.all.$ref as Rule).definition)) // TODO typecast\n    return\n  }\n  if (!opts.jtd) checkStrictTypes(it, types)\n  gen.block(() => {\n    for (const group of RULES.rules) groupKeywords(group)\n    groupKeywords(RULES.post)\n  })\n\n  function groupKeywords(group: RuleGroup): void {\n    if (!shouldUseGroup(schema, group)) return\n    if (group.type) {\n      gen.if(checkDataType(group.type, data, opts.strictNumbers))\n      iterateKeywords(it, group)\n      if (types.length === 1 && types[0] === group.type && typeErrors) {\n        gen.else()\n        reportTypeError(it)\n      }\n      gen.endIf()\n    } else {\n      iterateKeywords(it, group)\n    }\n    // TODO make it \"ok\" call?\n    if (!allErrors) gen.if(_`${N.errors} === ${errsCount || 0}`)\n  }\n}\n\nfunction iterateKeywords(it: SchemaObjCxt, group: RuleGroup): void {\n  const {\n    gen,\n    schema,\n    opts: {useDefaults},\n  } = it\n  if (useDefaults) assignDefaults(it, group.type)\n  gen.block(() => {\n    for (const rule of group.rules) {\n      if (shouldUseRule(schema, rule)) {\n        keywordCode(it, rule.keyword, rule.definition, group.type)\n      }\n    }\n  })\n}\n\nfunction checkStrictTypes(it: SchemaObjCxt, types: JSONType[]): void {\n  if (it.schemaEnv.meta || !it.opts.strictTypes) return\n  checkContextTypes(it, types)\n  if (!it.opts.allowUnionTypes) checkMultipleTypes(it, types)\n  checkKeywordTypes(it, it.dataTypes)\n}\n\nfunction checkContextTypes(it: SchemaObjCxt, types: JSONType[]): void {\n  if (!types.length) return\n  if (!it.dataTypes.length) {\n    it.dataTypes = types\n    return\n  }\n  types.forEach((t) => {\n    if (!includesType(it.dataTypes, t)) {\n      strictTypesError(it, `type \"${t}\" not allowed by context \"${it.dataTypes.join(\",\")}\"`)\n    }\n  })\n  narrowSchemaTypes(it, types)\n}\n\nfunction checkMultipleTypes(it: SchemaObjCxt, ts: JSONType[]): void {\n  if (ts.length > 1 && !(ts.length === 2 && ts.includes(\"null\"))) {\n    strictTypesError(it, \"use allowUnionTypes to allow union type keyword\")\n  }\n}\n\nfunction checkKeywordTypes(it: SchemaObjCxt, ts: JSONType[]): void {\n  const rules = it.self.RULES.all\n  for (const keyword in rules) {\n    const rule = rules[keyword]\n    if (typeof rule == \"object\" && shouldUseRule(it.schema, rule)) {\n      const {type} = rule.definition\n      if (type.length && !type.some((t) => hasApplicableType(ts, t))) {\n        strictTypesError(it, `missing type \"${type.join(\",\")}\" for keyword \"${keyword}\"`)\n      }\n    }\n  }\n}\n\nfunction hasApplicableType(schTs: JSONType[], kwdT: JSONType): boolean {\n  return schTs.includes(kwdT) || (kwdT === \"number\" && schTs.includes(\"integer\"))\n}\n\nfunction includesType(ts: JSONType[], t: JSONType): boolean {\n  return ts.includes(t) || (t === \"integer\" && ts.includes(\"number\"))\n}\n\nfunction narrowSchemaTypes(it: SchemaObjCxt, withTypes: JSONType[]): void {\n  const ts: JSONType[] = []\n  for (const t of it.dataTypes) {\n    if (includesType(withTypes, t)) ts.push(t)\n    else if (withTypes.includes(\"integer\") && t === \"number\") ts.push(\"integer\")\n  }\n  it.dataTypes = ts\n}\n\nfunction strictTypesError(it: SchemaObjCxt, msg: string): void {\n  const schemaPath = it.schemaEnv.baseId + it.errSchemaPath\n  msg += ` at \"${schemaPath}\" (strictTypes)`\n  checkStrictMode(it, msg, it.opts.strictTypes)\n}\n\nexport class KeywordCxt implements KeywordErrorCxt {\n  readonly gen: CodeGen\n  readonly allErrors?: boolean\n  readonly keyword: string\n  readonly data: Name // Name referencing the current level of the data instance\n  readonly $data?: string | false\n  schema: any // keyword value in the schema\n  readonly schemaValue: Code | number | boolean // Code reference to keyword schema value or primitive value\n  readonly schemaCode: Code | number | boolean // Code reference to resolved schema value (different if schema is $data)\n  readonly schemaType: JSONType[] // allowed type(s) of keyword value in the schema\n  readonly parentSchema: AnySchemaObject\n  readonly errsCount?: Name // Name reference to the number of validation errors collected before this keyword,\n  // requires option trackErrors in keyword definition\n  params: KeywordCxtParams // object to pass parameters to error messages from keyword code\n  readonly it: SchemaObjCxt // schema compilation context (schema is guaranteed to be an object, not boolean)\n  readonly def: AddedKeywordDefinition\n\n  constructor(it: SchemaObjCxt, def: AddedKeywordDefinition, keyword: string) {\n    validateKeywordUsage(it, def, keyword)\n    this.gen = it.gen\n    this.allErrors = it.allErrors\n    this.keyword = keyword\n    this.data = it.data\n    this.schema = it.schema[keyword]\n    this.$data = def.$data && it.opts.$data && this.schema && this.schema.$data\n    this.schemaValue = schemaRefOrVal(it, this.schema, keyword, this.$data)\n    this.schemaType = def.schemaType\n    this.parentSchema = it.schema\n    this.params = {}\n    this.it = it\n    this.def = def\n\n    if (this.$data) {\n      this.schemaCode = it.gen.const(\"vSchema\", getData(this.$data, it))\n    } else {\n      this.schemaCode = this.schemaValue\n      if (!validSchemaType(this.schema, def.schemaType, def.allowUndefined)) {\n        throw new Error(`${keyword} value must be ${JSON.stringify(def.schemaType)}`)\n      }\n    }\n\n    if (\"code\" in def ? def.trackErrors : def.errors !== false) {\n      this.errsCount = it.gen.const(\"_errs\", N.errors)\n    }\n  }\n\n  result(condition: Code, successAction?: () => void, failAction?: () => void): void {\n    this.failResult(not(condition), successAction, failAction)\n  }\n\n  failResult(condition: Code, successAction?: () => void, failAction?: () => void): void {\n    this.gen.if(condition)\n    if (failAction) failAction()\n    else this.error()\n    if (successAction) {\n      this.gen.else()\n      successAction()\n      if (this.allErrors) this.gen.endIf()\n    } else {\n      if (this.allErrors) this.gen.endIf()\n      else this.gen.else()\n    }\n  }\n\n  pass(condition: Code, failAction?: () => void): void {\n    this.failResult(not(condition), undefined, failAction)\n  }\n\n  fail(condition?: Code): void {\n    if (condition === undefined) {\n      this.error()\n      if (!this.allErrors) this.gen.if(false) // this branch will be removed by gen.optimize\n      return\n    }\n    this.gen.if(condition)\n    this.error()\n    if (this.allErrors) this.gen.endIf()\n    else this.gen.else()\n  }\n\n  fail$data(condition: Code): void {\n    if (!this.$data) return this.fail(condition)\n    const {schemaCode} = this\n    this.fail(_`${schemaCode} !== undefined && (${or(this.invalid$data(), condition)})`)\n  }\n\n  error(append?: boolean, errorParams?: KeywordCxtParams, errorPaths?: ErrorPaths): void {\n    if (errorParams) {\n      this.setParams(errorParams)\n      this._error(append, errorPaths)\n      this.setParams({})\n      return\n    }\n    this._error(append, errorPaths)\n  }\n\n  private _error(append?: boolean, errorPaths?: ErrorPaths): void {\n    ;(append ? reportExtraError : reportError)(this, this.def.error, errorPaths)\n  }\n\n  $dataError(): void {\n    reportError(this, this.def.$dataError || keyword$DataError)\n  }\n\n  reset(): void {\n    if (this.errsCount === undefined) throw new Error('add \"trackErrors\" to keyword definition')\n    resetErrorsCount(this.gen, this.errsCount)\n  }\n\n  ok(cond: Code | boolean): void {\n    if (!this.allErrors) this.gen.if(cond)\n  }\n\n  setParams(obj: KeywordCxtParams, assign?: true): void {\n    if (assign) Object.assign(this.params, obj)\n    else this.params = obj\n  }\n\n  block$data(valid: Name, codeBlock: () => void, $dataValid: Code = nil): void {\n    this.gen.block(() => {\n      this.check$data(valid, $dataValid)\n      codeBlock()\n    })\n  }\n\n  check$data(valid: Name = nil, $dataValid: Code = nil): void {\n    if (!this.$data) return\n    const {gen, schemaCode, schemaType, def} = this\n    gen.if(or(_`${schemaCode} === undefined`, $dataValid))\n    if (valid !== nil) gen.assign(valid, true)\n    if (schemaType.length || def.validateSchema) {\n      gen.elseIf(this.invalid$data())\n      this.$dataError()\n      if (valid !== nil) gen.assign(valid, false)\n    }\n    gen.else()\n  }\n\n  invalid$data(): Code {\n    const {gen, schemaCode, schemaType, def, it} = this\n    return or(wrong$DataType(), invalid$DataSchema())\n\n    function wrong$DataType(): Code {\n      if (schemaType.length) {\n        /* istanbul ignore if */\n        if (!(schemaCode instanceof Name)) throw new Error(\"ajv implementation error\")\n        const st = Array.isArray(schemaType) ? schemaType : [schemaType]\n        return _`${checkDataTypes(st, schemaCode, it.opts.strictNumbers, DataType.Wrong)}`\n      }\n      return nil\n    }\n\n    function invalid$DataSchema(): Code {\n      if (def.validateSchema) {\n        const validateSchemaRef = gen.scopeValue(\"validate$data\", {ref: def.validateSchema}) // TODO value.code for standalone\n        return _`!${validateSchemaRef}(${schemaCode})`\n      }\n      return nil\n    }\n  }\n\n  subschema(appl: SubschemaArgs, valid: Name): SchemaCxt {\n    const subschema = getSubschema(this.it, appl)\n    extendSubschemaData(subschema, this.it, appl)\n    extendSubschemaMode(subschema, appl)\n    const nextContext = {...this.it, ...subschema, items: undefined, props: undefined}\n    subschemaCode(nextContext, valid)\n    return nextContext\n  }\n\n  mergeEvaluated(schemaCxt: SchemaCxt, toName?: typeof Name): void {\n    const {it, gen} = this\n    if (!it.opts.unevaluated) return\n    if (it.props !== true && schemaCxt.props !== undefined) {\n      it.props = mergeEvaluated.props(gen, schemaCxt.props, it.props, toName)\n    }\n    if (it.items !== true && schemaCxt.items !== undefined) {\n      it.items = mergeEvaluated.items(gen, schemaCxt.items, it.items, toName)\n    }\n  }\n\n  mergeValidEvaluated(schemaCxt: SchemaCxt, valid: Name): boolean | void {\n    const {it, gen} = this\n    if (it.opts.unevaluated && (it.props !== true || it.items !== true)) {\n      gen.if(valid, () => this.mergeEvaluated(schemaCxt, Name))\n      return true\n    }\n  }\n}\n\nfunction keywordCode(\n  it: SchemaObjCxt,\n  keyword: string,\n  def: AddedKeywordDefinition,\n  ruleType?: JSONType\n): void {\n  const cxt = new KeywordCxt(it, def, keyword)\n  if (\"code\" in def) {\n    def.code(cxt, ruleType)\n  } else if (cxt.$data && def.validate) {\n    funcKeywordCode(cxt, def)\n  } else if (\"macro\" in def) {\n    macroKeywordCode(cxt, def)\n  } else if (def.compile || def.validate) {\n    funcKeywordCode(cxt, def)\n  }\n}\n\nconst JSON_POINTER = /^\\/(?:[^~]|~0|~1)*$/\nconst RELATIVE_JSON_POINTER = /^([0-9]+)(#|\\/(?:[^~]|~0|~1)*)?$/\nexport function getData(\n  $data: string,\n  {dataLevel, dataNames, dataPathArr}: SchemaCxt\n): Code | number {\n  let jsonPointer\n  let data: Code\n  if ($data === \"\") return N.rootData\n  if ($data[0] === \"/\") {\n    if (!JSON_POINTER.test($data)) throw new Error(`Invalid JSON-pointer: ${$data}`)\n    jsonPointer = $data\n    data = N.rootData\n  } else {\n    const matches = RELATIVE_JSON_POINTER.exec($data)\n    if (!matches) throw new Error(`Invalid JSON-pointer: ${$data}`)\n    const up: number = +matches[1]\n    jsonPointer = matches[2]\n    if (jsonPointer === \"#\") {\n      if (up >= dataLevel) throw new Error(errorMsg(\"property/index\", up))\n      return dataPathArr[dataLevel - up]\n    }\n    if (up > dataLevel) throw new Error(errorMsg(\"data\", up))\n    data = dataNames[dataLevel - up]\n    if (!jsonPointer) return data\n  }\n\n  let expr = data\n  const segments = jsonPointer.split(\"/\")\n  for (const segment of segments) {\n    if (segment) {\n      data = _`${data}${getProperty(unescapeJsonPointer(segment))}`\n      expr = _`${expr} && ${data}`\n    }\n  }\n  return expr\n\n  function errorMsg(pointerType: string, up: number): string {\n    return `Cannot access ${pointerType} ${up} levels up, current level is ${dataLevel}`\n  }\n}\n","import {Name} from \"./codegen\"\n\nconst names = {\n  // validation function arguments\n  data: new Name(\"data\"), // data passed to validation function\n  // args passed from referencing schema\n  valCxt: new Name(\"valCxt\"), // validation/data context - should not be used directly, it is destructured to the names below\n  instancePath: new Name(\"instancePath\"),\n  parentData: new Name(\"parentData\"),\n  parentDataProperty: new Name(\"parentDataProperty\"),\n  rootData: new Name(\"rootData\"), // root data - same as the data passed to the first/top validation function\n  dynamicAnchors: new Name(\"dynamicAnchors\"), // used to support recursiveRef and dynamicRef\n  // function scoped variables\n  vErrors: new Name(\"vErrors\"), // null or array of validation errors\n  errors: new Name(\"errors\"), // counter of validation errors\n  this: new Name(\"this\"),\n  // \"globals\"\n  self: new Name(\"self\"),\n  scope: new Name(\"scope\"),\n  // JTD serialize/parse name for JSON string and position\n  json: new Name(\"json\"),\n  jsonPos: new Name(\"jsonPos\"),\n  jsonLen: new Name(\"jsonLen\"),\n  jsonPart: new Name(\"jsonPart\"),\n}\n\nexport default names\n","import type {CodeKeywordDefinition, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str, operators} from \"../../compile/codegen\"\nimport {useFunc} from \"../../compile/util\"\nimport ucs2length from \"../../runtime/ucs2length\"\n\nconst error: KeywordErrorDefinition = {\n  message({keyword, schemaCode}) {\n    const comp = keyword === \"maxLength\" ? \"more\" : \"fewer\"\n    return str`must NOT have ${comp} than ${schemaCode} characters`\n  },\n  params: ({schemaCode}) => _`{limit: ${schemaCode}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: [\"maxLength\", \"minLength\"],\n  type: \"string\",\n  schemaType: \"number\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {keyword, data, schemaCode, it} = cxt\n    const op = keyword === \"maxLength\" ? operators.GT : operators.LT\n    const len =\n      it.opts.unicode === false ? _`${data}.length` : _`${useFunc(cxt.gen, ucs2length)}(${data})`\n    cxt.fail$data(_`${len} ${op} ${schemaCode}`)\n  },\n}\n\nexport default def\n","'use strict';\n\n// do not edit .js files directly - edit src/index.jst\n\n\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      var key = keys[i];\n\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  return a!==a && b!==b;\n};\n","import type {\n  CodeKeywordDefinition,\n  ErrorObject,\n  KeywordErrorDefinition,\n  AnySchema,\n} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str, not, Name} from \"../../compile/codegen\"\nimport {alwaysValidSchema, checkStrictMode, Type} from \"../../compile/util\"\n\nexport type AdditionalItemsError = ErrorObject<\"additionalItems\", {limit: number}, AnySchema>\n\nconst error: KeywordErrorDefinition = {\n  message: ({params: {len}}) => str`must NOT have more than ${len} items`,\n  params: ({params: {len}}) => _`{limit: ${len}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"additionalItems\" as const,\n  type: \"array\",\n  schemaType: [\"boolean\", \"object\"],\n  before: \"uniqueItems\",\n  error,\n  code(cxt: KeywordCxt) {\n    const {parentSchema, it} = cxt\n    const {items} = parentSchema\n    if (!Array.isArray(items)) {\n      checkStrictMode(it, '\"additionalItems\" is ignored when \"items\" is not an array of schemas')\n      return\n    }\n    validateAdditionalItems(cxt, items)\n  },\n}\n\nexport function validateAdditionalItems(cxt: KeywordCxt, items: AnySchema[]): void {\n  const {gen, schema, data, keyword, it} = cxt\n  it.items = true\n  const len = gen.const(\"len\", _`${data}.length`)\n  if (schema === false) {\n    cxt.setParams({len: items.length})\n    cxt.pass(_`${len} <= ${items.length}`)\n  } else if (typeof schema == \"object\" && !alwaysValidSchema(it, schema)) {\n    const valid = gen.var(\"valid\", _`${len} <= ${items.length}`) // TODO var\n    gen.if(not(valid), () => validateItems(valid))\n    cxt.ok(valid)\n  }\n\n  function validateItems(valid: Name): void {\n    gen.forRange(\"i\", items.length, len, (i) => {\n      cxt.subschema({keyword, dataProp: i, dataPropType: Type.Num}, valid)\n      if (!it.allErrors) gen.if(not(valid), () => gen.break())\n    })\n  }\n}\n\nexport default def\n","'use strict'\n\nconst { normalizeIPv6, normalizeIPv4, removeDotSegments, recomposeAuthority, normalizeComponentEncoding } = require('./lib/utils')\nconst SCHEMES = require('./lib/schemes')\n\nfunction normalize (uri, options) {\n  if (typeof uri === 'string') {\n    uri = serialize(parse(uri, options), options)\n  } else if (typeof uri === 'object') {\n    uri = parse(serialize(uri, options), options)\n  }\n  return uri\n}\n\nfunction resolve (baseURI, relativeURI, options) {\n  const schemelessOptions = Object.assign({ scheme: 'null' }, options)\n  const resolved = resolveComponents(parse(baseURI, schemelessOptions), parse(relativeURI, schemelessOptions), schemelessOptions, true)\n  return serialize(resolved, { ...schemelessOptions, skipEscape: true })\n}\n\nfunction resolveComponents (base, relative, options, skipNormalization) {\n  const target = {}\n  if (!skipNormalization) {\n    base = parse(serialize(base, options), options) // normalize base components\n    relative = parse(serialize(relative, options), options) // normalize relative components\n  }\n  options = options || {}\n\n  if (!options.tolerant && relative.scheme) {\n    target.scheme = relative.scheme\n    // target.authority = relative.authority;\n    target.userinfo = relative.userinfo\n    target.host = relative.host\n    target.port = relative.port\n    target.path = removeDotSegments(relative.path || '')\n    target.query = relative.query\n  } else {\n    if (relative.userinfo !== undefined || relative.host !== undefined || relative.port !== undefined) {\n      // target.authority = relative.authority;\n      target.userinfo = relative.userinfo\n      target.host = relative.host\n      target.port = relative.port\n      target.path = removeDotSegments(relative.path || '')\n      target.query = relative.query\n    } else {\n      if (!relative.path) {\n        target.path = base.path\n        if (relative.query !== undefined) {\n          target.query = relative.query\n        } else {\n          target.query = base.query\n        }\n      } else {\n        if (relative.path.charAt(0) === '/') {\n          target.path = removeDotSegments(relative.path)\n        } else {\n          if ((base.userinfo !== undefined || base.host !== undefined || base.port !== undefined) && !base.path) {\n            target.path = '/' + relative.path\n          } else if (!base.path) {\n            target.path = relative.path\n          } else {\n            target.path = base.path.slice(0, base.path.lastIndexOf('/') + 1) + relative.path\n          }\n          target.path = removeDotSegments(target.path)\n        }\n        target.query = relative.query\n      }\n      // target.authority = base.authority;\n      target.userinfo = base.userinfo\n      target.host = base.host\n      target.port = base.port\n    }\n    target.scheme = base.scheme\n  }\n\n  target.fragment = relative.fragment\n\n  return target\n}\n\nfunction equal (uriA, uriB, options) {\n  if (typeof uriA === 'string') {\n    uriA = unescape(uriA)\n    uriA = serialize(normalizeComponentEncoding(parse(uriA, options), true), { ...options, skipEscape: true })\n  } else if (typeof uriA === 'object') {\n    uriA = serialize(normalizeComponentEncoding(uriA, true), { ...options, skipEscape: true })\n  }\n\n  if (typeof uriB === 'string') {\n    uriB = unescape(uriB)\n    uriB = serialize(normalizeComponentEncoding(parse(uriB, options), true), { ...options, skipEscape: true })\n  } else if (typeof uriB === 'object') {\n    uriB = serialize(normalizeComponentEncoding(uriB, true), { ...options, skipEscape: true })\n  }\n\n  return uriA.toLowerCase() === uriB.toLowerCase()\n}\n\nfunction serialize (cmpts, opts) {\n  const components = {\n    host: cmpts.host,\n    scheme: cmpts.scheme,\n    userinfo: cmpts.userinfo,\n    port: cmpts.port,\n    path: cmpts.path,\n    query: cmpts.query,\n    nid: cmpts.nid,\n    nss: cmpts.nss,\n    uuid: cmpts.uuid,\n    fragment: cmpts.fragment,\n    reference: cmpts.reference,\n    resourceName: cmpts.resourceName,\n    secure: cmpts.secure,\n    error: ''\n  }\n  const options = Object.assign({}, opts)\n  const uriTokens = []\n\n  // find scheme handler\n  const schemeHandler = SCHEMES[(options.scheme || components.scheme || '').toLowerCase()]\n\n  // perform scheme specific serialization\n  if (schemeHandler && schemeHandler.serialize) schemeHandler.serialize(components, options)\n\n  if (components.path !== undefined) {\n    if (!options.skipEscape) {\n      components.path = escape(components.path)\n\n      if (components.scheme !== undefined) {\n        components.path = components.path.split('%3A').join(':')\n      }\n    } else {\n      components.path = unescape(components.path)\n    }\n  }\n\n  if (options.reference !== 'suffix' && components.scheme) {\n    uriTokens.push(components.scheme, ':')\n  }\n\n  const authority = recomposeAuthority(components)\n  if (authority !== undefined) {\n    if (options.reference !== 'suffix') {\n      uriTokens.push('//')\n    }\n\n    uriTokens.push(authority)\n\n    if (components.path && components.path.charAt(0) !== '/') {\n      uriTokens.push('/')\n    }\n  }\n  if (components.path !== undefined) {\n    let s = components.path\n\n    if (!options.absolutePath && (!schemeHandler || !schemeHandler.absolutePath)) {\n      s = removeDotSegments(s)\n    }\n\n    if (authority === undefined) {\n      s = s.replace(/^\\/\\//u, '/%2F') // don't allow the path to start with \"//\"\n    }\n\n    uriTokens.push(s)\n  }\n\n  if (components.query !== undefined) {\n    uriTokens.push('?', components.query)\n  }\n\n  if (components.fragment !== undefined) {\n    uriTokens.push('#', components.fragment)\n  }\n  return uriTokens.join('')\n}\n\nconst hexLookUp = Array.from({ length: 127 }, (_v, k) => /[^!\"$&'()*+,\\-.;=_`a-z{}~]/u.test(String.fromCharCode(k)))\n\nfunction nonSimpleDomain (value) {\n  let code = 0\n  for (let i = 0, len = value.length; i < len; ++i) {\n    code = value.charCodeAt(i)\n    if (code > 126 || hexLookUp[code]) {\n      return true\n    }\n  }\n  return false\n}\n\nconst URI_PARSE = /^(?:([^#/:?]+):)?(?:\\/\\/((?:([^#/?@]*)@)?(\\[[^#/?\\]]+\\]|[^#/:?]*)(?::(\\d*))?))?([^#?]*)(?:\\?([^#]*))?(?:#((?:.|[\\n\\r])*))?/u\n\nfunction parse (uri, opts) {\n  const options = Object.assign({}, opts)\n  const parsed = {\n    scheme: undefined,\n    userinfo: undefined,\n    host: '',\n    port: undefined,\n    path: '',\n    query: undefined,\n    fragment: undefined\n  }\n  const gotEncoding = uri.indexOf('%') !== -1\n  let isIP = false\n  if (options.reference === 'suffix') uri = (options.scheme ? options.scheme + ':' : '') + '//' + uri\n\n  const matches = uri.match(URI_PARSE)\n\n  if (matches) {\n    // store each component\n    parsed.scheme = matches[1]\n    parsed.userinfo = matches[3]\n    parsed.host = matches[4]\n    parsed.port = parseInt(matches[5], 10)\n    parsed.path = matches[6] || ''\n    parsed.query = matches[7]\n    parsed.fragment = matches[8]\n\n    // fix port number\n    if (isNaN(parsed.port)) {\n      parsed.port = matches[5]\n    }\n    if (parsed.host) {\n      const ipv4result = normalizeIPv4(parsed.host)\n      if (ipv4result.isIPV4 === false) {\n        const ipv6result = normalizeIPv6(ipv4result.host)\n        parsed.host = ipv6result.host.toLowerCase()\n        isIP = ipv6result.isIPV6\n      } else {\n        parsed.host = ipv4result.host\n        isIP = true\n      }\n    }\n    if (parsed.scheme === undefined && parsed.userinfo === undefined && parsed.host === undefined && parsed.port === undefined && parsed.query === undefined && !parsed.path) {\n      parsed.reference = 'same-document'\n    } else if (parsed.scheme === undefined) {\n      parsed.reference = 'relative'\n    } else if (parsed.fragment === undefined) {\n      parsed.reference = 'absolute'\n    } else {\n      parsed.reference = 'uri'\n    }\n\n    // check for reference errors\n    if (options.reference && options.reference !== 'suffix' && options.reference !== parsed.reference) {\n      parsed.error = parsed.error || 'URI is not a ' + options.reference + ' reference.'\n    }\n\n    // find scheme handler\n    const schemeHandler = SCHEMES[(options.scheme || parsed.scheme || '').toLowerCase()]\n\n    // check if scheme can't handle IRIs\n    if (!options.unicodeSupport && (!schemeHandler || !schemeHandler.unicodeSupport)) {\n      // if host component is a domain name\n      if (parsed.host && (options.domainHost || (schemeHandler && schemeHandler.domainHost)) && isIP === false && nonSimpleDomain(parsed.host)) {\n        // convert Unicode IDN -> ASCII IDN\n        try {\n          parsed.host = URL.domainToASCII(parsed.host.toLowerCase())\n        } catch (e) {\n          parsed.error = parsed.error || \"Host's domain name can not be converted to ASCII: \" + e\n        }\n      }\n      // convert IRI -> URI\n    }\n\n    if (!schemeHandler || (schemeHandler && !schemeHandler.skipNormalize)) {\n      if (gotEncoding && parsed.scheme !== undefined) {\n        parsed.scheme = unescape(parsed.scheme)\n      }\n      if (gotEncoding && parsed.host !== undefined) {\n        parsed.host = unescape(parsed.host)\n      }\n      if (parsed.path) {\n        parsed.path = escape(unescape(parsed.path))\n      }\n      if (parsed.fragment) {\n        parsed.fragment = encodeURI(decodeURIComponent(parsed.fragment))\n      }\n    }\n\n    // perform scheme specific parsing\n    if (schemeHandler && schemeHandler.parse) {\n      schemeHandler.parse(parsed, options)\n    }\n  } else {\n    parsed.error = parsed.error || 'URI can not be parsed.'\n  }\n  return parsed\n}\n\nconst fastUri = {\n  SCHEMES,\n  normalize,\n  resolve,\n  resolveComponents,\n  equal,\n  serialize,\n  parse\n}\n\nmodule.exports = fastUri\nmodule.exports.default = fastUri\nmodule.exports.fastUri = fastUri\n","import type {Vocabulary} from \"../../types\"\nimport formatKeyword from \"./format\"\n\nconst format: Vocabulary = [formatKeyword]\n\nexport default format\n","import type {ErrorNoParams, Vocabulary} from \"../../types\"\nimport additionalItems, {AdditionalItemsError} from \"./additionalItems\"\nimport prefixItems from \"./prefixItems\"\nimport items from \"./items\"\nimport items2020, {ItemsError} from \"./items2020\"\nimport contains, {ContainsError} from \"./contains\"\nimport dependencies, {DependenciesError} from \"./dependencies\"\nimport propertyNames, {PropertyNamesError} from \"./propertyNames\"\nimport additionalProperties, {AdditionalPropertiesError} from \"./additionalProperties\"\nimport properties from \"./properties\"\nimport patternProperties from \"./patternProperties\"\nimport notKeyword, {NotKeywordError} from \"./not\"\nimport anyOf, {AnyOfError} from \"./anyOf\"\nimport oneOf, {OneOfError} from \"./oneOf\"\nimport allOf from \"./allOf\"\nimport ifKeyword, {IfKeywordError} from \"./if\"\nimport thenElse from \"./thenElse\"\n\nexport default function getApplicator(draft2020 = false): Vocabulary {\n  const applicator = [\n    // any\n    notKeyword,\n    anyOf,\n    oneOf,\n    allOf,\n    ifKeyword,\n    thenElse,\n    // object\n    propertyNames,\n    additionalProperties,\n    dependencies,\n    properties,\n    patternProperties,\n  ]\n  // array\n  if (draft2020) applicator.push(prefixItems, items2020)\n  else applicator.push(additionalItems, items)\n  applicator.push(contains)\n  return applicator\n}\n\nexport type ApplicatorKeywordError =\n  | ErrorNoParams<\"false schema\">\n  | AdditionalItemsError\n  | ItemsError\n  | ContainsError\n  | AdditionalPropertiesError\n  | DependenciesError\n  | IfKeywordError\n  | AnyOfError\n  | OneOfError\n  | NotKeywordError\n  | PropertyNamesError\n","import type {KeywordErrorDefinition, KeywordErrorCxt} from \"../../types\"\nimport type {SchemaCxt} from \"..\"\nimport {reportError} from \"../errors\"\nimport {_, Name} from \"../codegen\"\nimport N from \"../names\"\n\nconst boolError: KeywordErrorDefinition = {\n  message: \"boolean schema is false\",\n}\n\nexport function topBoolOrEmptySchema(it: SchemaCxt): void {\n  const {gen, schema, validateName} = it\n  if (schema === false) {\n    falseSchemaError(it, false)\n  } else if (typeof schema == \"object\" && schema.$async === true) {\n    gen.return(N.data)\n  } else {\n    gen.assign(_`${validateName}.errors`, null)\n    gen.return(true)\n  }\n}\n\nexport function boolOrEmptySchema(it: SchemaCxt, valid: Name): void {\n  const {gen, schema} = it\n  if (schema === false) {\n    gen.var(valid, false) // TODO var\n    falseSchemaError(it)\n  } else {\n    gen.var(valid, true) // TODO var\n  }\n}\n\nfunction falseSchemaError(it: SchemaCxt, overrideAllErrors?: boolean): void {\n  const {gen, data} = it\n  // TODO maybe some other interface should be used for non-keyword validation errors...\n  const cxt: KeywordErrorCxt = {\n    gen,\n    keyword: \"false schema\",\n    data,\n    schema: false,\n    schemaCode: false,\n    schemaValue: false,\n    params: {},\n    it,\n  }\n  reportError(cxt, boolError, undefined, overrideAllErrors)\n}\n","import type {Vocabulary} from \"../types\"\nimport coreVocabulary from \"./core\"\nimport validationVocabulary from \"./validation\"\nimport getApplicatorVocabulary from \"./applicator\"\nimport formatVocabulary from \"./format\"\nimport {metadataVocabulary, contentVocabulary} from \"./metadata\"\n\nconst draft7Vocabularies: Vocabulary[] = [\n  coreVocabulary,\n  validationVocabulary,\n  getApplicatorVocabulary(),\n  formatVocabulary,\n  metadataVocabulary,\n  contentVocabulary,\n]\n\nexport default draft7Vocabularies\n","import * as uri from \"fast-uri\"\n\ntype URI = typeof uri & {code: string}\n;(uri as URI).code = 'require(\"ajv/dist/runtime/uri\").default'\n\nexport default uri as URI\n","import type {\n  CodeKeywordDefinition,\n  AddedKeywordDefinition,\n  ErrorObject,\n  KeywordErrorDefinition,\n  AnySchema,\n} from \"../../types\"\nimport {allSchemaProperties, usePattern, isOwnProperty} from \"../code\"\nimport {_, nil, or, not, Code, Name} from \"../../compile/codegen\"\nimport N from \"../../compile/names\"\nimport type {SubschemaArgs} from \"../../compile/validate/subschema\"\nimport {alwaysValidSchema, schemaRefOrVal, Type} from \"../../compile/util\"\n\nexport type AdditionalPropertiesError = ErrorObject<\n  \"additionalProperties\",\n  {additionalProperty: string},\n  AnySchema\n>\n\nconst error: KeywordErrorDefinition = {\n  message: \"must NOT have additional properties\",\n  params: ({params}) => _`{additionalProperty: ${params.additionalProperty}}`,\n}\n\nconst def: CodeKeywordDefinition & AddedKeywordDefinition = {\n  keyword: \"additionalProperties\",\n  type: [\"object\"],\n  schemaType: [\"boolean\", \"object\"],\n  allowUndefined: true,\n  trackErrors: true,\n  error,\n  code(cxt) {\n    const {gen, schema, parentSchema, data, errsCount, it} = cxt\n    /* istanbul ignore if */\n    if (!errsCount) throw new Error(\"ajv implementation error\")\n    const {allErrors, opts} = it\n    it.props = true\n    if (opts.removeAdditional !== \"all\" && alwaysValidSchema(it, schema)) return\n    const props = allSchemaProperties(parentSchema.properties)\n    const patProps = allSchemaProperties(parentSchema.patternProperties)\n    checkAdditionalProperties()\n    cxt.ok(_`${errsCount} === ${N.errors}`)\n\n    function checkAdditionalProperties(): void {\n      gen.forIn(\"key\", data, (key: Name) => {\n        if (!props.length && !patProps.length) additionalPropertyCode(key)\n        else gen.if(isAdditional(key), () => additionalPropertyCode(key))\n      })\n    }\n\n    function isAdditional(key: Name): Code {\n      let definedProp: Code\n      if (props.length > 8) {\n        // TODO maybe an option instead of hard-coded 8?\n        const propsSchema = schemaRefOrVal(it, parentSchema.properties, \"properties\")\n        definedProp = isOwnProperty(gen, propsSchema as Code, key)\n      } else if (props.length) {\n        definedProp = or(...props.map((p) => _`${key} === ${p}`))\n      } else {\n        definedProp = nil\n      }\n      if (patProps.length) {\n        definedProp = or(definedProp, ...patProps.map((p) => _`${usePattern(cxt, p)}.test(${key})`))\n      }\n      return not(definedProp)\n    }\n\n    function deleteAdditional(key: Name): void {\n      gen.code(_`delete ${data}[${key}]`)\n    }\n\n    function additionalPropertyCode(key: Name): void {\n      if (opts.removeAdditional === \"all\" || (opts.removeAdditional && schema === false)) {\n        deleteAdditional(key)\n        return\n      }\n\n      if (schema === false) {\n        cxt.setParams({additionalProperty: key})\n        cxt.error()\n        if (!allErrors) gen.break()\n        return\n      }\n\n      if (typeof schema == \"object\" && !alwaysValidSchema(it, schema)) {\n        const valid = gen.name(\"valid\")\n        if (opts.removeAdditional === \"failing\") {\n          applyAdditionalSchema(key, valid, false)\n          gen.if(not(valid), () => {\n            cxt.reset()\n            deleteAdditional(key)\n          })\n        } else {\n          applyAdditionalSchema(key, valid)\n          if (!allErrors) gen.if(not(valid), () => gen.break())\n        }\n      }\n    }\n\n    function applyAdditionalSchema(key: Name, valid: Name, errors?: false): void {\n      const subschema: SubschemaArgs = {\n        keyword: \"additionalProperties\",\n        dataProp: key,\n        dataPropType: Type.Str,\n      }\n      if (errors === false) {\n        Object.assign(subschema, {\n          compositeRule: true,\n          createErrors: false,\n          allErrors: false,\n        })\n      }\n      cxt.subschema(subschema, valid)\n    }\n  },\n}\n\nexport default def\n"],"names":["codegen_1","require","util_1","def","keyword","schemaType","trackErrors","error","message","_ref","params","str","ifClause","_ref2","_","code","cxt","gen","parentSchema","it","undefined","then","else","checkStrictMode","hasThen","hasSchema","hasElse","valid","let","schValid","name","schCxt","subschema","compositeRule","createErrors","allErrors","mergeEvaluated","validateIf","reset","setParams","if","validateClause","not","assign","mergeValidEvaluated","pass","schema","alwaysValidSchema","exports","ValidationError","Error","constructor","errors","super","this","ajv","validation","code_1","type","$data","schemaCode","data","u","opts","unicodeRegExp","regExp","usePattern","fail$data","names_1","addError","errObj","err","const","default","vErrors","returnErrors","errs","validateName","schemaEnv","$async","throw","return","arguments","length","keywordError","errorPaths","overrideAllErrors","errorObjectCode","errsCount","_ref3","schemaValue","forRange","i","strConcat","instancePath","errorPath","errSchemaPath","verbose","E","Name","schemaPath","propertyName","keyValues","errorInstancePath","errorSchemaPath","_ref8","topSchemaRef","push","messages","extraErrorProps","object","errorObject","_ref4","_ref5","instPath","getErrorPath","Type","Str","_ref6","_ref7","schPath","before","min","max","minContains","maxContains","next","len","fail","cond","items","validateItemsWithCount","count","validateItems","break","checkLimits","_valid","block","dataProp","dataPropType","Num","result","rules_1","applicability_1","errors_1","DataType","getJSONTypes","ts","types","Array","isArray","every","isJSONType","join","includes","nullable","coerceTo","coerceTypes","filter","t","COERCIBLE","has","coerceToTypes","checkTypes","schemaHasRulesForType","wrongType","checkDataTypes","strictNumbers","Wrong","dataType","coerced","coerceSpecificType","elseIf","reportTypeError","endIf","expr","parentData","parentDataProperty","assignParentData","coerceData","Set","checkDataType","strictNums","correct","Correct","EQ","operators","NEQ","numCond","_cond","nil","and","dataTypes","toHash","array","notObj","null","number","integer","typeError","schemaRefOrVal","getTypeErrorContext","reportError","validate_1","Object","enumerable","get","KeywordCxt","stringify","CodeGen","validation_error_1","ref_error_1","compile_1","codegen_2","resolve_1","dataType_1","$dataRefSchema","uri_1","defaultRegExp","flags","RegExp","META_IGNORE_OPTIONS","EXT_SCOPE_NAMES","removedOptions","errorDataPath","format","jsonPointers","extendRefs","missingRefs","processCode","sourceCode","strictDefaults","strictKeywords","uniqueItems","unknownFormats","cache","serialize","ajvErrors","deprecatedOptions","ignoreKeywordsWithRef","jsPropertySyntax","unicode","requiredOptions","o","s","strict","_optz","_a","optimize","_c","_b","uriResolver","_d","strictSchema","_f","_e","_h","_g","strictTypes","_k","_j","strictTuples","_m","_l","strictRequired","_p","_o","loopRequired","_q","loopEnum","_r","meta","_s","_t","inlineRefs","_u","schemaId","_v","addUsedSchema","_w","validateSchema","_x","validateFormats","_y","_z","int32range","_0","Ajv","schemas","refs","formats","_compilations","_loading","_cache","Map","es5","lines","scope","ValueScope","prefixes","logger","noLogs","console","log","warn","getLogger","formatOpt","RULES","getRules","checkOptions","call","_metaOpts","getMetaSchemaOptions","addInitialFormats","_addVocabularies","_addDefaultMetaSchema","keywords","addInitialKeywords","addMetaSchema","addInitialSchemas","addKeyword","_dataRefSchema","id","$id","defaultMeta","validate","schemaKeyRef","v","getSchema","compile","_meta","sch","_addSchema","_compileSchemaEnv","compileAsync","loadSchema","runCompileAsync","async","_schema","loadMetaSchema","$schema","_compileAsync","$ref","e","checkLoaded","loadMissingSchema","missingSchema","ref","missingRef","_loadSchema","addSchema","p","key","_validateSchema","normalizeId","_checkUnique","throwOrLogError","errorsText","keyRef","getSchEnv","root","SchemaEnv","resolveSchema","removeSchema","_removeAllSchemas","clear","delete","cacheKey","addVocabulary","definitions","kwdOrDef","checkKeyword","eachItem","kwd","addRule","keywordMetaschema","definition","k","forEach","getKeyword","rule","all","removeKeyword","group","rules","findIndex","splice","addFormat","separator","dataVar","map","reduce","text","msg","$dataMetaSchema","metaSchema","keywordsJsonPointers","JSON","parse","jsonPointer","segments","split","slice","seg","schemaOrData","regex","test","baseId","jtd","localRefs","getSchemaRefs","set","startsWith","_compileMetaSchema","compileSchema","currentOpts","checkOpts","options","opt","optsSchemas","defs","metaOpts","MissingRefError","KEYWORD_NAME","post","ruleGroup","find","addBeforeRule","implements","_rule","$dataRef","anyOf","scope_1","code_2","getProperty","regexpCode","scope_2","Scope","ValueScopeName","varKinds","GT","_Code","GTE","LT","LTE","NOT","OR","AND","ADD","Node","optimizeNodes","optimizeNames","_names","_constants","Def","varKind","rhs","render","_n","var","names","constants","optimizeExpr","_CodeOrName","Assign","lhs","sideEffects","addExprNames","AssignOp","op","Label","label","Break","Throw","AnyCode","ParentNode","nodes","n","subtractNames","addNames","BlockNode","Root","Else","kind","If","condition","ns","For","ForLoop","iteration","ForRange","from","to","ForIter","loop","iterable","Func","args","Return","Try","catch","finally","Catch","Finally","replaceName","_items","some","c","x","par","extScope","_values","_blockStarts","_extScope","_scope","parent","_nodes","toString","_root","prefix","scopeName","scopeValue","prefixOrName","value","add","getScopeValue","keyOrRef","getValue","scopeRefs","scopeCode","_def","nameOrPrefix","constant","toName","_leafNode","_constant","_len","_key","addCodeArg","thenBody","elseBody","_blockNode","_elseNode","_endBlockNode","_for","node","forBody","endFor","for","forOf","arr","forIn","obj","ownProperties","try","tryBody","catchCode","finallyCode","_currNode","body","nodeCount","endBlock","pop","toClose","func","funcBody","endFunc","N1","N2","andCode","mappend","_len2","_key2","orCode","y","_len3","_key3","modifyData","useKeyword","macroSchema","macro","self","schemaRef","checkAsyncKeyword","validateRef","assignValid","_await","passCxt","passContext","passSchema","callValidateCode","modifying","reportErrs","block$data","ruleErrs","validateAsync","validateErrs","validateSync","extendErrors","addErrs","ok","allowUndefined","st","deps","dependencies","prototype","hasOwnProperty","core_1","draft7_1","discriminator_1","draft7MetaSchema","META_SUPPORT_DATA","META_SCHEMA_ID","discriminator","module","defineProperty","checkUnknownRules","schemaHasRules","escapeJsonPointer","replace","unescapeJsonPointer","makeMergeEvaluated","mergeNames","mergeToName","mergeValues","resultToName","res","evaluatedPropsToName","ps","props","setEvaluated","keys","hash","item","decodeURIComponent","encodeURIComponent","xs","f","Math","snippets","mode","isNumber","UUID_REG","URN_REG","isSecure","wsComponents","secure","String","scheme","toLowerCase","httpParse","components","host","httpSerialize","port","path","http","domainHost","ws","resourceName","query","fragment","SCHEMES","https","wss","urn","urnComponents","matches","match","nid","nss","urnScheme","schemeHandler","uriComponents","skipEscape","skipNormalize","uuidComponents","uuid","tolerant","resolver","resolveUrl","getFullPath","ruleType","fmts","fDef","fType","or","callFormat","validData","invalidFmt","validate$DataFormat","formatDef","unknownMsg","unknownFormat","fmtType","fmtRef","fmtDef","fmt","getFormat","validCondition","validateFormat","HEX","IPV4_REG","normalizeIPv4","findToken","isIPV4","address","stripLeadingZeros","stringArrayToHexStripped","input","keepZero","acc","strip","normalizeIPv6","isIPV6","ipv6","tokenCount","output","zone","buffer","isZone","endipv6Encountered","endIpv6","consume","hex","cursor","getIPV6","newHost","escapedHost","token","out","skip","l","ind","RDS1","RDS2","RDS3","RDS5","recomposeAuthority","uriTokens","userinfo","unescape","ipV4res","ipV6res","normalizeComponentEncoding","esc","escape","removeDotSegments","im","comp","IDENTIFIER","emptyStr","_str","strs","plus","safeStringify","mergeExprItems","arg","a","b","c1","c2","rx","schemaProp","env","dynamicAnchors","_sch","getCompilingSchema","rootId","_ValidationError","schemaCxt","dataNames","dataPathArr","dataLevel","definedProperties","source","validateFunctionCode","validateCode","process","Function","makeValidate","scopeValues","unevaluated","evaluated","dynamicProps","dynamicItems","inlineOrCompile","inlineRef","schEnv","s2","s1","resolve","refPath","_getFullPath","getJsonPointer","schOrRef","schId","schOrFunc","PREVENT_SCOPE_CHANGE","parsedRef","part","partSchema","unescapeFragment","schemaHasRulesButRef","passing","schArr","missingProperty","useLoop","loopAllRequired","prop","checkReportMissingProp","allErrorsMode","missing","propertyInData","loopUntilMissing","checkMissingProp","reportMissingProp","exitOnErrorMode","properties","requiredKey","noPropertyInData","equal_1","useFunc","failResult","additionalProperties_1","removeAdditional","additionalProperties","allProps","allSchemaProperties","hasDefault","applyPropertySchema","useDefaults","id_1","ref_1","core","A","B","C","d","D","F","DiscrError","ops","KWDs","maximum","okStr","minimum","exclusiveMaximum","exclusiveMinimum","j","itemTypes","getSchemaTypes","loopN","indices","loopN2","eql","outer","equal","traverse","SIMPLE_INLINED","limit","hasRef","countKeys","REF_KEYWORDS","Infinity","TRAILING_SLASH_HASH","ANCHOR","baseIds","pathPrefix","schemaRefs","allKeys","jsonPtr","parentJsonPtr","fullPath","innerBaseId","addRef","_resolve","ambiguos","checkAmbiguosRef","addAnchor","anchor","$anchor","$dynamicAnchor","sch1","sch2","assignDefault","defaultValue","childData","ty","shouldUseGroup","shouldUseRule","callRef","rootName","callRootRef","schOrEnv","resolveRef","getValidate","callValidate","schName","inlineRefSchema","addErrorsFrom","addEvaluatedFrom","schEvaluated","callAsyncRef","limitNumber_1","multipleOf_1","limitLength_1","pattern_1","limitProperties_1","required_1","limitItems_1","uniqueItems_1","const_1","enum_1","property","depsCount","property_ies","propDeps","schDeps","propertyDeps","schemaDeps","splitDependencies","validatePropertyDeps","validateSchemaDeps","hasProperty","depProp","isNothing","subject","common","isObject","toArray","sequence","repeat","string","cycle","isNegativeZero","Number","NEGATIVE_INFINITY","extend","target","index","sourceKeys","formatError","exception","compact","where","reason","mark","line","column","snippet","YAMLException$1","captureStackTrace","stack","create","getLine","lineStart","lineEnd","position","maxLineLength","head","tail","maxHalfLength","floor","pos","padStart","maxLength","indent","linesBefore","linesAfter","re","lineStarts","lineEnds","foundLineNo","exec","lineNoLength","TYPE_CONSTRUCTOR_OPTIONS","YAML_NODE_KINDS","tag","indexOf","construct","instanceOf","predicate","represent","representName","defaultStyle","multi","styleAliases","style","alias","compileStyleAliases","compileList","currentType","newIndex","previousType","previousIndex","Schema$1","implicit","explicit","concat","type$1","loadKind","compiledImplicit","compiledExplicit","compiledTypeMap","scalar","mapping","fallback","collectType","compileMap","seq","failsafe","_null","canonical","lowercase","uppercase","camelcase","empty","bool","isOctCode","isDecCode","int","ch","hasDigits","charCodeAt","sign","parseInt","binary","octal","decimal","hexadecimal","toUpperCase","YAML_FLOAT_PATTERN","SCIENTIFIC_WITHOUT_DOT","float","POSITIVE_INFINITY","NaN","parseFloat","isNaN","json","YAML_DATE_REGEXP","YAML_TIMESTAMP_REGEXP","timestamp","year","month","day","hour","minute","second","date","fraction","delta","Date","UTC","setTime","getTime","toISOString","merge","BASE64_MAP","idx","bitlen","charAt","tailbits","bits","Uint8Array","_hasOwnProperty$3","_toString$2","omap","pair","pairKey","pairHasKey","objectKeys","_toString$1","pairs","_hasOwnProperty$2","_default","_hasOwnProperty$1","PATTERN_NON_PRINTABLE","PATTERN_NON_ASCII_LINE_BREAKS","PATTERN_FLOW_INDICATORS","PATTERN_TAG_HANDLE","PATTERN_TAG_URI","_class","is_EOL","is_WHITE_SPACE","is_WS_OR_EOL","is_FLOW_INDICATOR","fromHexCode","lc","simpleEscapeSequence","charFromCodepoint","fromCharCode","simpleEscapeCheck","simpleEscapeMap","State$1","filename","onWarning","legacy","listener","implicitTypes","typeMap","lineIndent","firstTabInLine","documents","generateError","state","throwError","throwWarning","directiveHandlers","YAML","major","minor","version","checkLineBreaks","TAG","handle","tagMap","captureSegment","start","end","checkJson","_position","_length","_character","_result","mergeMappings","destination","overridableKeys","quantity","storeMappingPair","keyTag","keyNode","valueNode","startLine","startLineStart","startPos","configurable","writable","readLineBreak","skipSeparationSpace","allowComments","checkIndent","lineBreaks","testDocumentSeparator","writeFoldedLines","readBlockSequence","nodeIndent","_line","_tag","_anchor","detected","anchorMap","composeNode","readTagProperty","tagHandle","tagName","isVerbatim","isNamed","readAnchorProperty","parentIndent","nodeContext","allowToSeek","allowCompact","allowBlockStyles","allowBlockScalars","allowBlockCollections","typeIndex","typeQuantity","typeList","flowIndent","blockIndent","indentStatus","atNewLine","hasContent","following","_keyLine","_keyLineStart","_keyPos","atExplicitKey","readBlockMapping","_lineStart","_pos","terminator","isPair","isExplicitPair","isMapping","readNext","readFlowCollection","captureStart","folding","tmp","chomping","didReadContent","detectedIndent","textIndent","emptyLines","atMoreIndented","readBlockScalar","captureEnd","readSingleQuotedScalar","hexLength","hexResult","readDoubleQuotedScalar","readAlias","withinFlowCollection","hasPendingContent","_lineIndent","_kind","readPlainScalar","readDocument","directiveName","directiveArgs","documentStart","hasDirectives","loadDocuments","nullpos","loader","loadAll","iterator","load","_toString","_hasOwnProperty","CHAR_BOM","ESCAPE_SEQUENCES","DEPRECATED_BOOLEANS_SYNTAX","DEPRECATED_BASE60_SYNTAX","encodeHex","character","State","noArrayIndent","skipInvalid","flowLevel","styleMap","compileStyleMap","sortKeys","lineWidth","noRefs","noCompatMode","condenseFlow","quotingType","forceQuotes","replacer","explicitTypes","duplicates","usedDuplicates","indentString","spaces","generateNextLine","level","isWhitespace","isPrintable","isNsCharOrWhitespace","isPlainSafe","prev","inblock","cIsNsCharOrWhitespace","cIsNsChar","codePointAt","first","needIndentIndicator","chooseScalarStyle","singleLineOnly","indentPerLevel","testAmbiguousType","char","prevChar","hasLineBreak","hasFoldableLine","shouldTrackWidth","previousLineBreak","plain","isPlainSafeLast","writeScalar","iskey","dump","testImplicitResolving","blockHeader","dropEndingNewline","width","moreIndented","lineRe","nextLF","lastIndex","foldLine","prevMoreIndented","foldString","escapeSeq","escapeString","indentIndicator","clip","breakRe","curr","writeBlockSequence","writeNode","detectType","isblockseq","tagStr","duplicateIndex","duplicate","objectOrArray","objectKey","objectValue","explicitPair","pairBuffer","objectKeyList","sort","writeBlockMapping","writeFlowMapping","writeFlowSequence","encodeURI","getDuplicateReferences","objects","duplicatesIndexes","inspectNode","renamed","Schema","FAILSAFE_SCHEMA","JSON_SCHEMA","CORE_SCHEMA","DEFAULT_SCHEMA","YAMLException","safeLoad","safeLoadAll","safeDump","types_1","discrError","Tag","oneOf","applyTagSchema","oneOfMapping","topRequired","hasRequired","tagRequired","propSch","addMappings","required","addMapping","enum","tagValue","getMapping","Mapping","validateMapping","items_1","validateTuple","escapeFragment","dpType","dataContextProps","_nextData","jtdDiscriminator","jtdMetadata","ValueError","UsedValueState","_prefixes","_parent","_newName","_nameGroup","nameStr","setValue","itemIndex","scopePath","valueKey","vs","_name","values","_reduceValues","usedValues","getCode","valueCode","nameSet","Started","Completed","validateArray","extraItems","fullTuple","minItems","maxItems","checkStrictTuple","validateUnion","prec","multipleOfPrecision","invalid","jsonTypes","groups","boolean","getEql","vSchema","equalCode","cb","_traverse","pre","rootSchema","parentKeyword","keyIndex","arrayKeywords","propsKeywords","skipKeywords","additionalItems","contains","propertyNames","allOf","$defs","patternProperties","multipleOf","minLength","pattern","maxProperties","minProperties","util_2","patterns","alwaysValidPatterns","checkProperties","allowMatchingProperties","checkMatchingProperties","pat","validateProperties","alwaysValid","validatePatternProperties","additionalItems_1","prefixItems","validateAdditionalItems","hasPropFunc","isOwnProperty","schemaMap","context","dataAndSchema","valCxt","rootData","dynamicRef","newRegExp","validArr","notValid","decodeCache","decode","exclude","defaultChars","getDecodeCache","b1","b2","chr","b3","b4","componentChars","encodeCache","encode","keepEscaped","getEncodeCache","nextCode","url","protocol","slashes","auth","hostname","pathname","search","Url","protocolPattern","portPattern","simplePathPattern","unwise","autoEscape","nonHostChars","hostEndingChars","hostnamePartPattern","hostnamePartStart","hostlessProtocol","javascript","slashedProtocol","ftp","gopher","file","slashesDenoteHost","lowerProto","hec","rest","trim","simplePath","proto","substr","atSign","hostEnd","lastIndexOf","parseHost","ipv6Hostname","hostparts","newpart","validParts","notHost","bit","unshift","qm","Uint16Array","decodeMap","fromCodePoint","codePoint","replaceCodePoint","CharCodes","BinTrieFlags","EntityDecoderState","DecodingMode","ZERO","NINE","isHexadecimalCharacter","UPPER_A","UPPER_F","LOWER_A","LOWER_F","isEntityInAttributeInvalidEnd","EQUALS","UPPER_Z","LOWER_Z","isAsciiAlphaNumeric","EntityDecoder","decodeTree","emitCodePoint","EntityStart","consumed","treeIndex","excess","decodeMode","Strict","startEntity","write","offset","NUM","NumericStart","stateNumericStart","NamedEntity","stateNamedEntity","NumericDecimal","stateNumericDecimal","NumericHex","stateNumericHex","LOWER_X","addToNumericResult","base","digitCount","pow","startIdx","emitNumericEntity","lastCp","expectedLength","absenceOfDigitsInNumericCharacterReference","SEMI","missingSemicolonAfterCharacterReference","validateNumericCharacterReference","current","valueLength","VALUE_LENGTH","determineBranch","Attribute","emitNotTerminatedNamedEntity","emitNamedEntityData","getDecoder","ret","decoder","nodeIdx","branchCount","BRANCH_LENGTH","jumpOffset","JUMP_TABLE","lo","hi","mid","midVal","htmlDecoder","htmlDecodeTree","xmlDecodeTree","decodeHTML","Legacy","restoreDiff","xmlCodeMap","getEscaper","lastIdx","substring","EntityLevel","EncodingMode","isString","TypeError","arrayReplaceAt","src","newElements","isValidEntityCode","surrogate1","surrogate2","UNESCAPE_MD_RE","UNESCAPE_ALL_RE","DIGITAL_ENTITY_TEST_RE","unescapeMd","unescapeAll","escaped","entity","decoded","replaceEntityPattern","HTML_ESCAPE_TEST_RE","HTML_ESCAPE_REPLACE_RE","HTML_REPLACEMENTS","replaceUnsafeChar","escapeHtml","REGEXP_ESCAPE_RE","escapeRE","isSpace","isWhiteSpace","isPunctChar","ucmicro","isMdAsciiPunct","normalizeReference","lib","mdurl","parseLinkLabel","disableNested","found","marker","prevPos","posMax","oldPos","md","inline","skipToken","labelEnd","parseLinkDestination","parseLinkTitle","prev_state","can_continue","default_rules","Renderer","code_inline","tokens","slf","renderAttrs","content","code_block","fence","info","highlighted","langName","langAttrs","highlight","attrIndex","tmpAttrs","attrs","langPrefix","tmpToken","image","renderInlineAsText","children","renderToken","hardbreak","xhtmlOut","softbreak","breaks","html_block","html_inline","hidden","nesting","needLf","nextToken","renderInline","Ruler","__rules__","__cache__","__find__","__compile__","chains","enabled","alt","altName","chain","fn","at","beforeName","ruleName","after","afterName","enable","list","ignoreInvalid","enableOnly","disable","chainName","Token","markup","attrPush","attrData","attrSet","attrGet","attrJoin","StateCore","inlineMode","NEWLINES_RE","NULL_RE","isLinkClose","RARE_RE","SCOPED_ABBR_TEST_RE","SCOPED_ABBR_RE","SCOPED_ABBR","r","tm","replaceFn","replace_scoped","inlineTokens","inside_autolink","replace_rare","QUOTE_TEST_RE","QUOTE_RE","replaceAt","process_inlines","thisLevel","OUTER","canOpen","canClose","isSingle","lastChar","nextChar","isLastPunctChar","isNextPunctChar","isLastWhiteSpace","isNextWhiteSpace","single","openQuote","closeQuote","quotes","_rules","tok","blockTokens","linkify","pretest","htmlLinkLevel","currentToken","links","lastPos","ln","fullUrl","normalizeLink","validateLink","urlText","normalizeLinkText","token_o","token_t","token_c","blkIdx","typographer","last","Core","ruler","StateBlock","bMarks","eMarks","tShift","sCount","bsCount","blkIndent","lineMax","tight","ddIndent","listIndent","parentType","indent_found","isEmpty","skipEmptyLines","skipSpaces","skipSpacesBack","skipChars","skipCharsBack","getLines","begin","keepLastLF","queue","escapedSplit","isEscaped","skipBulletListMarker","skipOrderedListMarker","open_tag","close_tag","HTML_TAG_RE","HTML_OPEN_CLOSE_TAG_RE","HTML_SEQUENCES","endLine","silent","nextLine","firstCh","secondCh","lineText","columns","aligns","shift","columnCount","oldParentType","terminatorRules","tableLines","token_ho","token_il","tbodyLines","autocompletedCells","terminate","token_tdo","mem","haveEndMarker","oldLineMax","oldBMarks","oldBSCount","oldSCount","oldTShift","lastLineEmpty","isOutdented","spaceAfterMarker","adjustTab","initial","oldIndent","tokenize","cnt","isOrdered","markerValue","posAfterMarker","isTerminatingParagraph","markerCharCode","listTokIdx","listLines","prevEmptyEnd","contentStart","indentAfterMarker","itemLines","oldTight","oldListIndent","markTightParagraphs","_endLine","getNextLine","isContinuation","lineContent","destRes","helpers","href","destEndPos","destEndLineNo","title","titleRes","references","html","token_i","ParserBlock","maxNesting","hasEmptyLines","prevLine","outTokens","StateInline","tokens_meta","pending","pendingLevel","delimiters","_prev_delimiters","backticks","backticksScanned","linkLevel","pushPending","token_meta","scanDelims","canSplitWord","left_flanking","right_flanking","can_open","can_close","isTerminatorChar","SCHEME_RE","ESCAPED","postProcess","loneMarkers","startDelim","endDelim","scanned","open","close","isStrong","EMAIL_RE","AUTOLINK_RE","DIGITAL_RE","NAMED_RE","processDelimiters","openersBottom","headerIdx","lastTokenIdx","jumps","closerIdx","closer","minOpenerIdx","openerIdx","newMinOpenerIdx","opener","isOddMatch","lastJump","link","matchAtStart","pmax","ch1","escapedStr","ch2","origStr","openerLength","matchStart","matchEnd","closerLength","r_strikethrough","r_emphasis","parseReference","labelStart","isLetter","_rules2","ParserInline","ruler2","isFunction","defaultOptions","fuzzyLink","fuzzyEmail","fuzzyIP","defaultSchemas","src_auth","src_host_port_strict","src_path","no_http","src_domain","src_domain_root","src_port","src_host_terminator","mailto","src_email_name","src_host_strict","tlds_default","src_Any","Any","src_Cc","Cc","src_Z","Z","src_P","P","src_ZPCc","src_ZCc","text_separators","src_pseudo_letter","src_ip4","src_xn","src_host","tpl_host_fuzzy","tpl_host_no_ip_fuzzy","tpl_host_fuzzy_strict","tpl_host_port_fuzzy_strict","tpl_host_port_no_ip_fuzzy_strict","tpl_host_fuzzy_test","tpl_email_fuzzy","tpl_link_fuzzy","tpl_link_no_ip_fuzzy","reFactory","__opts__","tlds","__tlds__","untpl","tpl","src_tlds","onCompile","__tlds_replaced__","email_fuzzy","link_fuzzy","link_no_ip_fuzzy","host_fuzzy_test","aliases","schemaError","val","__compiled__","__schemas__","compiled","isRegExp","createValidator","normalize","slist","schema_test","schema_search","schema_at_start","__index__","__text_cache__","resetScanCache","Match","__last_index__","__schema__","raw","createMatch","LinkifyIt","m","ml","me","tld_pos","at_pos","testSchemaAt","keepOld","el","reverse","maxInt","regexPunycode","regexNonASCII","regexSeparators","stringFromCharCode","RangeError","mapDomain","domain","callback","parts","encoded","ucs2decode","counter","extra","digitToBasic","digit","flag","adapt","numPoints","firstTime","baseMinusTMin","inputLength","bias","basic","oldi","w","baseMinusT","currentValue","basicLength","handledCPCount","handledCPCountPlusOne","q","qMinusT","codePoints","config","zero","rules2","commonmark","BAD_PROTO_RE","GOOD_DATA_RE","RECODE_HOSTNAME_FOR","parsed","punycode","er","MarkdownIt","presetName","utils","ParserCore","renderer","configure","presets","missed","use","plugin","apply","parseInline","ucs2length","useRefCallback","keepInit","callbackRef","useRef","useCallback","boolSchema_1","dataType_2","defaults_1","keyword_1","subschema_1","validateFunction","funcSourceUrl","destructureValCxtES5","destructureValCxt","subschemaCode","isSchemaObj","checkKeywords","schemaCxtHasRules","$comment","commentKeyword","updateContext","checkAsyncSchema","typeAndKeywords","subSchemaObjCode","boolOrEmptySchema","checkRefsAndKeywords","schemaKeywords","coerceAndCheckDataType","typeErrors","groupKeywords","iterateKeywords","includesType","strictTypesError","withTypes","narrowSchemaTypes","checkContextTypes","allowUnionTypes","checkMultipleTypes","hasApplicableType","checkKeywordTypes","checkStrictTypes","keywordCode","assignDefaults","schTs","kwdT","checkNoDefault","resetEvaluated","assignEvaluated","returnResults","topSchemaObjCode","topBoolOrEmptySchema","validateKeywordUsage","getData","validSchemaType","successAction","failAction","invalid$data","append","errorParams","_error","reportExtraError","$dataError","keyword$DataError","resetErrorsCount","codeBlock","$dataValid","check$data","wrong$DataType","validateSchemaRef","invalid$DataSchema","appl","getSubschema","extendSubschemaData","extendSubschemaMode","nextContext","funcKeywordCode","macroKeywordCode","JSON_POINTER","RELATIVE_JSON_POINTER","up","errorMsg","segment","pointerType","jsonPos","jsonLen","jsonPart","ucs2length_1","valueOf","resolveComponents","relative","skipNormalization","cmpts","reference","authority","absolutePath","hexLookUp","URI_PARSE","uri","gotEncoding","isIP","ipv4result","ipv6result","unicodeSupport","nonSimpleDomain","URL","domainToASCII","fastUri","baseURI","relativeURI","schemelessOptions","uriA","uriB","prefixItems_1","items2020_1","contains_1","dependencies_1","propertyNames_1","properties_1","patternProperties_1","not_1","anyOf_1","oneOf_1","allOf_1","if_1","thenElse_1","draft2020","applicator","boolError","falseSchemaError","validation_1","applicator_1","format_1","metadata_1","draft7Vocabularies","metadataVocabulary","contentVocabulary","additionalProperty","patProps","deleteAdditional","additionalPropertyCode","applyAdditionalSchema","definedProp","propsSchema","isAdditional"],"sourceRoot":""}